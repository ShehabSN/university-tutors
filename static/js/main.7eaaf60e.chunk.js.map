{"version":3,"sources":["firebase.js","Auth.js","views/LoadingPage.js","RedirectRoute.js","RequireAuth.js","RequireUserType.js","views/dashboard/appointments/AppointmentCard.js","views/dashboard/appointments/Appointments.js","graphql/queries.js","views/dashboard/Title.js","views/dashboard/OfferingTile.js","views/dashboard/Offerings.js","graphql/mutations.js","views/dashboard/student/Profile.js","views/dashboard/student/StudentDashboard.js","views/dashboard/tutor/Availability.js","views/dashboard/NewCourseDialog.js","views/dashboard/tutor/EditOfferingDialog.js","views/dashboard/tutor/EditProfileDialog.js","views/dashboard/tutor/Profile.js","views/dashboard/tutor/RequestsCards.js","views/dashboard/tutor/Requests.js","views/dashboard/tutor/ReviewsCards.js","views/dashboard/tutor/Reviews.js","views/dashboard/tutor/TutorDashboard.js","views/dashboard/Dashboard.js","views/Onboarding.js","views/SignIn.js","views/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","userType","useRef","getToken","useCallback","user","a","getIdTokenResult","result","claims","token","axios","get","uid","newTokenRes","status","getIdToken","newToken","observerCallback","firebaseUser","localStorage","setItem","authorization","url","method","headers","Authorization","data","query","variables","user_id","queryResult","errors","console","log","user_by_pk","tutor","tutor_id","type","student","student_id","current","useEffect","onAuthStateChanged","httpLink","createHttpLink","uri","authLink","setContext","_","client","ApolloClient","connectToDevTools","link","concat","cache","InMemoryCache","Provider","value","ApolloProvider","LoadingPage","Box","display","justifyContent","alignItems","width","height","CircularProgress","RedirectRoute","useContext","location","useLocation","getItem","to","state","from","RequireAuth","pathname","RequireUserType","AppointmentCard","appointment","Card","sx","minHeight","CardContent","Typography","mb","variant","studentName","course","Grid","container","item","mr","AccessTimeOutlined","fontSize","color","time","LocationOnOutlined","CardActions","disableSpacing","hasNote","Button","size","Appointments","mt","columns","xs","rowSpacing","date","appointments","map","day","i","columnSpacing","j","GET_UNIVERSITIES","gql","GET_DEPARTMENTS","GET_OFFERINGS","GET_STUDENT_PROFILE","GET_TUTOR_PROFILE","GET_COURSES","Title","props","component","gutterBottom","OfferingTile","offering","Paper","p","flexDirection","course_id","name","Stack","direction","spacing","divider","Divider","orientation","flexItem","md","AccountCircle","Paid","hourly_rate","bio","grade_received","minWidth","School","noWrap","year_taken","professor_name","Offerings","filter","setFilter","useQuery","department","loading","error","departments","Container","maxWidth","Autocomplete","disablePortal","options","onChange","renderInput","params","TextField","label","onSelect","JSON","stringify","OfferingResults","onClick","INSERT_TUTOR","INSERT_STUDENT","UPDATE_STUDENT","UPDATE_TUTOR","CREATE_OFFERING","UPDATE_OFFERING","DELETE_OFFERING","CREATE_COURSE","Profile","useMutation","id","updateStudent","refetch","student_by_pk","universities","university","uni","university_id","onSave","event","preventDefault","FormData","currentTarget","major","year","onCompleted","ProfileForm","setUniversity","onSubmit","noValidate","fullWidth","autoComplete","defaultValue","isOptionEqualToValue","option","newValue","StudentDashboard","page","navigate","useNavigate","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","Drawer","MuiDrawer","position","whiteSpace","boxSizing","overflowX","breakpoints","up","useTheme","fullDrawer","useMediaQuery","setOpen","anchor","setAnchor","toggleDrawer","drawerItems","Event","CssBaseline","Toolbar","pr","IconButton","edge","aria-label","marginRight","flexGrow","px","List","icon","ListItem","selected","button","toLowerCase","replace","ListItemIcon","ListItemText","primary","signOut","removeItem","anchorEl","onClose","MenuListProps","MenuItem","backgroundColor","palette","mode","grey","overflow","Availability","Date","setValue","weekdaySlots","availabile","weekendSlots","days","number","slots","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","views","minDate","maxDate","helperText","slot","marginBottom","NewCourseDialog","handleClose","createCourse","names","Dialog","DialogTitle","DialogContent","uniName","find","u","required","DialogActions","form","EditOfferingDialog","newCourse","setNewCourse","courses","isEditing","Boolean","offering_id","disabled","Add","EditProfileDialog","updateTutor","createOffering","updateOffering","deleteOffering","editProfile","setEditProfile","editingOffering","setEditingOffering","tutor_by_pk","baseOfferings","offerings","handleDeleteOffering","useStyles","makeStyles","root","bullet","margin","transform","title","pos","ReviewsCards","requests","classes","className","align","professorName","comment","justify","request","gridContainer","paddingLeft","paddingRight","paddingTop","Requests","sm","reviews","Rating","stars","readOnly","userReviews","review_id","Reviews","TutorDashboard","HourglassFull","Star","Dashboard","Onboarding","insertTutor","insertStudent","CardActionArea","SignIn","marginTop","Avatar","m","bgcolor","email","password","signInWithEmailAndPassword","then","catch","errorMessage","message","autoFocus","SignUp","createUserWithEmailAndPassword","createTheme","main","teal","App","ThemeProvider","rel","href","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7eaaf60e.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\n","import {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { onAuthStateChanged } from \"@firebase/auth\";\nimport axios from \"axios\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { auth } from \"./firebase\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState();\n  const userType = useRef();\n\n  const getToken = useCallback(async (user) => {\n    if (user) {\n      let result = await user.getIdTokenResult();\n      if (result.claims[\"https://hasura.io/jwt/claims\"]) {\n        return result.token;\n      } else {\n        let newTokenRes = await axios.get(\n          `${process.env.REACT_APP_REFRESH_FUNCTION_URL}?uid=${auth.currentUser.uid}`\n        );\n        if (newTokenRes?.status === 200) {\n          let newToken = await auth.currentUser.getIdToken(true);\n          return newToken;\n        } else {\n          return null;\n        }\n      }\n    }\n  }, []);\n\n  const observerCallback = useCallback(\n    async (firebaseUser) => {\n      if (firebaseUser?.uid) {\n        localStorage.setItem(\"li\", \"true\");\n        setPending(true);\n\n        let token = await getToken(firebaseUser);\n        let authorization = `Bearer ${token}`;\n        const queryResult = await axios({\n          url: process.env.REACT_APP_HASURA_ENDPOINT,\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: authorization,\n          },\n          data: {\n            query: `\n              query GetUserType($user_id: String!) {\n                user_by_pk(user_id: $user_id) {\n                  tutor {\n                    tutor_id\n                  }\n                  student {\n                    student_id\n                  }\n                }\n              }\n            `,\n            variables: {\n              user_id: firebaseUser.uid,\n            },\n          },\n        });\n        if (queryResult.data.errors) {\n          console.log(\"handle error, \", queryResult.data.errors);\n        } else {\n          let type;\n          if (queryResult.data.data.user_by_pk?.tutor?.tutor_id) {\n            type = \"tutor\";\n          } else if (queryResult.data.data.user_by_pk?.student?.student_id) {\n            type = \"student\";\n          }\n          userType.current = type;\n        }\n\n        setPending(false);\n        setCurrentUser(firebaseUser);\n      } else {\n        setCurrentUser(null);\n        userType.current = null;\n      }\n    },\n    [getToken]\n  );\n\n  useEffect(() => {\n    onAuthStateChanged(auth, observerCallback);\n  }, [observerCallback]);\n\n  const httpLink = createHttpLink({\n    uri: process.env.REACT_APP_HASURA_ENDPOINT,\n  });\n\n  const authLink = setContext(async (_, { headers }) => {\n    let token = await getToken(currentUser);\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    };\n  });\n\n  const createApolloClient = () => {\n    return new ApolloClient({\n      connectToDevTools: true,\n      link: authLink.concat(httpLink),\n      cache: new InMemoryCache(),\n    });\n  };\n\n  const client = createApolloClient();\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        userType,\n        pending,\n      }}\n    >\n      <ApolloProvider client={client}>{children}</ApolloProvider>\n    </AuthContext.Provider>\n  );\n};\n","import { Box, CircularProgress } from \"@mui/material\";\nimport * as React from \"react\";\n\nexport default function LoadingPage() {\n  return <Box\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    width=\"100%\"\n    height=\"100vh\"\n  >\n    <CircularProgress />\n  </Box>;\n}","import React, { useContext } from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\nimport LoadingPage from \"./views/LoadingPage\";\n\nexport default function RedirectRoute({ children }) {\n  const { currentUser } = useContext(AuthContext);\n  const location = useLocation();\n\n  if (localStorage.getItem(\"li\") && !currentUser) {\n    return <LoadingPage />;\n  } else if (currentUser && currentUser.uid) {\n    return <Navigate to={location.state?.from ?? \"/\"} />;\n  } else {\n    return children;\n  }\n}\n","import React, { useContext } from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\nimport LoadingPage from \"./views/LoadingPage\";\n\nexport default function RequireAuth({ children }) {\n  let { currentUser, userType } = useContext(AuthContext);\n  let location = useLocation();\n\n  if (localStorage.getItem(\"li\") && !currentUser) {\n    return <LoadingPage />;\n  } else if (!currentUser) {\n    return <Navigate to=\"/signin\" state={{ from: location }} />;\n  } else if (userType.current && location.pathname === \"/onboarding\") {\n    return <Navigate to=\"/\" />;\n  } else {\n    return children;\n  }\n}\n","import React, { useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\nimport LoadingPage from \"./views/LoadingPage\";\n\nexport default function RequireUserType({ children }) {\n  let { userType, pending } = useContext(AuthContext);\n\n  if (pending) {\n    return <LoadingPage />;\n  } else if (!userType.current) {\n    return <Navigate to=\"/onboarding\" />;\n  } else {\n    return children;\n  }\n}\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport { CardContent } from \"@mui/material\";\nimport { LocationOnOutlined, AccessTimeOutlined } from \"@mui/icons-material\";\nimport Grid from \"@mui/material/Grid\";\n\nexport default function AppointmentCard({ appointment }) {\n  return (\n    <div>\n      <Card\n        sx={{\n          minHeight: 200,\n        }}\n      >\n        <CardContent>\n          <Typography mb={1} variant=\"h6\">\n            {appointment.studentName}\n          </Typography>\n          <Typography mb={1} variant=\"body1\">\n            {appointment.course}\n          </Typography>\n          <Grid container>\n            <Grid item mr={1}>\n              <AccessTimeOutlined fontSize={\"10\"} />\n            </Grid>\n            <Grid item>\n              <Typography color=\"textSecondary\" variant=\"body1\">\n                {appointment.time}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item mr={1}>\n              <LocationOnOutlined fontSize={\"10\"} color=\"textSecondary\" />\n            </Grid>\n            <Grid item>\n              <Typography color=\"textSecondary\" variant=\"body1\">\n                {appointment.location}\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions disableSpacing={true}>\n          {appointment.hasNote && <Button size=\"small\">See Notes</Button>}\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n","import { Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { Fragment } from \"react\";\nimport AppointmentCard from \"./AppointmentCard\";\n\nexport default function Appointments() {\n  const days = [\n    {\n      date: \"Today\",\n      appointments: [\n        {\n          studentName: \"Adrian Chen\",\n          course: \"CPSC 471\",\n          time: \"2:00pm to 4:00pm\",\n          location: \"Mathematical Sciences 235\",\n          hasNote: true,\n        },\n        {\n          studentName: \"Jaydin Lee\",\n          course: \"CPSC 351\",\n          time: \"12:00am to 1:00pm\",\n          location: \"Scurfield Hall\",\n          hasNote: true,\n        },\n        {\n          studentName: \"Shahab Salem\",\n          course: \"MATH 271\",\n          time: \"10:00am to 11:00am\",\n          location: \"Mathematical Sciences 162\",\n        },\n        {\n          studentName: \"Jacob Samuels\",\n          course: \"HTST 301\",\n          time: \"5:00pm to 6:00pm\",\n          location: \"Science Theatres 205\",\n          hasNote: true,\n        },\n        {\n          studentName: \"Rebecca Lemont\",\n          course: \"ENGL 406 \",\n          time: \"8:00am to 10:00am\",\n          location: \"ENG A 185\",\n        },\n      ],\n    },\n    {\n      date: \"Tomorrow\",\n      appointments: [\n        {\n          studentName: \"Adrian Chen\",\n          course: \"CPSC 471\",\n          time: \"2:00pm to 4:00pm\",\n          location: \"Mathematical Sciences 235\",\n          hasNote: true,\n        },\n        {\n          studentName: \"Jaydin Lee\",\n          course: \"CPSC 351\",\n          time: \"12:00pm to 1:00pm\",\n          location: \"Scurfield Hall\",\n          hasNote: true,\n        },\n        {\n          studentName: \"Shahab Salem\",\n          course: \"MATH 271\",\n          time: \"10:00am to 11:00am\",\n          location: \"Mathematical Sciences 162\",\n        },\n        {\n          studentName: \"Jacob Samuels\",\n          course: \"HTST 301\",\n          time: \"5:00pm to 6:00pm\",\n          location: \"Science Theatres 205\",\n          hasNote: true,\n        },\n        {\n          studentName: \"Rebecca Lemont\",\n          course: \"ENGL 406 \",\n          time: \"8:00am to 10:00am\",\n          location: \"ENG A 185\",\n        },\n      ],\n    },\n  ];\n  return (\n    <Grid container mt={6} columns={10}>\n      <Grid item xs={2.25} />\n      <Grid\n        container\n        item\n        xs={5.5}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        rowSpacing={5}\n      >\n        {days.map((day, i) => {\n          return (\n            <Fragment key={i}>\n              <Grid item xs={12}>\n                <Typography variant=\"h5\">{day.date}</Typography>\n              </Grid>\n              <Grid\n                item\n                container\n                columns={15}\n                columnSpacing={2}\n                rowSpacing={2}\n              >\n                {day.appointments.map((appointment, j) => {\n                  return (\n                    <Grid item xs={5} key={j}>\n                      <AppointmentCard appointment={appointment} />\n                    </Grid>\n                  );\n                })}\n              </Grid>\n            </Fragment>\n          );\n        })}\n      </Grid>\n      <Grid item xs={2.25} />\n    </Grid>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const GET_USER_TYPE = gql`\n  query GetUserType($user_id: String!) {\n    user_by_pk(user_id: $user_id) {\n      tutor {\n        tutor_id\n      }\n      student {\n        student_id\n      }\n    }\n  }\n`;\n\nexport const GET_UNIVERSITIES = gql`\n  query GetUniversities {\n    university(order_by: {name: asc}) {\n      university_id\n      name\n    }\n  }\n`;\n\nexport const GET_DEPARTMENTS = gql`\n  query GetDepartments {\n    course(distinct_on: department, order_by: {department: asc}) {\n      department\n    }\n  }\n`;\n\nexport const GET_OFFERINGS = gql`\n  query GetOfferings($department: String!) {\n    offering(\n      where: {course: {department: {_ilike: $department}}},\n      order_by: {course_id: asc},\n    ) {\n      offering_id\n      grade_received\n      professor_name\n      year_taken\n      course {\n        course_id\n        name\n        department\n      }\n      tutor {\n        tutor_id\n        hourly_rate\n        bio\n        user {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_STUDENT_PROFILE = gql`\n  query GetStudentProfile($id: String!) {\n    student_by_pk(student_id: $id) {\n      major\n      year\n      user {\n        name\n        university {\n          university_id\n          name\n        }\n      }\n    }\n    university(order_by: {name: asc}) {\n      university_id\n      name\n    }\n  }\n`;\n\nexport const GET_TUTOR_PROFILE = gql`\n  query GetTutorProfile($id: String!) {\n    tutor_by_pk(tutor_id: $id) {\n      bio\n      hourly_rate\n      user {\n        name\n        university {\n          university_id\n          name\n        }\n      }\n      offerings(order_by: {course_id: asc}) {\n        offering_id\n        grade_received\n        professor_name\n        year_taken\n        course {\n          course_id\n          name\n          department\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_COURSES = gql`\n  query GetCourses {\n    course(order_by: {course_id: asc}) {\n      course_id\n      name\n      department\n    }\n  }\n`;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@mui/material/Typography\";\n\nfunction Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;\n","import { AccountCircle, Paid, School } from \"@mui/icons-material\";\nimport { Divider, Grid, Paper, Stack, Typography } from \"@mui/material\";\nimport * as React from \"react\";\nimport Title from \"./Title\";\n\nexport default function OfferingTile({ offering, children }) {\n  return <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\n    <Title>\n      {`${offering.course.course_id} ${offering.course.name}`}\n    </Title>\n    <Stack\n      direction=\"row\"\n      spacing={2}\n      divider={<Divider orientation=\"vertical\" flexItem />}\n    >\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n            <AccountCircle fontSize=\"small\" />\n            <Typography variant=\"h6\">\n              {offering.tutor.user.name}\n            </Typography>\n          </Stack>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n            <Paid fontSize=\"small\" />\n            <Typography variant=\"h6\">\n              {`$${offering.tutor.hourly_rate}/hr`}\n            </Typography>\n          </Stack>\n        </Grid>\n        <Grid item xs={12}>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n            <Typography variant=\"body1\">\n              {offering.tutor.bio}\n            </Typography>\n          </Stack>\n        </Grid>\n      </Grid>\n      {offering.grade_received\n        ? <Stack alignItems=\"center\" justifyContent=\"center\" minWidth={60}>\n          <School/>\n          <Typography variant=\"h5\">\n            {offering.grade_received}\n          </Typography>\n          <Typography variant=\"caption\" noWrap>\n            {offering.year_taken}\n          </Typography>\n          <Typography variant=\"caption\" noWrap>\n            {offering.professor_name}\n          </Typography>\n        </Stack>\n        : null}\n    </Stack>\n    {children}\n  </Paper>;\n}","import { useQuery } from \"@apollo/client\";\nimport { Autocomplete, Button, CircularProgress, Container, Grid, Stack, TextField } from \"@mui/material\";\nimport * as React from \"react\";\nimport { GET_DEPARTMENTS, GET_OFFERINGS } from \"../../graphql/queries\";\nimport LoadingPage from \"../LoadingPage\";\nimport OfferingTile from \"./OfferingTile\";\n\nexport default function Offerings() {\n  const [filter, setFilter] = React.useState(null);\n\n  const { loading, error, data } = useQuery(GET_DEPARTMENTS, {\n    variables: {\n      department: filter || '%',\n    },\n  });\n\n  if (loading) return <LoadingPage />\n  if (error) return `${error}`;\n\n  const departments = data.course.map((course) => course.department);\n\n  const tutorSelect = (offering) => {\n    console.log(JSON.stringify(offering, null, 2));\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} display=\"flex\" justifyContent=\"flex-end\">\n          <Autocomplete\n            disablePortal\n            options={departments}\n            value={filter}\n            onChange={(_, value) => setFilter(value)}\n            sx={{ width: 200 }}\n            renderInput={(params) => (\n              <TextField\n                label=\"Filter by department\"\n                {...params}\n              />\n            )}\n          />\n        </Grid>\n        <OfferingResults\n          department={filter}\n          onSelect={tutorSelect}\n        />\n      </Grid>\n    </Container>\n  );\n}\n\nconst OfferingResults = ({ department, onSelect }) => {\n  const { loading, error, data } = useQuery(GET_OFFERINGS, {\n    variables: {\n      department: department || '%',\n    },\n  });\n\n  if (loading) return <LoadingPage />;\n  if (error) return `${error}`;\n\n  const offerings = data.offering;\n\n  return offerings.map((offering, i) => (\n    <Grid item xs={12} md={6} key={i}>\n      <OfferingTile\n        offering={offering}\n        children={\n          <Stack mt={2} direction=\"row\">\n            <Button\n              variant=\"contained\"\n              onClick={() => onSelect(offering)}\n            >\n              Book This Tutor\n            </Button>\n          </Stack>\n        }\n      />\n    </Grid>\n  ));\n};\n","import { gql } from \"@apollo/client\";\n\nexport const INSERT_TUTOR = gql`\n  mutation InsertTutor($tutor_id: String!) {\n    insert_tutor_one(object: { tutor_id: $tutor_id }) {\n      tutor_id\n    }\n  }\n`;\n\nexport const INSERT_STUDENT = gql`\n  mutation InsertStudent($student_id: String!) {\n    insert_student_one(object: { student_id: $student_id }) {\n      student_id\n    }\n  }\n`;\n\nexport const UPDATE_STUDENT = gql`\n  mutation UpdateStudent(\n    $id: String!, $name: String!, $university_id: Int, $major: String, $year: Int\n  ) {\n    update_student_by_pk(\n      pk_columns: {student_id: $id},\n      _set: {major: $major, year: $year},\n    ) {\n      student_id\n    }\n    update_user_by_pk(\n      pk_columns: {user_id: $id},\n      _set: {name: $name, university_id: $university_id}\n    ) {\n      user_id\n    }\n  }\n`;\n\nexport const UPDATE_TUTOR = gql`\n  mutation UpdateTutor(\n    $id: String!, $name: String!, $hourly_rate: numeric, $bio: String\n  ) {\n    update_tutor_by_pk(\n      pk_columns: {tutor_id: $id},\n      _set: {hourly_rate: $hourly_rate, bio: $bio}\n    ) {\n      tutor_id\n    }\n    update_user_by_pk(\n      pk_columns: {user_id: $id},\n      _set: {name: $name}\n    ) {\n      user_id\n    }\n  }\n`;\n\nexport const CREATE_OFFERING = gql`\n  mutation CreateOffering(\n    $tutor_id: String!, $course_id: String!, $grade_received: String, $professor_name: String, $year_taken: String\n  ) {\n    insert_offering_one(object: {\n      tutor_id: $tutor_id, course_id: $course_id, grade_received: $grade_received, professor_name: $professor_name, year_taken: $year_taken\n    }) {\n      offering_id\n    }\n  }\n`;\n\nexport const UPDATE_OFFERING = gql`\n  mutation UpdateOffering(\n    $offering_id: Int!, $course_id: String!, $grade_received: String, $professor_name: String, $year_taken: String\n  ) {\n    update_offering_by_pk(\n      pk_columns: {offering_id: $offering_id},\n      _set: {course_id: $course_id, grade_received: $grade_received, professor_name: $professor_name, year_taken: $year_taken}\n    ) {\n      offering_id\n    }\n  }\n`;\n\nexport const DELETE_OFFERING = gql`\n  mutation DeleteOffering($offering_id: Int!) {\n    delete_offering_by_pk(offering_id: $offering_id) {\n      offering_id\n    }\n  }\n`;\n\nexport const CREATE_COURSE = gql`\n  mutation CreateCourse(\n    $course_id: String!, $name: String!, $department: String!, $university_id: Int!\n  ) {\n    insert_course_one(object: {\n      course_id: $course_id, name: $name, department: $department, university_id: $university_id\n    }) {\n      course_id\n    }\n  }\n`;\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  Autocomplete,\n  Button,\n  Container,\n  Grid,\n  Paper,\n  TextField,\n} from \"@mui/material\";\nimport * as React from \"react\";\nimport { AuthContext } from \"../../../Auth\";\nimport { UPDATE_STUDENT } from \"../../../graphql/mutations\";\nimport { GET_STUDENT_PROFILE } from \"../../../graphql/queries\";\nimport LoadingPage from \"../../LoadingPage\";\nimport Title from \"../Title\";\n\nexport default function Profile() {\n  const { currentUser } = React.useContext(AuthContext);\n  const [updateStudent] = useMutation(UPDATE_STUDENT, {\n    variables: {\n      id: currentUser.uid,\n    },\n  });\n\n  // Fetch current user profile\n  const { loading, error, data, refetch } = useQuery(GET_STUDENT_PROFILE, {\n    variables: {\n      id: currentUser.uid,\n    },\n  });\n\n  if (loading) return <LoadingPage />;\n  if (error) return `${error}`;\n\n  // Extract relevant data\n  const student = data.student_by_pk;\n  const universities = data.university.map((uni) => {\n    return {\n      label: uni.name,\n      id: uni.university_id,\n    };\n  });\n\n  // Callback for form\n  const formSave = (event, university) => {\n    // Prevents automatic reload\n    event.preventDefault();\n\n    const data = new FormData(event.currentTarget);\n\n    // Default values to null\n    updateStudent({\n      variables: {\n        name: data.get('name') || null,\n        university_id: university?.id ?? null,\n        major: data.get('major') || null,\n        year: data.get('year') || null,\n      },\n      onCompleted: () => {\n        // Update cache when finished\n        refetch();\n      },\n    });\n  };\n\n  // Separate component required due to the 'university' state\n  return <ProfileForm\n    student={student}\n    universities={universities}\n    onSave={formSave}\n  />;\n}\n\nconst ProfileForm = ({ student, universities, onSave }) => {\n  // Student's current university, or null if not set\n  const [university, setUniversity] = React.useState(\n    student.user.university\n      ? {\n        label: student.user.university.name,\n        id: student.user.university.university_id,\n      }\n      : null\n  );\n\n  return <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n    <Grid container spacing={3} justifyContent={\"center\"}>\n      <Grid item xs={12} md={10}>\n        <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\n          <Title>Your Profile</Title>\n          <Grid\n            container\n            spacing={2}\n            justifyContent={\"center\"}\n            alignItems=\"center\"\n            component=\"form\"\n            onSubmit={(event) => onSave(event, university)}\n            noValidate\n            sx={{ mt: 2 }}\n          >\n            <Grid item xs={10} md={10}>\n              <TextField\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n                autoComplete=\"name\"\n                defaultValue={student.user.name}\n              />\n            </Grid>\n            <Grid item xs={10} md={10}>\n              <Autocomplete\n                disablePortal\n                id=\"university\"\n                options={universities}\n                value={university}\n                isOptionEqualToValue={(option, value) => option.id === value.id}\n                onChange={(_, newValue) => setUniversity(newValue)}\n                renderInput={(params) => (\n                  <TextField\n                    id=\"university\"\n                    label=\"University\"\n                    {...params}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={10} md={5}>\n              <TextField\n                fullWidth\n                id=\"major\"\n                label=\"Major\"\n                name=\"major\"\n                defaultValue={student.major}\n              />\n            </Grid>\n            <Grid item xs={10} md={5}>\n              <TextField\n                fullWidth\n                id=\"year\"\n                label=\"Year\"\n                name=\"year\"\n                type=\"number\"\n                defaultValue={student.year}\n              />\n            </Grid>\n            <Grid item xs={10} sx={{ mt: 2, mb: 2 }}>\n              <Button type=\"submit\" variant=\"contained\">\n                Save\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  </Container>;\n};\n","import { AccountCircle, Event, School } from \"@mui/icons-material\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Divider from \"@mui/material/Divider\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../../../firebase\";\nimport Appointments from \"../appointments/Appointments\";\nimport Offerings from \"../Offerings\";\nimport Profile from \"./Profile\";\n\nexport default function StudentDashboard({ page }) {\n  const navigate = useNavigate();\n  const drawerWidth = 240;\n\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== \"open\",\n  })(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\n  const Drawer = styled(MuiDrawer, {\n    shouldForwardProp: (prop) => prop !== \"open\",\n  })(({ theme, open }) => ({\n    \"& .MuiDrawer-paper\": {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: \"border-box\",\n      ...(!open && {\n        overflowX: \"hidden\",\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing(9),\n        },\n      }),\n    },\n  }));\n\n  const theme = useTheme();\n  const fullDrawer = useMediaQuery(theme.breakpoints.up('sm'));\n\n  const [open, setOpen] = React.useState(true);\n  const [anchor, setAnchor] = React.useState(null);\n\n  const toggleDrawer = (event) => {\n    if (fullDrawer) {\n      setOpen(!open);\n    }\n    else {\n      setAnchor(anchor === null ? event.currentTarget : null);\n    }\n  };\n\n  const drawerItems = [\n    ['Appointments', <Event />],\n    ['Offerings', <School />],\n    ['Profile', <AccountCircle />],\n  ];\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" open={fullDrawer && open}>\n        <Toolbar\n          sx={{\n            pr: \"24px\", // keep right padding when drawer closed\n          }}\n        >\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer}\n            sx={{\n              marginRight: \"36px\",\n              ...(fullDrawer && open && { display: \"none\" }),\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            sx={{ flexGrow: 1 }}\n          >\n            {page}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        open={open}\n        sx={{\n          ...(!fullDrawer && { display: \"none\" }),\n        }}\n      >\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            px: [1],\n          }}\n        >\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n        <Divider />\n        <List>\n          {drawerItems.map(([name, icon], i) => {\n            return <ListItem\n              key={i}\n              selected={page === name}\n              button\n              onClick={() => {\n                navigate(`/${name.toLowerCase()}`, { replace: true });\n              }}\n            >\n              <ListItemIcon>\n                {icon}\n              </ListItemIcon>\n              <ListItemText primary={name} />\n            </ListItem>;\n          })}\n          <Divider />\n          <ListItem\n            button\n            onClick={() => {\n              auth.signOut();\n              localStorage.removeItem(\"li\");\n            }}\n          >\n            <ListItemIcon>\n              <LogoutIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Log Out\" />\n          </ListItem>\n        </List>\n      </Drawer>\n      <Menu\n        anchorEl={anchor}\n        open={!fullDrawer && anchor !== null}\n        onClose={() => setAnchor(null)}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        {drawerItems.map(([name, icon], i) => {\n          return <MenuItem\n            key={i}\n            selected={page === name}\n            onClick={() => {\n              navigate(`/${name.toLowerCase()}`, { replace: true });\n              setAnchor(null);\n            }}\n          >\n            <ListItemIcon>\n              {icon}\n            </ListItemIcon>\n            {name}\n          </MenuItem>;\n        })}\n        <Divider />\n        <MenuItem\n          onClick={() => {\n            auth.signOut();\n            localStorage.removeItem(\"li\");\n          }}\n        >\n          <ListItemIcon>\n            <LogoutIcon />\n          </ListItemIcon>\n          Log Out\n        </MenuItem>\n      </Menu>\n      <Box\n        component=\"main\"\n        sx={{\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"light\"\n              ? theme.palette.grey[100]\n              : theme.palette.grey[900],\n          flexGrow: 1,\n          height: \"100vh\",\n          overflow: \"auto\",\n        }}\n      >\n        <Toolbar />\n        {page === \"Appointments\" ? (\n          <Appointments />\n        ) : page === \"Offerings\" ? (\n          <Offerings />\n        ) : (\n          <Profile />\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import ArrowBackIosNewOutlinedIcon from \"@mui/icons-material/ArrowBackIosNewOutlined\";\nimport ArrowForwardIosOutlinedIcon from \"@mui/icons-material/ArrowForwardIosOutlined\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { useState } from \"react\";\n\nexport default function Availability() {\n  const [value, setValue] = useState(new Date());\n\n  const weekdaySlots = [\n    { time: \"7am\", availabile: false },\n    { time: \"8am\", availabile: false },\n    { time: \"9am\", availabile: false },\n    { time: \"10am\", availabile: false },\n    { time: \"11am\", availabile: false },\n    { time: \"12pm\", availabile: true },\n    { time: \"1pm\", availabile: true },\n    { time: \"2pm\", availabile: true },\n    { time: \"3pm\", availabile: true },\n    { time: \"4pm\", availabile: true },\n    { time: \"5pm\", availabile: true },\n    { time: \"6pm\", availabile: false },\n    { time: \"7pm\", availabile: false },\n    { time: \"8pm\", availabile: false },\n    { time: \"9pm\", availabile: false },\n    { time: \"10pm\", availabile: false },\n  ];\n  const weekendSlots = [\n    { time: \"7am\", availabile: false },\n    { time: \"8am\", availabile: false },\n    { time: \"9am\", availabile: true },\n    { time: \"10am\", availabile: true },\n    { time: \"11am\", availabile: true },\n    { time: \"12pm\", availabile: true },\n    { time: \"1pm\", availabile: false },\n    { time: \"2pm\", availabile: false },\n    { time: \"3pm\", availabile: false },\n    { time: \"4pm\", availabile: false },\n    { time: \"5pm\", availabile: true },\n    { time: \"6pm\", availabile: true },\n    { time: \"7pm\", availabile: true },\n    { time: \"8pm\", availabile: true },\n    { time: \"9pm\", availabile: false },\n    { time: \"10pm\", availabile: false },\n  ];\n\n  const days = [\n    { name: \"MON\", number: 22, slots: weekdaySlots },\n    { name: \"TUES\", number: 23, slots: weekdaySlots },\n    { name: \"WED\", number: 24, slots: weekdaySlots },\n    { name: \"THU\", number: 25, slots: weekdaySlots },\n    { name: \"FRI\", number: 26, slots: weekdaySlots },\n    { name: \"SAT\", number: 27, slots: weekendSlots },\n    { name: \"SUN\", number: 28, slots: weekendSlots },\n  ];\n\n  return (\n    <Grid container mt={3} spacing={3} justifyContent=\"center\">\n      <Grid item xs={12} display=\"flex\" justifyContent=\"center\">\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DatePicker\n            views={[\"year\", \"month\"]}\n            label=\"Year and Month\"\n            minDate={new Date(\"2021-01-25\")}\n            maxDate={new Date(\"2032-06-01\")}\n            value={value}\n            onChange={(newValue) => {\n              setValue(newValue);\n            }}\n            renderInput={(params) => (\n              <TextField {...params} helperText={null} />\n            )}\n          />\n        </LocalizationProvider>\n      </Grid>\n      <Grid item xs={12} md={8} >\n        <Grid container justifyContent={\"center\"} columns={9} >\n          <Grid item container justifyContent=\"center\" xs={1} mt={3}>\n            <ArrowBackIosNewOutlinedIcon size={\"small\"} />\n          </Grid>\n          {days.map((day, i) => {\n            return (\n              <Grid\n                key={i}\n                container\n                item\n                xs={1}\n                direction=\"column\"\n                justifyContent={\"center\"}\n                alignItems={\"center\"}\n                rowSpacing={1}\n              >\n                <Grid item>\n                  <Typography\n                    color={day.name === \"THU\" && \"primary\"}\n                    variant={\"h6\"}\n                  >\n                    {day.name}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography\n                    color={day.name === \"THU\" && \"primary\"}\n                    variant={\"h6\"}\n                  >\n                    {day.number}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <List>\n                    {day.slots.map((slot, j) => {\n                      return (\n                        <ListItem\n                          key={j}\n                          sx={{\n                            marginBottom: \"10px\",\n                          }}\n                          selected={slot.availabile}\n                          button\n                          onClick={() => { }}\n                        >\n                          <ListItemText primary={slot.time} />\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                </Grid>\n              </Grid>\n            );\n          })}\n          <Grid item container justifyContent=\"center\" xs={1} mt={3}>\n            <ArrowForwardIosOutlinedIcon size={\"small\"} />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport { Autocomplete, Button, Dialog, DialogActions, DialogContent, DialogTitle, Stack, TextField } from \"@mui/material\";\nimport * as React from \"react\";\nimport { CREATE_COURSE } from \"../../graphql/mutations\";\nimport { GET_UNIVERSITIES } from \"../../graphql/queries\";\n\nexport default function NewCourseDialog({ open, handleClose, onCompleted }) {\n  // Fetch universities\n  const { loading, error, data } = useQuery(GET_UNIVERSITIES);\n  const [createCourse] = useMutation(CREATE_COURSE);\n\n  if (loading) return null;\n  if (error) return `${error}`;\n  const universities = data.university;\n  const names = universities.map((uni) => uni.name);\n\n  const handleCreateCourse = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    // Search for university_id based on name\n    const uniName = data.get('university');\n    const university = universities.find((u) => u.name === uniName);\n    if (!university) return;\n\n    // Create course, then call provided onCompleted\n    createCourse({\n      variables: {\n        course_id: data.get('course') || null,\n        name: data.get('name') || null,\n        department: data.get('department') || null,\n        university_id: university.university_id,\n      },\n      onCompleted: onCompleted,\n    });\n  };\n\n  return <Dialog open={open} onClose={handleClose}>\n    <DialogTitle>Add Course</DialogTitle>\n    <DialogContent>\n      <form id=\"newCourseForm\" onSubmit={handleCreateCourse}>\n        <Stack spacing={3} mt={1}>\n          <TextField\n            required\n            name=\"course\"\n            label=\"Course ID\"\n          />\n          <TextField\n            required\n            name=\"name\"\n            label=\"Course Name\"\n          />\n          <TextField\n            required\n            name=\"department\"\n            label=\"Department\"\n          />\n          <Autocomplete\n            disablePortal\n            options={names}\n            renderInput={(params) => (\n              <TextField\n                required\n                name=\"university\"\n                label=\"University\"\n                {...params}\n              />\n            )}\n          />\n        </Stack>\n      </form>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleClose}>Cancel</Button>\n      <Button type=\"submit\" form=\"newCourseForm\">\n        Create\n      </Button>\n    </DialogActions>\n  </Dialog>;\n}","import { useQuery } from \"@apollo/client\";\nimport { Add } from \"@mui/icons-material\";\nimport { Autocomplete, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Stack, TextField } from \"@mui/material\";\nimport * as React from \"react\";\nimport { GET_COURSES } from \"../../../graphql/queries\";\nimport NewCourseDialog from \"../NewCourseDialog\";\n\nexport default function EditOfferingDialog({ offering, handleClose, onSave }) {\n  const [newCourse, setNewCourse] = React.useState(false);\n\n  // Fetch all courses\n  const { loading, error, data, refetch } = useQuery(GET_COURSES);\n\n  if (loading) return null;\n  if (error) return `${error}`;\n  const courses = data.course.map((course) => course.course_id);\n\n  // Don't display if offering is null\n  if (offering === null) return null;\n\n  const isEditing = Boolean(offering.offering_id);\n\n  return <>\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        {isEditing ? 'Edit Offering' : 'New Offering'}\n      </DialogTitle>\n      <DialogContent>\n        <form id=\"editOfferingForm\" onSubmit={onSave}>\n          <Stack spacing={3} mt={1}>\n            <Stack direction=\"row\" spacing={3} alignItems=\"center\">\n              <Autocomplete\n                disablePortal\n                fullWidth\n                disabled={isEditing}\n                options={courses}\n                defaultValue={offering.course?.course_id}\n                renderInput={(params) => (\n                  <TextField\n                    name=\"course\"\n                    label=\"Course\"\n                    {...params}\n                  />\n                )}\n              />\n              {isEditing ? null :\n                <IconButton onClick={() => setNewCourse(true)}>\n                  <Add />\n                </IconButton>\n              }\n            </Stack>\n            <TextField\n              name=\"gradeReceived\"\n              label=\"Grade Received (optional)\"\n              defaultValue={offering.grade_received || ''}\n            />\n            <TextField\n              name=\"professorName\"\n              label=\"Professor Name (optional)\"\n              defaultValue={offering.professor_name || ''}\n            />\n            <TextField\n              name=\"yearTaken\"\n              label=\"Year Taken (optional)\"\n              defaultValue={offering.year_taken || ''}\n            />\n          </Stack>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button type=\"submit\" form=\"editOfferingForm\">\n          {isEditing ? 'Save' : 'Create'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n    <NewCourseDialog\n      open={newCourse}\n      handleClose={() => setNewCourse(false)}\n      onCompleted={() => {\n        setNewCourse(false);\n        refetch();\n      }}\n    />\n  </>;\n}","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Stack, TextField } from \"@mui/material\";\nimport * as React from \"react\";\n\nexport default function EditProfileDialog({ tutor, open, handleClose, onSave }) {\n  return <Dialog open={open} onClose={handleClose}>\n    <DialogTitle>Edit Profile</DialogTitle>\n    <DialogContent>\n      <form id=\"editProfileForm\" onSubmit={onSave}>\n        <Stack spacing={3} mt={1}>\n          <TextField\n            name=\"name\"\n            label=\"Name\"\n            type=\"name\"\n            defaultValue={tutor.user.name}\n          />\n          <TextField\n            name=\"hourlyRate\"\n            label=\"Hourly Rate\"\n            defaultValue={tutor.hourly_rate ?? ''}\n          />\n          <TextField\n            name=\"bio\"\n            label=\"Bio\"\n            defaultValue={tutor.bio ?? ''}\n          />\n        </Stack>\n      </form>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleClose}>Cancel</Button>\n      <Button type=\"submit\" form=\"editProfileForm\">Save</Button>\n    </DialogActions>\n  </Dialog>;\n}\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport { Button, Container, Grid, Paper, Stack, Typography } from \"@mui/material\";\nimport * as React from \"react\";\nimport { AuthContext } from \"../../../Auth\";\nimport { CREATE_OFFERING, DELETE_OFFERING, UPDATE_OFFERING, UPDATE_TUTOR } from \"../../../graphql/mutations\";\nimport { GET_TUTOR_PROFILE } from \"../../../graphql/queries\";\nimport LoadingPage from \"../../LoadingPage\";\nimport OfferingTile from \"../OfferingTile\";\nimport Title from \"../Title\";\nimport EditOfferingDialog from \"./EditOfferingDialog\";\nimport EditProfileDialog from \"./EditProfileDialog\";\n\nexport default function Profile() {\n  const { currentUser } = React.useContext(AuthContext);\n  const [updateTutor] = useMutation(UPDATE_TUTOR, {\n    variables: {\n      id: currentUser.uid,\n    },\n  });\n  const [createOffering] = useMutation(CREATE_OFFERING);\n  const [updateOffering] = useMutation(UPDATE_OFFERING);\n  const [deleteOffering] = useMutation(DELETE_OFFERING);\n\n  const [editProfile, setEditProfile] = React.useState(false);\n  const [editingOffering, setEditingOffering] = React.useState(null);\n\n  // Fetch tutor profile\n  const { loading, error, data, refetch } = useQuery(GET_TUTOR_PROFILE, {\n    variables: {\n      id: currentUser.uid,\n    },\n  });\n\n  if (loading) return <LoadingPage />;\n  if (error) return `${error}`;\n\n  // Extract relevant data\n  const tutor = {\n    ...data.tutor_by_pk,\n  };\n  const baseOfferings = tutor.offerings;\n  delete tutor.offerings;\n  const offerings = baseOfferings.map((offering) => {\n    return {\n      tutor: tutor,\n      ...offering,\n    };\n  });\n\n  const handleEditProfile = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    // Default values to null\n    updateTutor({\n      variables: {\n        name: data.get('name') || null,\n        hourly_rate: data.get('hourlyRate') || null,\n        bio: data.get('bio') || null,\n      },\n      onCompleted: () => {\n        // Hide dialog and refetch when finished\n        setEditProfile(false);\n        refetch();\n      },\n    });\n  };\n\n  // Includes handling new offering\n  const handleEditOffering = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    // A course is required to update or create an offering\n    if (!data.get('course')) {\n      // TODO: show error\n      return;\n    }\n\n    // Extract data, defaulting to null\n    const variables = {\n      course_id: data.get('course'),\n      grade_received: data.get('gradeReceived') || null,\n      professor_name: data.get('professorName') || null,\n      year_taken: data.get('yearTaken') || null,\n    };\n\n    const onCompleted = () => {\n      // Hide dialog and refetch when finished\n      setEditingOffering(null);\n      refetch();\n    };\n\n    if (editingOffering.offering_id) {\n      // Update existing offering\n      updateOffering({\n        variables: {\n          offering_id: editingOffering.offering_id,\n          ...variables,\n        },\n        onCompleted: onCompleted,\n      });\n    }\n    else {\n      // Create new offering\n      createOffering({\n        variables: {\n          tutor_id: currentUser.uid,\n          ...variables,\n        },\n        onCompleted: onCompleted,\n      });\n    }\n  };\n\n  const handleDeleteOffering = (offering) => {\n    deleteOffering({\n      variables: {\n        offering_id: offering.offering_id,\n      },\n      onCompleted: () => {\n        refetch();\n      },\n    });\n  };\n\n  return <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\n          <Title>Your Profile</Title>\n          <Grid container spacing={2} justifyContent=\"center\">\n            <Grid item xs={12} md={6} justifyContent=\"center\">\n              <Typography variant=\"h6\">Name</Typography>\n              <Typography variant=\"body1\">{tutor.user.name}</Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Typography variant=\"h6\">Hourly Rate</Typography>\n              <Typography variant=\"body1\">{`$${tutor.hourly_rate}/hr`}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">Bio</Typography>\n              <Typography variant=\"body1\">{tutor.bio}</Typography>\n            </Grid>\n            <Grid item mt={1} xs={12}>\n              <Stack direction=\"row\" spacing={2}>\n                <Button onClick={() => setEditProfile(true)}>\n                  Edit Profile\n                </Button>\n                <Button onClick={() => setEditingOffering({})}>\n                  Create New Offering\n                </Button>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      {offerings.map((offering, i) =>\n        <Grid key={i} item xs={12} md={6}>\n          <OfferingTile\n            offering={offering}\n            children={<Stack mt={2} direction=\"row\" spacing={2}>\n              <Button\n                onClick={() => setEditingOffering(offering)}\n              >\n                Edit Offering\n              </Button>\n              <Button\n                color=\"error\"\n                onClick={() => handleDeleteOffering(offering)}\n              >\n                Delete Offering\n              </Button>\n            </Stack>}\n          />\n        </Grid>\n      )}\n    </Grid>\n    <EditProfileDialog\n      tutor={tutor}\n      open={editProfile}\n      handleClose={() => setEditProfile(false)}\n      onSave={handleEditProfile}\n    />\n    <EditOfferingDialog\n      offering={editingOffering}\n      handleClose={() => setEditingOffering(null)}\n      onSave={handleEditOffering}\n    />\n  </Container>;\n}\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport CardActions from \"@mui/material/CardActions\";\nimport { Grid } from \"@mui/material\";\nimport { Stack } from \"@mui/material\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 200,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function ReviewsCards({ requests }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\">{requests.studentName}</Typography>\n        <Stack justifyContent=\"space-between\" direction=\"row\">\n          <Typography variant=\"body1\" align=\"left\">\n            {requests.course}\n          </Typography>\n          <Typography variant=\"body1\" align=\"right\">\n            {requests.professorName}\n          </Typography>\n        </Stack>\n        <Grid container>\n          <Grid item mr={1} mt={1}>\n            <AccessTimeIcon fontSize=\"1\" color=\"secondaryColour\" />\n          </Grid>\n          <Grid item>\n            <Typography mt={1} color=\"textSecondary\" variant=\"body1\">\n              {requests.time}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Typography mt={1}>Comments:</Typography>\n        <Typography mr={1} variant=\"body2\" color=\"secondaryColour\">\n          {requests.comment}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Grid container justify=\"space-between\">\n          <Typography align=\"left\"></Typography>\n        </Grid>\n        <Button variant=\"outlined\" size=\"small\" color=\"primary\">\n          Accept\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport RequestsCards from \"./RequestsCards\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst request = [\n  {\n    studentName: \"Bob\",\n    course: \"CPSC 233\",\n    professorName: \"Prof. Johnson\",\n    comment: \"I don't understand how file I/O works in Java\",\n    time: \"November 1, 2021 - 02:00PM to 04:00PM\",\n  },\n  {\n    studentName: \"Jack\",\n    course: \"MATH 211\",\n    professorName: \"Prof. Ruth\",\n    comment: \"Need help with projections.\",\n    time: \"November 3, 2021 - 01:00PM 02:00PM\",\n  },\n  {\n    studentName: \"Amelia\",\n    course: \"ANTH 311\",\n    professorName: \"Prof. Waj\",\n    comment: \"Upcoming exam, need help with review\",\n    time: \"November 10, 2021 - 08:00AM to 10:00AM\",\n  },\n  {\n    studentName: \"Sophia\",\n    course: \"CPSC 441\",\n    professorName: \"Prof. S\",\n    comment: \"Help with TCP\",\n    time: \"November 8, 2021 - 02:00PM to 06:00PM\",\n  },\n  {\n    studentName: \"Frank\",\n    course: \"JPNS 205\",\n    professorName: \"Prof. Tako\",\n    comment: \"Please help! Need help with basic conjunctions.\",\n    time: \"November 2, 2021 - 09:00AM to 02:00PM\",\n  },\n];\n\nconst useStyles = makeStyles({\n  gridContainer: {\n    paddingLeft: \"100px\",\n    paddingRight: \"100px\",\n    paddingTop: \"35px\",\n  },\n});\n\nexport default function Requests() {\n  const classes = useStyles();\n  return (\n    <div>\n      <Grid\n        container\n        spacing={2}\n        className={classes.gridContainer}\n        justify=\"center\"\n      >\n        {request.map((requests, i) => (\n          <Grid key={i} item xs={12} sm={6} md={4}>\n            <RequestsCards requests={requests} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport { Rating } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 200,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function ReviewsCards({ reviews }) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\">{reviews.studentName}</Typography>\n        <Typography>\n          <Box sx={{ \"& > legend\": { mt: 2 } }}>\n            <Rating value={reviews.stars} readOnly={true} />\n          </Box>\n        </Typography>\n        <Typography mt={0.5} variant=\"body1\" color=\"textSecondary\">\n          {reviews.comment}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport ReviewsCards from \"./ReviewsCards\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  gridContainer: {\n    paddingLeft: \"100px\",\n    paddingRight: \"100px\",\n    paddingTop: \"35px\",\n  },\n});\n\nconst userReviews = [\n  {\n    review_id: 1111,\n    studentName: \"Bob\",\n    comment: \"Tutor spilt coffee on my laptop :(\",\n    stars: 2,\n  },\n  {\n    review_id: 2222,\n    studentName: \"Tom\",\n    comment: \"Best tutor ever! Aced my test!\",\n    stars: 5,\n  },\n  {\n    review_id: 3333,\n    studentName: \"Frank\",\n    comment: \"Teaches better than my prof!\",\n    stars: 4,\n  },\n  {\n    review_id: 4444,\n    studentName: \"Emma\",\n    comment: \"Tutor went overtime for free!\",\n    stars: 5,\n  },\n  {\n    review_id: 5555,\n    studentName: \"Ruby\",\n    comment: \"Wonderful!\",\n    stars: 3,\n  },\n  {\n    review_id: 6666,\n    studentName: \"Mia\",\n    comment: \"Meh\",\n    stars: 1,\n  },\n];\n\nexport default function Reviews() {\n  const classes = useStyles();\n  return (\n    <div>\n      <Grid\n        container\n        spacing={2}\n        className={classes.gridContainer}\n        justify=\"center\"\n      >\n        {userReviews.map((userReviews) => (\n          <Grid item xs={12} sm={6} md={4}>\n            <ReviewsCards reviews={userReviews} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n","import {\n  AccountCircle,\n  Event,\n  HourglassFull,\n  School,\n  Star,\n} from \"@mui/icons-material\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Divider from \"@mui/material/Divider\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../../../firebase\";\nimport Appointments from \"../appointments/Appointments\";\nimport Availability from \"./Availability\";\nimport Profile from \"./Profile\";\nimport Requests from \"./Requests\";\nimport Reviews from \"./Reviews\";\n\nexport default function TutorDashboard({ page }) {\n  const drawerWidth = 240;\n  const navigate = useNavigate();\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== \"open\",\n  })(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\n  const Drawer = styled(MuiDrawer, {\n    shouldForwardProp: (prop) => prop !== \"open\",\n  })(({ theme, open }) => ({\n    \"& .MuiDrawer-paper\": {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: \"border-box\",\n      ...(!open && {\n        overflowX: \"hidden\",\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing(9),\n        },\n      }),\n    },\n  }));\n\n  const theme = useTheme();\n  const fullDrawer = useMediaQuery(theme.breakpoints.up('sm'));\n\n  const [open, setOpen] = React.useState(true);\n  const [anchor, setAnchor] = React.useState(null);\n\n  const toggleDrawer = (event) => {\n    if (fullDrawer) {\n      setOpen(!open);\n    }\n    else {\n      setAnchor(anchor === null ? event.currentTarget : null);\n    }\n  };\n\n  const drawerItems = [\n    ['Appointments', <Event />],\n    ['Profile', <AccountCircle />],\n    ['Availability', <HourglassFull />],\n    ['Reviews', <Star />],\n    ['Requests', <School />],\n  ];\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" open={fullDrawer && open}>\n        <Toolbar\n          sx={{\n            pr: \"24px\", // keep right padding when drawer closed\n          }}\n        >\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer}\n            sx={{\n              marginRight: \"36px\",\n              ...(fullDrawer && open && { display: \"none\" }),\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            sx={{ flexGrow: 1 }}\n          >\n            {page}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        open={open}\n        sx={{\n          ...(!fullDrawer && { display: \"none\" }),\n        }}\n      >\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            px: [1],\n          }}\n        >\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n        <Divider />\n        <List>\n          {drawerItems.map(([name, icon], i) => {\n            return <ListItem\n              key={i}\n              selected={page === name}\n              button\n              onClick={() => {\n                navigate(`/${name.toLowerCase()}`, { replace: true });\n              }}\n            >\n              <ListItemIcon>\n                {icon}\n              </ListItemIcon>\n              <ListItemText primary={name} />\n            </ListItem>;\n          })}\n          <Divider />\n          <ListItem\n            button\n            onClick={() => {\n              auth.signOut();\n              localStorage.removeItem(\"li\");\n            }}\n          >\n            <ListItemIcon>\n              <LogoutIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Log Out\" />\n          </ListItem>\n        </List>\n      </Drawer>\n      <Menu\n        anchorEl={anchor}\n        open={!fullDrawer && anchor !== null}\n        onClose={() => setAnchor(null)}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        {drawerItems.map(([name, icon], i) => {\n          return <MenuItem\n            key={i}\n            selected={page === name}\n            onClick={() => {\n              navigate(`/${name.toLowerCase()}`, { replace: true });\n              setAnchor(null);\n            }}\n          >\n            <ListItemIcon>\n              {icon}\n            </ListItemIcon>\n            {name}\n          </MenuItem>;\n        })}\n        <Divider />\n        <MenuItem\n          onClick={() => {\n            auth.signOut();\n            localStorage.removeItem(\"li\");\n          }}\n        >\n          <ListItemIcon>\n            <LogoutIcon />\n          </ListItemIcon>\n          Log Out\n        </MenuItem>\n      </Menu>\n      <Box\n        component=\"main\"\n        sx={{\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"light\"\n              ? theme.palette.grey[100]\n              : theme.palette.grey[900],\n          flexGrow: 1,\n          height: \"100vh\",\n          overflow: \"auto\",\n        }}\n      >\n        <Toolbar />\n        {page === \"Appointments\" ? (\n          <Appointments />\n        ) : page === \"Profile\" ? (\n          <Profile />\n        ) : page === \"Availability\" ? (\n          <Availability />\n        ) : page === \"Reviews\" ? (\n          <Reviews />\n        ) : (\n          <Requests />\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport StudentDashboard from \"./student/StudentDashboard\";\nimport TutorDashboard from \"./tutor/TutorDashboard\";\nimport { AuthContext } from \"../../Auth\";\n\nexport default function Dashboard({ page }) {\n  const { userType } = React.useContext(AuthContext);\n  return userType.current === \"student\" ? (\n    <StudentDashboard page={page} />\n  ) : (\n    <TutorDashboard page={page} />\n  );\n}\n","import * as React from \"react\";\nimport {\n  Grid,\n  Card,\n  CardActionArea,\n  CardContent,\n  Typography,\n  Stack,\n  Box,\n} from \"@mui/material\";\nimport { INSERT_TUTOR, INSERT_STUDENT } from \"../graphql/mutations\";\nimport { useMutation } from \"@apollo/client\";\nimport { AuthContext } from \"../Auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Onboarding() {\n  const navigate = useNavigate();\n  const { currentUser, userType } = React.useContext(AuthContext);\n  const [insertTutor] = useMutation(INSERT_TUTOR, {\n    variables: {\n      tutor_id: currentUser.uid,\n    },\n    onCompleted: () => {\n      userType.current = \"tutor\";\n      navigate(`/profile`);\n    },\n  });\n  const [insertStudent] = useMutation(INSERT_STUDENT, {\n    variables: {\n      student_id: currentUser.uid,\n    },\n    onCompleted: () => {\n      userType.current = \"student\";\n      navigate(`/offerings`);\n    },\n  });\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      minHeight=\"80vh\"\n    >\n      <Stack spacing={4}>\n        <Typography>What do you plan on doing on this platform?</Typography>\n        <Grid container justifyContent=\"space-between\">\n          <Grid item>\n            <Card onClick={insertTutor}>\n              <CardActionArea>\n                <CardContent>\n                  <Typography>Teaching</Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n          <Grid item>\n            <Card onClick={insertStudent}>\n              <CardActionArea>\n                <CardContent>\n                  <Typography>Learning</Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        </Grid>\n      </Stack>\n    </Box>\n  );\n}\n","import LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport * as React from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { auth } from \"../firebase.js\";\n\nexport default function SignIn() {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const email = data.get(\"email\");\n    const password = data.get(\"password\");\n\n    signInWithEmailAndPassword(auth, email, password)\n      .then(() => {\n        const from = location.state?.from?.pathname || \"/\";\n        navigate(from, { replace: true });\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        console.log(errorMessage);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to=\"/signup\">\n                <Typography variant=\"body2\">\n                  Don't have an account? Sign Up\n                </Typography>\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport * as React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { auth } from \"../firebase.js\";\n\nexport default function SignUp() {\n  const navigate = useNavigate();\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const email = data.get(\"email\");\n    const password = data.get(\"password\");\n\n    createUserWithEmailAndPassword(auth, email, password)\n      .then(() => {\n        navigate(\"/onboarding\");\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        console.log(\"error \", errorMessage);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box\n          component=\"form\"\n          noValidate\n          onSubmit={handleSubmit}\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/signin\">\n                <Typography variant=\"body2\">\n                  Already have an account? Sign in\n                </Typography>\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import { teal } from '@mui/material/colors';\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport { AuthProvider } from \"./Auth\";\nimport RedirectRoute from \"./RedirectRoute\";\nimport RequireAuth from \"./RequireAuth\";\nimport RequireUserType from \"./RequireUserType\";\nimport Dashboard from \"./views/dashboard/Dashboard\";\nimport Onboarding from \"./views/Onboarding\";\nimport SignIn from \"./views/SignIn\";\nimport SignUp from \"./views/SignUp\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: teal[600],\n    },\n  },\n});\n\nexport default function App() {\n  return <ThemeProvider theme={theme}>\n    <AuthProvider>\n      <HashRouter>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n        />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Appointments\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/profile\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Profile\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/appointments\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Appointments\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/requests\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Requests\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/reviews\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Reviews\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/availability\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Availability\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/offerings\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Offerings\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"signup\"\n            element={\n              <RedirectRoute>\n                <SignUp />\n              </RedirectRoute>\n            }\n          />\n          <Route\n            path=\"signin\"\n            element={\n              <RedirectRoute>\n                <SignIn />\n              </RedirectRoute>\n            }\n          />\n          <Route\n            path=\"/onboarding\"\n            element={\n              <RequireAuth>\n                <Onboarding />\n              </RequireAuth>\n            }\n          />\n          {/* Redirects */}\n          <Route path=\"*\" element={<div>404</div>} />\n        </Routes>\n      </HashRouter>\n    </AuthProvider>\n  </ThemeProvider>;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}