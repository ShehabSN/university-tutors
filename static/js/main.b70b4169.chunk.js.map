{"version":3,"sources":["firebase.js","Auth.js","views/LoadingPage.js","RedirectRoute.js","RequireAuth.js","RequireUserType.js","graphql/mutations.js","graphql/queries.js","views/dashboard/appointments/AppointmentDialog.js","views/dashboard/appointments/ReviewDialog.js","views/dashboard/appointments/AppointmentCard.js","views/dashboard/appointments/Appointments.js","views/dashboard/Title.js","views/dashboard/OfferingTile.js","views/dashboard/NewCourseDialog.js","views/dashboard/student/RequestCourseDialog.js","views/dashboard/student/Offerings.js","views/dashboard/student/Profile.js","views/dashboard/student/StudentDashboard.js","views/dashboard/tutor/Availability.js","views/dashboard/tutor/EditOfferingDialog.js","views/dashboard/tutor/EditProfileDialog.js","views/dashboard/tutor/Profile.js","views/dashboard/tutor/RequestsCards.js","views/dashboard/tutor/RequestOfferingDialog.js","views/dashboard/tutor/Requests.js","views/dashboard/tutor/ReviewsCards.js","views/dashboard/tutor/Reviews.js","views/dashboard/tutor/TutorDashboard.js","views/dashboard/Dashboard.js","views/Onboarding.js","views/SignIn.js","views/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","userType","useRef","getToken","useCallback","user","a","getIdTokenResult","result","claims","token","axios","get","uid","newTokenRes","status","getIdToken","newToken","observerCallback","firebaseUser","localStorage","setItem","authorization","url","method","headers","Authorization","data","query","variables","user_id","queryResult","errors","console","log","user_by_pk","tutor","tutor_id","type","student","student_id","current","useEffect","onAuthStateChanged","httpLink","createHttpLink","uri","authLink","setContext","_","typePolicies","name","keyFields","client","ApolloClient","connectToDevTools","link","concat","cache","InMemoryCache","Provider","value","ApolloProvider","LoadingPage","Box","display","justifyContent","alignItems","width","height","CircularProgress","RedirectRoute","useContext","location","useLocation","getItem","to","state","from","RequireAuth","pathname","RequireUserType","INSERT_TUTOR","gql","INSERT_STUDENT","UPDATE_STUDENT","UPDATE_TUTOR","CREATE_OFFERING","UPDATE_OFFERING","DELETE_OFFERING","CREATE_COURSE","CREATE_REVIEW","CREATE_REQUEST","DELETE_REQUEST","CREATE_APPOINTMENT","UPDATE_HOURS","UPDATE_APPOINTMENT","DELETE_HOUR","CREATE_HOUR","GET_UNIVERSITIES","GET_OFFERINGS","GET_STUDENT_PROFILE","GET_TUTOR_PROFILE","GET_COURSES","READ_REVEIWS","GET_REVIEW","READ_REQUEST","GET_STUDENT_APPOINTMENTS","GET_TUTOR_APPOINTMENTS","GET_TUTOR_HOURS","utc","require","AppointmentDialog","offering","appointment","handleClose","isEdit","setLocation","student_comment","note","setNote","Set","selectedHours","setSelectedHours","initDate","hours_aggregate","aggregate","min","start_time","dayjs","local","selectedDate","setSelectedDate","dayStartUtc","startOf","orClause","appointment_id","_is_null","push","_eq","useQuery","fetchPolicy","where","_or","_gte","format","_lt","add","onCompleted","initHours","hours","forEach","hour","loading","useMutation","onClose","refetchQueries","updateHours","hoursMutation","updateApptTime","appointmentId","_and","offering_id","insertAppointment","insertData","updateAppointment","updateData","Dialog","open","scroll","DialogTitle","course_id","course","DialogContent","sx","marginBottom","Typography","mb","LocalizationProvider","dateAdapter","DateAdapter","DatePicker","clearable","onChange","date","renderInput","params","TextField","fullWidth","helperText","mt","length","List","map","i","selected","has","ListItemButton","onClick","updatedHours","prevHour","subtract","nextHour","delete","size","toggleHour","ListItemText","primary","label","event","target","DialogActions","LoadingButton","update_appointment_by_pk","insert_appointment_one","extend","ReviewDialog","close","createReview","reviewData","skip","comment","setComment","stars","setStars","review","id","onSubmit","preventDefault","Stack","spacing","Rating","newValue","multiline","rows","maxRows","Button","disabled","form","AppointmentCard","isStudent","showNotes","setShowNotes","showEditDialog","setShowEditDialog","reviewTutor","setReviewTutor","startTime","endTime","max","hourFormat","startHour","endHour","hasPassed","userName","Card","minHeight","CardContent","Grid","container","direction","variant","IconButton","Tooltip","title","RateReview","fontSize","Edit","item","mr","AccessTimeOutlined","color","LocationOnOutlined","CardActions","disableSpacing","Appointments","isAscending","setIsAscending","Map","datedAppointments","setDatedAppointments","studentAppts","order_by","tutorAppts","appointmentsData","appointments","currentDate","dateObj","isCurrentMonth","month","isCurrentYear","year","dayAppointments","set","error","px","pb","xs","rowSpacing","columnSpacing","j","md","sm","Title","props","component","gutterBottom","OfferingTile","reviews_aggregate","avg","Paper","p","flexDirection","divider","Divider","orientation","flexItem","AccountCircle","Paid","hourly_rate","placement","readOnly","bio","grade_received","minWidth","School","noWrap","year_taken","professor_name","NewCourseDialog","createCourse","createResult","universities","university","names","uni","FormData","currentTarget","uniName","find","u","department","university_id","required","Autocomplete","disablePortal","options","RequestCourseDialog","newCourse","setNewCourse","setCourse","professor","setProfessor","createRequest","courseResult","courses","Add","refetch","Offerings","setStartTime","setEndTime","requestingCourse","setRequestingCourse","Container","maxWidth","FilterAlt","startIcon","ContactSupport","AdapterDateFns","DateTimePicker","OfferingResults","appointmentOffering","setAppointmentOffering","pResult","universityId","student_by_pk","oResult","course_exp","tutor_exp","toISOString","_lte","undefined","offerings","Bookmark","Profile","updateStudent","updateResult","onSave","major","ProfileForm","setUniversity","noValidate","autoComplete","defaultValue","isOptionEqualToValue","option","StudentDashboard","page","navigate","useNavigate","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","Drawer","MuiDrawer","position","whiteSpace","boxSizing","overflowX","breakpoints","up","useTheme","fullDrawer","useMediaQuery","setOpen","anchor","setAnchor","toggleDrawer","drawerItems","Event","CssBaseline","Toolbar","pr","edge","aria-label","marginRight","flexGrow","icon","ListItem","button","toLowerCase","replace","ListItemIcon","signOut","removeItem","anchorEl","MenuListProps","MenuItem","backgroundColor","palette","mode","grey","overflow","dayOfYear","Availability","selectedDay","setSelectedDay","weekHours","setWeekHours","sunday","saturday","endOf","currentWeek","prevDay","days","slots","deleteHour","createHour","localHour","hours_id","day","ml","columns","isToday","slot","dateTime","availability","Wrapper","condition","wrapper","pl","disableGutters","isAvailable","isBooked","handleSlotSelect","EditOfferingDialog","isEditing","Boolean","EditProfileDialog","updateTutor","updateTutorResult","createOffering","createOfferingResult","updateOffering","updateOfferingResult","deleteOffering","editProfile","setEditProfile","editingOffering","setEditingOffering","deletingOfferingId","setDeletingOfferingId","tutor_by_pk","baseOfferings","gap","ModeEdit","RemoveCircleOutline","handleDeleteOffering","useStyles","makeStyles","root","bullet","margin","transform","pos","ReviewsCards","requests","classes","created_at","className","align","Date","toLocaleDateString","justify","request","gridContainer","paddingLeft","paddingRight","paddingTop","paddingBottom","Requests","deleteRequest","request_id","reviews","Reviews","reviewIds","userReviews","TutorDashboard","HourglassFull","Star","Dashboard","Helmet","Onboarding","insertTutor","insertStudent","CardActionArea","SignIn","marginTop","Avatar","m","bgcolor","email","password","signInWithEmailAndPassword","then","catch","errorMessage","message","autoFocus","SignUp","createUserWithEmailAndPassword","createTheme","main","teal","App","ThemeProvider","rel","href","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b70b4169.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\n","import {\r\n  ApolloClient,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n  InMemoryCache,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { onAuthStateChanged } from \"@firebase/auth\";\r\nimport axios from \"axios\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { auth } from \"./firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState();\r\n  const userType = useRef();\r\n\r\n  const getToken = useCallback(async (user) => {\r\n    if (user) {\r\n      let result = await user.getIdTokenResult();\r\n      if (result.claims[\"https://hasura.io/jwt/claims\"]) {\r\n        return result.token;\r\n      } else {\r\n        let newTokenRes = await axios.get(\r\n          `${process.env.REACT_APP_REFRESH_FUNCTION_URL}?uid=${auth.currentUser.uid}`\r\n        );\r\n        if (newTokenRes?.status === 200) {\r\n          let newToken = await auth.currentUser.getIdToken(true);\r\n          return newToken;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const observerCallback = useCallback(\r\n    async (firebaseUser) => {\r\n      if (firebaseUser?.uid) {\r\n        localStorage.setItem(\"li\", \"true\");\r\n        setPending(true);\r\n\r\n        let token = await getToken(firebaseUser);\r\n        let authorization = `Bearer ${token}`;\r\n        const queryResult = await axios({\r\n          url: process.env.REACT_APP_HASURA_ENDPOINT,\r\n          method: \"post\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: authorization,\r\n          },\r\n          data: {\r\n            query: `\r\n              query GetUserType($user_id: String!) {\r\n                user_by_pk(user_id: $user_id) {\r\n                  tutor {\r\n                    tutor_id\r\n                  }\r\n                  student {\r\n                    student_id\r\n                  }\r\n                }\r\n              }\r\n            `,\r\n            variables: {\r\n              user_id: firebaseUser.uid,\r\n            },\r\n          },\r\n        });\r\n        if (queryResult.data.errors) {\r\n          console.log(\"handle error, \", queryResult.data.errors);\r\n        } else {\r\n          let type;\r\n          if (queryResult.data.data.user_by_pk?.tutor?.tutor_id) {\r\n            type = \"tutor\";\r\n          } else if (queryResult.data.data.user_by_pk?.student?.student_id) {\r\n            type = \"student\";\r\n          }\r\n          userType.current = type;\r\n        }\r\n\r\n        setPending(false);\r\n        setCurrentUser(firebaseUser);\r\n      } else {\r\n        setCurrentUser(null);\r\n        userType.current = null;\r\n      }\r\n    },\r\n    [getToken]\r\n  );\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, observerCallback);\r\n  }, [observerCallback]);\r\n\r\n  const httpLink = createHttpLink({\r\n    uri: process.env.REACT_APP_HASURA_ENDPOINT,\r\n  });\r\n\r\n  const authLink = setContext(async (_, { headers }) => {\r\n    let token = await getToken(currentUser);\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n    };\r\n  });\r\n\r\n  // The key for each type A is \"A_id\"\r\n  const typePolicies = {};\r\n  const types = ['appointment', 'course', 'hours', 'offering', 'request', 'review', 'student', 'tutor', 'university', 'user'];\r\n  for (const name of types) {\r\n    typePolicies[name] = {\r\n      keyFields: [`${name}_id`],\r\n    };\r\n  }\r\n\r\n  const createApolloClient = () => {\r\n    return new ApolloClient({\r\n      connectToDevTools: true,\r\n      link: authLink.concat(httpLink),\r\n      cache: new InMemoryCache({\r\n        typePolicies: typePolicies,\r\n      }),\r\n    });\r\n  };\r\n\r\n  const client = createApolloClient();\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n        userType,\r\n        pending,\r\n      }}\r\n    >\r\n      <ApolloProvider client={client}>{children}</ApolloProvider>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import { Box, CircularProgress } from \"@mui/material\";\r\nimport * as React from \"react\";\r\n\r\nexport default function LoadingPage() {\r\n  return <Box\r\n    display=\"flex\"\r\n    justifyContent=\"center\"\r\n    alignItems=\"center\"\r\n    width=\"100%\"\r\n    height=\"100vh\"\r\n  >\r\n    <CircularProgress />\r\n  </Box>;\r\n}","import React, { useContext } from \"react\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport LoadingPage from \"./views/LoadingPage\";\r\n\r\nexport default function RedirectRoute({ children }) {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const location = useLocation();\r\n\r\n  if (localStorage.getItem(\"li\") && !currentUser) {\r\n    return <LoadingPage />;\r\n  } else if (currentUser && currentUser.uid) {\r\n    return <Navigate to={location.state?.from ?? \"/\"} />;\r\n  } else {\r\n    return children;\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport LoadingPage from \"./views/LoadingPage\";\r\n\r\nexport default function RequireAuth({ children }) {\r\n  let { currentUser, userType } = useContext(AuthContext);\r\n  let location = useLocation();\r\n\r\n  if (localStorage.getItem(\"li\") && !currentUser) {\r\n    return <LoadingPage />;\r\n  } else if (!currentUser) {\r\n    return <Navigate to=\"/signin\" state={{ from: location }} />;\r\n  } else if (userType.current && location.pathname === \"/onboarding\") {\r\n    return <Navigate to=\"/\" />;\r\n  } else {\r\n    return children;\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport LoadingPage from \"./views/LoadingPage\";\r\n\r\nexport default function RequireUserType({ children }) {\r\n  let { userType, pending } = useContext(AuthContext);\r\n\r\n  if (pending) {\r\n    return <LoadingPage />;\r\n  } else if (!userType.current) {\r\n    return <Navigate to=\"/onboarding\" />;\r\n  } else {\r\n    return children;\r\n  }\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const INSERT_TUTOR = gql`\r\n  mutation InsertTutor($tutor_id: String!) {\r\n    insert_tutor_one(object: { tutor_id: $tutor_id }) {\r\n      tutor_id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const INSERT_STUDENT = gql`\r\n  mutation InsertStudent($student_id: String!) {\r\n    insert_student_one(object: { student_id: $student_id }) {\r\n      student_id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_STUDENT = gql`\r\n  mutation UpdateStudent(\r\n    $id: String!\r\n    $name: String!\r\n    $university_id: Int\r\n    $major: String\r\n    $year: Int\r\n  ) {\r\n    update_student_by_pk(\r\n      pk_columns: { student_id: $id }\r\n      _set: { major: $major, year: $year }\r\n    ) {\r\n      student_id\r\n      major\r\n      year\r\n    }\r\n    update_user_by_pk(\r\n      pk_columns: { user_id: $id }\r\n      _set: { name: $name, university_id: $university_id }\r\n    ) {\r\n      user_id\r\n      name\r\n      university_id\r\n      university {\r\n        university_id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_TUTOR = gql`\r\n  mutation UpdateTutor(\r\n    $id: String!\r\n    $name: String!\r\n    $university_id: Int!\r\n    $hourly_rate: numeric\r\n    $bio: String\r\n  ) {\r\n    update_tutor_by_pk(\r\n      pk_columns: { tutor_id: $id }\r\n      _set: { hourly_rate: $hourly_rate, bio: $bio }\r\n    ) {\r\n      tutor_id\r\n      hourly_rate\r\n      bio\r\n    }\r\n    update_user_by_pk(\r\n      pk_columns: { user_id: $id }\r\n      _set: { name: $name, university_id: $university_id }\r\n    ) {\r\n      user_id\r\n      name\r\n      university_id\r\n      university {\r\n        university_id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_OFFERING = gql`\r\n  mutation CreateOffering(\r\n    $tutor_id: String!\r\n    $course_id: String!\r\n    $grade_received: String\r\n    $professor_name: String\r\n    $year_taken: String\r\n  ) {\r\n    insert_offering_one(\r\n      object: {\r\n        tutor_id: $tutor_id\r\n        course_id: $course_id\r\n        grade_received: $grade_received\r\n        professor_name: $professor_name\r\n        year_taken: $year_taken\r\n      }\r\n    ) {\r\n      offering_id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_OFFERING = gql`\r\n  mutation UpdateOffering(\r\n    $offering_id: Int!\r\n    $course_id: String!\r\n    $grade_received: String\r\n    $professor_name: String\r\n    $year_taken: String\r\n  ) {\r\n    update_offering_by_pk(\r\n      pk_columns: { offering_id: $offering_id }\r\n      _set: {\r\n        course_id: $course_id\r\n        grade_received: $grade_received\r\n        professor_name: $professor_name\r\n        year_taken: $year_taken\r\n      }\r\n    ) {\r\n      offering_id\r\n      grade_received\r\n      professor_name\r\n      year_taken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_OFFERING = gql`\r\n  mutation DeleteOffering($offering_id: Int!) {\r\n    delete_offering_by_pk(offering_id: $offering_id) {\r\n      offering_id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_COURSE = gql`\r\n  mutation CreateCourse(\r\n    $course_id: String!\r\n    $name: String!\r\n    $department: String!\r\n    $university_id: Int!\r\n  ) {\r\n    insert_course_one(\r\n      object: {\r\n        course_id: $course_id\r\n        name: $name\r\n        department: $department\r\n        university_id: $university_id\r\n      }\r\n    ) {\r\n      course_id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_REVIEW = gql`\r\n  mutation CreateReview(\r\n    $stars: numeric!\r\n    $comment: String\r\n    $student_id: String!\r\n    $tutor_id: String!\r\n  ) {\r\n    insert_review_one(\r\n      object: {\r\n        stars: $stars\r\n        student_id: $student_id\r\n        tutor_id: $tutor_id\r\n        comment: $comment\r\n      }\r\n      on_conflict: {\r\n        constraint: review_student_id_tutor_id_key\r\n        update_columns: [stars, comment, created_at]\r\n      }\r\n    ) {\r\n      stars\r\n      review_id\r\n      created_at\r\n      comment\r\n      student_id\r\n      tutor_id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_REVIEW = gql`\r\n  mutation UpdateReview($review_id: Int!, $comment: String!, $stars: numeric!) {\r\n    update_review_by_pk(\r\n      pk_columns: { review_id: $review_id }\r\n      _set: { comment: $comment, stars: $stars }\r\n    ) {\r\n      review_id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_REVIEW = gql`\r\n  mutation DeleteReview($review_id: Int!) {\r\n    delete_review_by_pk(review_id: $review_id) {\r\n      review_id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_REQUEST = gql`\r\n  mutation GetOfferings(\r\n    $student_id: String!\r\n    $course_id: String!\r\n    $professor_name: String\r\n    $comment: String\r\n  ) {\r\n    insert_request_one(\r\n      object: {\r\n        student_id: $student_id\r\n        course_id: $course_id\r\n        professor_name: $professor_name\r\n        comment: $comment\r\n      }\r\n    ) {\r\n      request_id\r\n      student_id\r\n      course_id\r\n      professor_name\r\n      comment\r\n      created_at\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_REQUEST = gql`\r\n  mutation UpdateRequest(\r\n    $request_id: Int!\r\n    $professor_name: String!\r\n    $comment: String\r\n  ) {\r\n    update_request_by_pk(\r\n      pk_columns: { request_id: $request_id }\r\n      _set: { professor_name: $professor_name, comment: $comment }\r\n    ) {\r\n      request_id\r\n      professor_name\r\n      comment\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_REQUEST = gql`\r\n  mutation DeleteRequest($request_id: Int!) {\r\n    delete_request_by_pk(request_id: $request_id) {\r\n      request_id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_APPOINTMENT = gql`\r\n  mutation CreateAppointment(\r\n    $location: String!\r\n    $offering_id: Int!\r\n    $student_id: String!\r\n    $student_comment: String\r\n  ) {\r\n    insert_appointment_one(\r\n      object: {\r\n        location: $location\r\n        offering_id: $offering_id\r\n        student_id: $student_id\r\n        student_comment: $student_comment\r\n      }\r\n    ) {\r\n      appointment_id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_HOURS = gql`\r\n  mutation UpdateHours($where: hours_bool_exp!, $appointment_id: Int!) {\r\n    diassociateHours: update_hours(\r\n      where: { appointment_id: { _eq: $appointment_id } }\r\n      _set: { appointment_id: null }\r\n    ) {\r\n      affected_rows\r\n    }\r\n    associateNewHours: update_hours(\r\n      where: $where\r\n      _set: { appointment_id: $appointment_id }\r\n    ) {\r\n      returning {\r\n        hours_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_APPOINTMENT = gql`\r\n  mutation UpdateAppointment(\r\n    $location: String!\r\n    $student_comment: String\r\n    $appointment_id: Int!\r\n  ) {\r\n    update_appointment_by_pk(\r\n      pk_columns: { appointment_id: $appointment_id }\r\n      _set: { location: $location, student_comment: $student_comment }\r\n    ) {\r\n      appointment_id\r\n      student_comment\r\n      location\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_HOUR = gql`\r\n  mutation DeleteHour($hours_id: Int!) {\r\n    delete_hours_by_pk(hours_id: $hours_id) {\r\n      hours_id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_HOUR = gql`\r\n  mutation CreateHour($tutor_id: String!, $start_time: timestamp!) {\r\n    insert_hours_one(object: { tutor_id: $tutor_id, start_time: $start_time }) {\r\n      hours_id\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_USER_TYPE = gql`\r\n  query GetUserType($user_id: String!) {\r\n    user_by_pk(user_id: $user_id) {\r\n      tutor {\r\n        tutor_id\r\n      }\r\n      student {\r\n        student_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_UNIVERSITIES = gql`\r\n  query GetUniversities {\r\n    university(order_by: { name: asc }) {\r\n      university_id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_OFFERINGS = gql`\r\n  query GetOfferings(\r\n    $course_exp: course_bool_exp!\r\n    $tutor_exp: tutor_bool_exp!\r\n  ) {\r\n    offering(\r\n      where: { course: $course_exp, tutor: $tutor_exp }\r\n      order_by: { course_id: asc }\r\n    ) {\r\n      offering_id\r\n      grade_received\r\n      professor_name\r\n      year_taken\r\n      course {\r\n        course_id\r\n        name\r\n        department\r\n      }\r\n      tutor {\r\n        tutor_id\r\n        hourly_rate\r\n        bio\r\n        user {\r\n          user_id\r\n          name\r\n        }\r\n        reviews_aggregate {\r\n          aggregate {\r\n            avg {\r\n              stars\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_STUDENT_PROFILE = gql`\r\n  query GetStudentProfile($id: String!) {\r\n    student_by_pk(student_id: $id) {\r\n      student_id\r\n      major\r\n      year\r\n      user {\r\n        user_id\r\n        name\r\n        university {\r\n          university_id\r\n          name\r\n        }\r\n      }\r\n    }\r\n    university(order_by: { name: asc }) {\r\n      university_id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_TUTOR_PROFILE = gql`\r\n  query GetTutorProfile($id: String!) {\r\n    tutor_by_pk(tutor_id: $id) {\r\n      tutor_id\r\n      bio\r\n      hourly_rate\r\n      user {\r\n        user_id\r\n        name\r\n        university {\r\n          university_id\r\n          name\r\n        }\r\n      }\r\n      reviews_aggregate {\r\n        aggregate {\r\n          avg {\r\n            stars\r\n          }\r\n        }\r\n      }\r\n      offerings(order_by: {course_id: asc}) {\r\n        offering_id\r\n        grade_received\r\n        professor_name\r\n        year_taken\r\n        course {\r\n          course_id\r\n          name\r\n          department\r\n        }\r\n        appointments(limit: 1) {\r\n          appointment_id\r\n        }\r\n      }\r\n    }\r\n    university(order_by: {name: asc}) {\r\n      university_id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_COURSES = gql`\r\n  query GetCourses {\r\n    course(order_by: { course_id: asc }) {\r\n      course_id\r\n      name\r\n      department\r\n    }\r\n  }\r\n`;\r\n\r\nexport const READ_REVEIWS = gql`\r\n  query ReadReview($id: String!) {\r\n    tutor_by_pk(tutor_id: $id) {\r\n      tutor_id\r\n      reviews(order_by: { created_at: desc }) {\r\n        review_id\r\n        created_at\r\n        stars\r\n        comment\r\n        student {\r\n          user {\r\n            user_id\r\n            name\r\n          }\r\n          student_id\r\n        }\r\n        student_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_REVIEW = gql`\r\n  query GetReview($student_id: String!, $tutor_id: String!) {\r\n    review(\r\n      where: { student_id: { _eq: $student_id }, tutor_id: { _eq: $tutor_id } }\r\n    ) {\r\n      review_id\r\n      comment\r\n      stars\r\n    }\r\n  }\r\n`;\r\n\r\nexport const READ_REQUEST = gql`\r\n  query ReadRequest {\r\n    request(order_by: { created_at: desc }) {\r\n      request_id\r\n      course_id\r\n      comment\r\n      professor_name\r\n      created_at\r\n      student {\r\n        user {\r\n          name\r\n          user_id\r\n          university_id\r\n        }\r\n        student_id\r\n      }\r\n      student_id\r\n      course {\r\n        name\r\n        course_id\r\n        department\r\n        university {\r\n          name\r\n          university_id\r\n        }\r\n        university_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_STUDENT_APPOINTMENTS = gql`\r\n  query GetStudentAppointments($student_id: String!, $order_by: order_by!) {\r\n    appointment(\r\n      where: { student_id: { _eq: $student_id } }\r\n      order_by: { hours_aggregate: { min: { start_time: $order_by } } }\r\n    ) {\r\n      appointment_id\r\n      offering {\r\n        course_id\r\n        offering_id\r\n        tutor {\r\n          tutor_id\r\n          user {\r\n            name\r\n            user_id\r\n          }\r\n        }\r\n      }\r\n      location\r\n      hours_aggregate {\r\n        aggregate {\r\n          max {\r\n            start_time\r\n          }\r\n          min {\r\n            start_time\r\n          }\r\n        }\r\n      }\r\n      student_comment\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_TUTOR_APPOINTMENTS = gql`\r\n  query GetTutorAppointments($tutor_id: String!, $order_by: order_by!) {\r\n    appointment(\r\n      where: { offering: { tutor_id: { _eq: $tutor_id } } }\r\n      order_by: { hours_aggregate: { min: { start_time: $order_by } } }\r\n    ) {\r\n      appointment_id\r\n      student {\r\n        user {\r\n          name\r\n          user_id\r\n        }\r\n        student_id\r\n      }\r\n      offering {\r\n        course_id\r\n        offering_id\r\n      }\r\n      location\r\n      hours_aggregate {\r\n        aggregate {\r\n          max {\r\n            start_time\r\n          }\r\n          min {\r\n            start_time\r\n          }\r\n        }\r\n      }\r\n      student_comment\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_TUTOR_HOURS = gql`\r\n  query GetTutorHours($where: hours_bool_exp!) {\r\n    hours(where: $where, order_by: { start_time: asc }) {\r\n      hours_id\r\n      start_time\r\n      appointment_id\r\n    }\r\n  }\r\n`;\r\n","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport DateAdapter from \"@mui/lab/AdapterDayjs\";\r\nimport DatePicker from \"@mui/lab/DatePicker\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport {\r\n  Box,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  List,\r\n  ListItemButton,\r\n  ListItemText,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport dayjs from \"dayjs\";\r\nimport { useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../../../Auth\";\r\nimport {\r\n  CREATE_APPOINTMENT,\r\n  UPDATE_HOURS,\r\n  UPDATE_APPOINTMENT,\r\n} from \"../../../graphql/mutations\";\r\nimport { GET_TUTOR_HOURS } from \"../../../graphql/queries\";\r\nvar utc = require(\"dayjs/plugin/utc\");\r\ndayjs.extend(utc);\r\n\r\nexport default function AppointmentDialog({\r\n  offering,\r\n  appointment,\r\n  handleClose,\r\n  isEdit = false,\r\n}) {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [location, setLocation] = useState(appointment?.location);\r\n  const [note, setNote] = useState(appointment?.student_comment);\r\n  const [selectedHours, setSelectedHours] = useState(new Set());\r\n  const initDate = appointment?.hours_aggregate.aggregate.min.start_time;\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    dayjs.utc(initDate).local() ?? dayjs()\r\n  );\r\n  const dayStartUtc = selectedDate.startOf(\"day\").utc();\r\n\r\n  let orClause = [{ appointment_id: { _is_null: true } }];\r\n  if (appointment?.appointment_id)\r\n    orClause.push({\r\n      appointment_id: { _eq: appointment.appointment_id },\r\n    });\r\n  const { data, loading } = useQuery(GET_TUTOR_HOURS, {\r\n    fetchPolicy: \"network-only\",\r\n    variables: {\r\n      where: {\r\n        _or: orClause,\r\n        tutor_id: { _eq: offering.tutor.tutor_id },\r\n        start_time: {\r\n          _gte: dayStartUtc.format(),\r\n          _lt: dayStartUtc.add(1, \"day\").format(),\r\n        },\r\n      },\r\n    },\r\n    onCompleted: (result) => {\r\n      if (appointment?.appointment_id) {\r\n        let initHours = new Set();\r\n        result.hours.forEach((hour) => {\r\n          if (hour.appointment_id === appointment.appointment_id) {\r\n            initHours.add(hour.start_time);\r\n          }\r\n        });\r\n        setSelectedHours(initHours);\r\n      }\r\n    },\r\n  });\r\n\r\n  const [updateHours, hoursMutation] = useMutation(UPDATE_HOURS, {\r\n    onCompleted: () => onClose(),\r\n    refetchQueries: [\"GetStudentAppointments\"],\r\n  });\r\n\r\n  const updateApptTime = (appointmentId) => {\r\n    let hours = [];\r\n    selectedHours.forEach((value) => {\r\n      hours.push({ start_time: { _eq: value } });\r\n    });\r\n    updateHours({\r\n      variables: {\r\n        appointment_id: appointmentId,\r\n        where: {\r\n          _and: [\r\n            { _or: hours },\r\n            { tutor_id: { _eq: offering.tutor.tutor_id } },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const [insertAppointment, insertData] = useMutation(CREATE_APPOINTMENT, {\r\n    variables: {\r\n      location: location,\r\n      student_id: currentUser.uid,\r\n      offering_id: offering.offering_id,\r\n      student_comment: note,\r\n    },\r\n  });\r\n\r\n  const [updateAppointment, updateData] = useMutation(UPDATE_APPOINTMENT, {\r\n    variables: {\r\n      location: location,\r\n      appointment_id: appointment?.appointment_id,\r\n      student_comment: note,\r\n    },\r\n  });\r\n\r\n  const toggleHour = (hour, selected) => {\r\n    let updatedHours = new Set(selectedHours);\r\n    const date = dayjs.utc(hour);\r\n    const prevHour = date.subtract(1, \"hour\").format(\"YYYY-MM-DDTHH:mm:ss\");\r\n    const nextHour = date.add(1, \"hour\").format(\"YYYY-MM-DDTHH:mm:ss\");\r\n\r\n    if (selected) {\r\n      if (!selectedHours.has(prevHour) || !selectedHours.has(nextHour))\r\n        updatedHours.delete(hour);\r\n    } else {\r\n      // only allow multiple selection if it is contiguous\r\n      if (\r\n        selectedHours.size === 0 ||\r\n        selectedHours.has(prevHour) ||\r\n        selectedHours.has(nextHour)\r\n      ) {\r\n        updatedHours.add(hour);\r\n      }\r\n    }\r\n    setSelectedHours(updatedHours);\r\n  };\r\n\r\n  const onClose = () => {\r\n    handleClose();\r\n    setSelectedHours(new Set());\r\n    if (!isEdit) {\r\n      setSelectedDate(dayjs());\r\n      setLocation(\"\");\r\n      setNote(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (isEdit) {\r\n      updateAppointment({\r\n        onCompleted: (result) => {\r\n          updateApptTime(result.update_appointment_by_pk.appointment_id);\r\n        },\r\n      });\r\n    } else {\r\n      insertAppointment({\r\n        onCompleted: (result) =>\r\n          updateApptTime(result.insert_appointment_one.appointment_id),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open onClose={onClose} scroll={\"body\"}>\r\n      <DialogTitle>\r\n        {isEdit ? \"Edit your \" : \"Book an \"} appointment with{\" \"}\r\n        {offering.tutor.user.name} for{\" \"}\r\n        {offering.course_id ?? offering.course.course_id}\r\n      </DialogTitle>\r\n      <DialogContent sx={{ marginBottom: 5 }}>\r\n        <Typography mb={1}>Select a day to view availability</Typography>\r\n        <LocalizationProvider dateAdapter={DateAdapter}>\r\n          <DatePicker\r\n            clearable\r\n            value={selectedDate}\r\n            onChange={(date) => {\r\n              setSelectedDate(date);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} fullWidth helperText={null} />\r\n            )}\r\n          />\r\n        </LocalizationProvider>\r\n        {loading && (\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n            mt={2}\r\n          >\r\n            <CircularProgress />\r\n          </Box>\r\n        )}\r\n        {data?.hours?.length === 0 && (\r\n          <Typography mt={2} mb={isEdit && 2}>\r\n            {offering.tutor.user.name} has no {isEdit && \"other\"} availability\r\n            on this day\r\n          </Typography>\r\n        )}\r\n        {data?.hours?.length > 0 && (\r\n          <>\r\n            <Typography mt={2}>Select one or more adjacent slots</Typography>\r\n            <List>\r\n              {data.hours.map((hour, i) => {\r\n                const selected = selectedHours.has(hour.start_time);\r\n                return (\r\n                  <ListItemButton\r\n                    selected={selected}\r\n                    key={i}\r\n                    onClick={() => toggleHour(hour.start_time, selected)}\r\n                  >\r\n                    <ListItemText\r\n                      primary={dayjs\r\n                        .utc(hour.start_time)\r\n                        .local()\r\n                        .format(\"h:mma\")}\r\n                    />\r\n                  </ListItemButton>\r\n                );\r\n              })}\r\n            </List>\r\n          </>\r\n        )}\r\n        {(data?.hours?.length > 0 || isEdit) && (\r\n          <>\r\n            <Typography mb={2}>Where would you like to meet?</Typography>\r\n            <TextField\r\n              fullWidth\r\n              name=\"location\"\r\n              label=\"Location\"\r\n              value={location}\r\n              onChange={(event) => setLocation(event.target.value)}\r\n            />\r\n            <Typography mb={2} mt={2}>\r\n              Anything you'd like {offering.tutor.user.name} to know?\r\n            </Typography>\r\n            <TextField\r\n              fullWidth\r\n              name=\"note\"\r\n              label=\"Note\"\r\n              value={note}\r\n              onChange={(event) => setNote(event.target.value)}\r\n            />\r\n          </>\r\n        )}\r\n      </DialogContent>\r\n      {selectedHours.size > 0 && location && (\r\n        <DialogActions>\r\n          <LoadingButton\r\n            loading={\r\n              insertData.loading || hoursMutation.loading || updateData.loading\r\n            }\r\n            onClick={handleSubmit}\r\n          >\r\n            {\" \"}\r\n            Confirm{\" \"}\r\n          </LoadingButton>\r\n        </DialogActions>\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Stack,\r\n  Rating,\r\n  Typography,\r\n  Box,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { AuthContext } from \"../../../Auth\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { CREATE_REVIEW } from \"../../../graphql/mutations\";\r\nimport { GET_REVIEW } from \"../../../graphql/queries\";\r\n\r\nexport default function ReviewDialog({ open, close, tutor }) {\r\n  const { currentUser } = React.useContext(AuthContext);\r\n  const [createReview, { loading }] = useMutation(CREATE_REVIEW, {\r\n    refetchQueries: [GET_REVIEW],\r\n  });\r\n\r\n  const reviewData = useQuery(GET_REVIEW, {\r\n    variables: {\r\n      tutor_id: tutor.tutor_id,\r\n      student_id: currentUser.uid,\r\n    },\r\n    skip: !open,\r\n  });\r\n\r\n  const [comment, setComment] = React.useState(\"\");\r\n  const [stars, setStars] = React.useState(0);\r\n\r\n  const handleReview = (event) => {\r\n    event.preventDefault();\r\n\r\n    createReview({\r\n      variables: {\r\n        student_id: currentUser.uid,\r\n        tutor_id: tutor.tutor_id,\r\n        comment: comment,\r\n        stars: stars,\r\n      },\r\n      onCompleted: onClose,\r\n    });\r\n  };\r\n\r\n  const onClose = () => {\r\n    close();\r\n    setComment(\"\");\r\n    setStars(0);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (reviewData?.data?.review[0]) {\r\n      setComment(reviewData.data.review[0].comment);\r\n      setStars(reviewData.data.review[0].stars);\r\n    }\r\n  }, [reviewData?.data?.review]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={onClose}>\r\n        <DialogTitle>Review</DialogTitle>\r\n        <DialogContent>\r\n          <form id=\"reviewForm\" onSubmit={handleReview}>\r\n            <Stack spacing={3} mt={1}>\r\n              <Typography>\r\n                How would you rate your experience with {tutor.user.name}?\r\n              </Typography>\r\n              {reviewData.loading ? (\r\n                <Box\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  width=\"100%\"\r\n                  mt={2}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              ) : (\r\n                <>\r\n                  <Rating\r\n                    name=\"simple-controlled\"\r\n                    size=\"large\"\r\n                    value={stars}\r\n                    onChange={(event, newValue) => {\r\n                      if(newValue){\r\n                        setStars(newValue);\r\n                      } else {\r\n                        setStars(0);\r\n                      }\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    name=\"commentName\"\r\n                    label=\"Comment (optional)\"\r\n                    value={comment}\r\n                    multiline\r\n                    rows={5}\r\n                    maxRows={10}\r\n                    onChange={(event) => setComment(event.target.value)}\r\n                  />\r\n                </>\r\n              )}\r\n            </Stack>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button disabled={loading} onClick={onClose}>\r\n            Cancel\r\n          </Button>\r\n          <LoadingButton loading={loading} type=\"submit\" form=\"reviewForm\">\r\n            Create\r\n          </LoadingButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  CardContent,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport {\r\n  LocationOnOutlined,\r\n  AccessTimeOutlined,\r\n  Edit,\r\n  RateReview,\r\n} from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AppointmentDialog from \"./AppointmentDialog\";\r\nimport ReviewDialog from \"./ReviewDialog\";\r\nimport dayjs from \"dayjs\";\r\nvar utc = require(\"dayjs/plugin/utc\");\r\ndayjs.extend(utc);\r\n\r\nexport default function AppointmentCard({ appointment, isStudent }) {\r\n  const [showNotes, setShowNotes] = useState(false);\r\n  const [showEditDialog, setShowEditDialog] = useState(false);\r\n  const [reviewTutor, setReviewTutor] = useState(false);\r\n\r\n  const startTime = appointment.hours_aggregate.aggregate.min.start_time;\r\n  const endTime = appointment.hours_aggregate.aggregate.max.start_time;\r\n\r\n  const hourFormat = \"h:mma\";\r\n  const startHour = dayjs.utc(startTime).local().format(hourFormat);\r\n  const endHour = dayjs.utc(endTime).add(1, \"hour\").local().format(hourFormat);\r\n\r\n  const hasPassed = dayjs().local() > dayjs.utc(endTime).local();\r\n\r\n  const userName = isStudent\r\n    ? appointment.offering.tutor.user?.name\r\n    : appointment.student.user?.name;\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        sx={{\r\n          minHeight: 200,\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Grid\r\n            mb={1}\r\n            container\r\n            justifyContent=\"space-between\"\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h6\">{userName}</Typography>\r\n            {isStudent && (\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() =>\r\n                  hasPassed ? setReviewTutor(true) : setShowEditDialog(true)\r\n                }\r\n              >\r\n                {hasPassed ? (\r\n                  <Tooltip title=\"Write a review\">\r\n                    <RateReview fontSize={\"10\"} />\r\n                  </Tooltip>\r\n                ) : (\r\n                  <Tooltip title=\"Edit appointment\">\r\n                    <Edit fontSize={\"10\"} />\r\n                  </Tooltip>\r\n                )}\r\n              </IconButton>\r\n            )}\r\n          </Grid>\r\n          <Typography mb={1} variant=\"body1\">\r\n            {appointment.offering.course_id}\r\n          </Typography>\r\n          <Grid container>\r\n            <Grid item mr={1}>\r\n              <AccessTimeOutlined fontSize={\"10\"} />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography color=\"textSecondary\" variant=\"body1\">\r\n                {startHour} to {endHour}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item mr={1}>\r\n              <LocationOnOutlined fontSize={\"10\"} color=\"textSecondary\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography color=\"textSecondary\" variant=\"body1\">\r\n                {appointment.location}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions disableSpacing={true}>\r\n          {appointment.student_comment && (\r\n            <Button size=\"small\" onClick={() => setShowNotes(true)}>\r\n              See Notes\r\n            </Button>\r\n          )}\r\n        </CardActions>\r\n      </Card>\r\n      <Dialog open={showNotes} onClose={() => setShowNotes(false)}>\r\n        <DialogTitle>Appointment Notes</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>{appointment.student_comment}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowNotes(false)}> Done </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {showEditDialog && (\r\n        <AppointmentDialog\r\n          offering={appointment.offering}\r\n          appointment={appointment}\r\n          handleClose={() => setShowEditDialog(false)}\r\n          isEdit={true}\r\n        />\r\n      )}\r\n      {isStudent && (\r\n        <ReviewDialog\r\n          open={reviewTutor}\r\n          close={() => setReviewTutor(false)}\r\n          tutor={appointment.offering.tutor}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport { Typography, Button } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Fragment } from \"react\";\r\nimport AppointmentCard from \"./AppointmentCard\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport {\r\n  GET_STUDENT_APPOINTMENTS,\r\n  GET_TUTOR_APPOINTMENTS,\r\n} from \"../../../graphql/queries\";\r\nimport { AuthContext } from \"../../../Auth\";\r\nimport LoadingPage from \"../../../views/LoadingPage\";\r\nimport dayjs from \"dayjs\";\r\nvar utc = require(\"dayjs/plugin/utc\");\r\ndayjs.extend(utc);\r\n\r\nexport default function Appointments() {\r\n  const [isAscending, setIsAscending] = useState(true);\r\n  const [datedAppointments, setDatedAppointments] = useState(new Map());\r\n  const { userType, currentUser } = useContext(AuthContext);\r\n  const isStudent = userType.current === \"student\";\r\n\r\n  const studentAppts = useQuery(GET_STUDENT_APPOINTMENTS, {\r\n    fetchPolicy: \"network-only\",\r\n    variables: {\r\n      student_id: currentUser.uid,\r\n      order_by: isAscending ? \"asc\" : \"desc\",\r\n    },\r\n    skip: !isStudent,\r\n  });\r\n\r\n  const tutorAppts = useQuery(GET_TUTOR_APPOINTMENTS, {\r\n    fetchPolicy: \"network-only\",\r\n    variables: {\r\n      tutor_id: currentUser.uid,\r\n      order_by: isAscending ? \"asc\" : \"desc\",\r\n    },\r\n    skip: isStudent,\r\n  });\r\n\r\n  const appointmentsData = isStudent ? studentAppts.data : tutorAppts.data;\r\n\r\n  useEffect(() => {\r\n    if (appointmentsData?.appointment) {\r\n      let appointments = new Map();\r\n      let currentDate = dayjs();\r\n      appointmentsData.appointment.forEach((appointment) => {\r\n        const dateObj = dayjs\r\n          .utc(appointment.hours_aggregate.aggregate.min.start_time)\r\n          .local();\r\n\r\n        let date;\r\n        const isCurrentMonth = dateObj.month() === currentDate.month();\r\n        const isCurrentYear = dateObj.year() === currentDate.year();\r\n\r\n        if (\r\n          isCurrentMonth &&\r\n          isCurrentYear &&\r\n          dateObj.date() === currentDate.date()\r\n        ) {\r\n          date = \"Today\";\r\n        } else if (\r\n          isCurrentMonth &&\r\n          isCurrentYear &&\r\n          dateObj.date() === currentDate.add(1, \"day\").date()\r\n        ) {\r\n          date = \"Tomorrow\";\r\n        } else if (\r\n          isCurrentMonth &&\r\n          isCurrentYear &&\r\n          dateObj.date() === currentDate.subtract(1, \"day\").date()\r\n        ) {\r\n          date = \"Yesterday\";\r\n        } else {\r\n          date = dateObj.format(\"MMMM D, YYYY\");\r\n        }\r\n\r\n        let dayAppointments = appointments.get(date) ?? [];\r\n        dayAppointments.push(appointment);\r\n\r\n        appointments.set(date, dayAppointments);\r\n      });\r\n      setDatedAppointments(appointments);\r\n    }\r\n  }, [appointmentsData?.appointment]);\r\n\r\n  if (studentAppts.loading || tutorAppts.loading) return <LoadingPage />;\r\n  if (studentAppts.error || tutorAppts.error)\r\n    return `${studentAppts.error ?? tutorAppts.error}`;\r\n\r\n  return (\r\n    <Grid container mt={6} px={6} pb={6}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        justifyContent={\"center\"}\r\n        alignItems={\"center\"}\r\n        rowSpacing={5}\r\n      >\r\n        <Grid item xs={12}>\r\n          {appointmentsData?.appointment?.length === 0 ? (\r\n            <Typography>You have no appointments yet</Typography>\r\n          ) : (\r\n            <Button\r\n              onClick={() => {\r\n                setIsAscending(!isAscending);\r\n              }}\r\n            >\r\n              {isAscending ? \"View Latest\" : \"View Earliest\"}\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n        {[...datedAppointments].map(([date, appointments], i) => {\r\n          return (\r\n            <Fragment key={i}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">{date}</Typography>\r\n              </Grid>\r\n              <Grid item container columnSpacing={2} rowSpacing={2}>\r\n                {appointments.map((appointment, j) => {\r\n                  return (\r\n                    <Grid item md={4} sm={6} xs={12} key={j}>\r\n                      <AppointmentCard\r\n                        appointment={appointment}\r\n                        isStudent={isStudent}\r\n                      />\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Title;\r\n","import { AccountCircle, Paid, School } from \"@mui/icons-material\";\r\nimport { Divider, Grid, Paper, Rating, Stack, Tooltip, Typography } from \"@mui/material\";\r\nimport dayjs from \"dayjs\";\r\nimport Title from \"./Title\";\r\nvar utc = require(\"dayjs/plugin/utc\");\r\ndayjs.extend(utc);\r\n\r\nexport default function OfferingTile({ offering, children }) {\r\n  const stars = offering.tutor.reviews_aggregate.aggregate.avg.stars;\r\n  return (\r\n    <>\r\n      <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n        <Title>{`${offering.course.course_id} ${offering.course.name}`}</Title>\r\n        <Stack\r\n          direction=\"row\"\r\n          spacing={2}\r\n          divider={<Divider orientation=\"vertical\" flexItem />}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                <AccountCircle fontSize=\"small\" />\r\n                <Typography variant=\"h6\">{offering.tutor.user.name}</Typography>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                <Paid fontSize=\"small\" />\r\n                <Typography variant=\"h6\">\r\n                  {`$${offering.tutor.hourly_rate}/hr`}\r\n                </Typography>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item xs={12} alignItems=\"center\">\r\n              <Tooltip title={`Rating: ${stars ?? 'None'}`} placement=\"right\">\r\n                <span>\r\n                  <Rating value={stars ?? 0} readOnly />\r\n                </span>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                <Typography variant=\"body1\">{offering.tutor.bio}</Typography>\r\n              </Stack>\r\n            </Grid>\r\n          </Grid>\r\n          {offering.grade_received ? (\r\n            <Stack alignItems=\"center\" justifyContent=\"center\" minWidth={60}>\r\n              <School />\r\n              <Typography variant=\"h5\">{offering.grade_received}</Typography>\r\n              <Typography variant=\"caption\" noWrap>\r\n                {offering.year_taken}\r\n              </Typography>\r\n              <Typography variant=\"caption\" noWrap>\r\n                {offering.professor_name}\r\n              </Typography>\r\n            </Stack>\r\n          ) : null}\r\n        </Stack>\r\n        {children}\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Autocomplete, Button, Dialog, DialogActions, DialogContent, DialogTitle, Stack, TextField } from \"@mui/material\";\r\nimport * as React from \"react\";\r\nimport { CREATE_COURSE } from \"../../graphql/mutations\";\r\nimport { GET_UNIVERSITIES } from \"../../graphql/queries\";\r\n\r\nexport default function NewCourseDialog({ open, handleClose, onCompleted }) {\r\n  // Fetch universities\r\n  const { loading, error, data } = useQuery(GET_UNIVERSITIES);\r\n  const [createCourse, createResult] = useMutation(CREATE_COURSE);\r\n\r\n  if (loading) return null;\r\n  if (error) return `${error}`;\r\n  const universities = data.university;\r\n  const names = universities.map((uni) => uni.name);\r\n\r\n  const handleCreateCourse = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    // Search for university_id based on name\r\n    const uniName = data.get('university');\r\n    const university = universities.find((u) => u.name === uniName);\r\n    if (!university) return;\r\n\r\n    // Create course, then call provided onCompleted\r\n    createCourse({\r\n      variables: {\r\n        course_id: data.get('course') || null,\r\n        name: data.get('name') || null,\r\n        department: data.get('department') || null,\r\n        university_id: university.university_id,\r\n      },\r\n      onCompleted: onCompleted,\r\n    });\r\n  };\r\n\r\n  return <Dialog open={open} onClose={handleClose}>\r\n    <DialogTitle>Add Course</DialogTitle>\r\n    <DialogContent>\r\n      <form id=\"newCourseForm\" onSubmit={handleCreateCourse}>\r\n        <Stack spacing={3} mt={1}>\r\n          <TextField\r\n            required\r\n            name=\"course\"\r\n            label=\"Course ID\"\r\n          />\r\n          <TextField\r\n            required\r\n            name=\"name\"\r\n            label=\"Course Name\"\r\n          />\r\n          <TextField\r\n            required\r\n            name=\"department\"\r\n            label=\"Department\"\r\n          />\r\n          <Autocomplete\r\n            disablePortal\r\n            options={names}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                required\r\n                name=\"university\"\r\n                label=\"University\"\r\n                {...params}\r\n              />\r\n            )}\r\n          />\r\n        </Stack>\r\n      </form>\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button disabled={createResult.loading} onClick={handleClose}>Cancel</Button>\r\n      <LoadingButton loading={createResult.loading} type=\"submit\" form=\"newCourseForm\">\r\n        Create\r\n      </LoadingButton>\r\n    </DialogActions>\r\n  </Dialog>;\r\n}","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Autocomplete, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Stack, TextField } from \"@mui/material\";\r\nimport * as React from \"react\";\r\nimport { AuthContext } from \"../../../Auth\";\r\nimport { CREATE_REQUEST } from \"../../../graphql/mutations\";\r\nimport { GET_COURSES } from \"../../../graphql/queries\";\r\nimport NewCourseDialog from \"../NewCourseDialog\";\r\n\r\nexport default function RequestCourseDialog({ open, handleClose }) {\r\n  const { currentUser } = React.useContext(AuthContext);\r\n\r\n  const [newCourse, setNewCourse] = React.useState(false);\r\n  const [course, setCourse] = React.useState(null);\r\n  const [professor, setProfessor] = React.useState(null);\r\n  const [comment, setComment] = React.useState(null);\r\n\r\n  const [createRequest, { loading }] = useMutation(CREATE_REQUEST);\r\n\r\n  // Fetch all courses\r\n  const courseResult = useQuery(GET_COURSES);\r\n\r\n  if (courseResult.loading) return null;\r\n  if (courseResult.error) return `${courseResult.error}`;\r\n  const courses = courseResult.data.course.map((course) => course.course_id);\r\n\r\n  const handleRequestCourse = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Course if required\r\n    if (!course) return;\r\n\r\n    createRequest({\r\n      variables: {\r\n        student_id: currentUser.uid,\r\n        course_id: course,\r\n        professor_name: professor,\r\n        comment: comment,\r\n      },\r\n      onCompleted: onClose,\r\n    });\r\n  };\r\n\r\n  const onClose = () => {\r\n    // Close dialog and set variables to null\r\n    handleClose();\r\n    setCourse(null);\r\n    setProfessor(null);\r\n    setComment(null);\r\n  };\r\n\r\n  return <>\r\n    <Dialog open={open} onClose={onClose}>\r\n      <DialogTitle>Request a Course</DialogTitle>\r\n      <DialogContent>\r\n        <form id=\"requestCourseForm\" onSubmit={handleRequestCourse}>\r\n          <Stack spacing={3} mt={1}>\r\n            <Stack direction=\"row\" spacing={3} alignItems=\"center\">\r\n              <Autocomplete\r\n                disablePortal\r\n                fullWidth\r\n                options={courses}\r\n                value={course}\r\n                onChange={(_, value) => setCourse(value)}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    name=\"course\"\r\n                    label=\"Course\"\r\n                  />\r\n                )}\r\n              />\r\n              <IconButton onClick={() => setNewCourse(true)}>\r\n                <Add />\r\n              </IconButton>\r\n            </Stack>\r\n            <TextField\r\n              name=\"professorName\"\r\n              label=\"Professor Name (optional)\"\r\n              value={professor}\r\n              onChange={(event) => setProfessor(event.target.value)}\r\n            />\r\n            <TextField\r\n              name=\"comment\"\r\n              label=\"Comment (optional)\"\r\n              value={comment}\r\n              onChange={(event) => setComment(event.target.value)}\r\n            />\r\n          </Stack>\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button disabled={loading} onClick={onClose}>Cancel</Button>\r\n        <LoadingButton\r\n          disabled={!course}\r\n          loading={loading}\r\n          type=\"submit\"\r\n          form=\"requestCourseForm\"\r\n        >\r\n          Create\r\n        </LoadingButton>\r\n      </DialogActions>\r\n    </Dialog>\r\n    <NewCourseDialog\r\n      open={newCourse}\r\n      handleClose={() => setNewCourse(false)}\r\n      onCompleted={() => {\r\n        setNewCourse(false);\r\n        courseResult.refetch();\r\n      }}\r\n    />\r\n  </>;\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { ContactSupport, FilterAlt, Bookmark } from \"@mui/icons-material\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport {\r\n  Autocomplete,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Stack,\r\n} from \"@mui/material\";\r\nimport * as React from \"react\";\r\nimport { AuthContext } from \"../../../Auth\";\r\nimport {\r\n  GET_COURSES,\r\n  GET_OFFERINGS,\r\n  GET_STUDENT_PROFILE,\r\n} from \"../../../graphql/queries\";\r\nimport LoadingPage from \"../../LoadingPage\";\r\nimport OfferingTile from \"../OfferingTile\";\r\nimport RequestCourseDialog from \"./RequestCourseDialog\";\r\nimport AppointmentDialog from \"../appointments/AppointmentDialog\";\r\n\r\nexport default function Offerings() {\r\n  const [course, setCourse] = React.useState(null);\r\n  const [startTime, setStartTime] = React.useState(null);\r\n  const [endTime, setEndTime] = React.useState(null);\r\n  const [requestingCourse, setRequestingCourse] = React.useState(false);\r\n\r\n  const { loading, error, data } = useQuery(GET_COURSES);\r\n\r\n  if (loading) return <LoadingPage />;\r\n  if (error) return `${error}`;\r\n\r\n  const courses = data.course.map((course) => course.course_id);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2 }} display=\"flex\" justifyContent=\"center\">\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6} display=\"flex\" alignItems=\"center\">\r\n                <FilterAlt sx={{ mr: 1 }} />\r\n                <Typography variant=\"h6\">Filter results</Typography>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={6}\r\n                display=\"flex\"\r\n                sx={{\r\n                  justifyContent: { xs: \"flex-start\", md: \"flex-end\" },\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={() => setRequestingCourse(true)}\r\n                  startIcon={<ContactSupport />}\r\n                  variant=\"outlined\"\r\n                >\r\n                  Request a course\r\n                </Button>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={4}\r\n                display=\"flex\"\r\n                justifyContent=\"flex-end\"\r\n              >\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                  <DateTimePicker\r\n                    clearable\r\n                    label=\"After Time\"\r\n                    value={startTime}\r\n                    onChange={setStartTime}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} fullWidth helperText={null} />\r\n                    )}\r\n                  />\r\n                </LocalizationProvider>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={4}\r\n                display=\"flex\"\r\n                justifyContent=\"flex-end\"\r\n              >\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                  <DateTimePicker\r\n                    clearable\r\n                    label=\"Before Time\"\r\n                    value={endTime}\r\n                    onChange={setEndTime}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} fullWidth helperText={null} />\r\n                    )}\r\n                  />\r\n                </LocalizationProvider>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={4}\r\n                display=\"flex\"\r\n                justifyContent=\"flex-end\"\r\n              >\r\n                <Autocomplete\r\n                  disablePortal\r\n                  options={courses}\r\n                  value={course}\r\n                  onChange={(_, value) => setCourse(value)}\r\n                  sx={{ width: \"100%\" }}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} fullWidth label=\"Course\" />\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <OfferingResults\r\n          course={course}\r\n          startTime={startTime}\r\n          endTime={endTime}\r\n        />\r\n      </Grid>\r\n      <RequestCourseDialog\r\n        open={requestingCourse}\r\n        handleClose={() => setRequestingCourse(false)}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst OfferingResults = ({ course, startTime, endTime }) => {\r\n  const { currentUser } = React.useContext(AuthContext);\r\n  const [appointmentOffering, setAppointmentOffering] = React.useState();\r\n\r\n  const pResult = useQuery(GET_STUDENT_PROFILE, {\r\n    variables: {\r\n      id: currentUser.uid,\r\n    },\r\n  });\r\n\r\n  const universityId =\r\n    pResult.data?.student_by_pk.user.university.university_id;\r\n\r\n  const oResult = useQuery(GET_OFFERINGS, {\r\n    skip: !universityId,\r\n    variables: {\r\n      course_exp: {\r\n        ...(course && { course_id: { _eq: course } }),\r\n      },\r\n      tutor_exp: {\r\n        user: {\r\n          university_id: {\r\n            _eq: universityId,\r\n          },\r\n        },\r\n        // Add hours check if provided\r\n        ...((startTime || endTime) && {\r\n          hours: {\r\n            start_time: {\r\n              ...(startTime && { _gte: startTime.toISOString() }),\r\n              ...(endTime && { _lte: endTime.toISOString() }),\r\n            },\r\n          },\r\n        }),\r\n      },\r\n    },\r\n  });\r\n\r\n  if (pResult.error || oResult.error) return `${pResult.error}${oResult.error}`;\r\n  if (oResult.data === undefined) return <LoadingPage />;\r\n\r\n  const offerings = oResult.data.offering;\r\n\r\n  if (offerings.length === 0) {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n        height=\"100vh\"\r\n      >\r\n        No results.\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {offerings.map((offering, i) => (\r\n        <Grid item xs={12} md={6} key={i}>\r\n          <OfferingTile\r\n            offering={offering}\r\n            children={\r\n              <Stack mt={2} direction=\"row\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<Bookmark />}\r\n                  onClick={() => setAppointmentOffering(offering)}\r\n                >\r\n                  Book This Tutor\r\n                </Button>\r\n              </Stack>\r\n            }\r\n          />\r\n        </Grid>\r\n      ))}\r\n      {appointmentOffering && (\r\n        <AppointmentDialog\r\n          offering={appointmentOffering}\r\n          handleClose={() => setAppointmentOffering(null)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Autocomplete, Container, Grid, Paper, TextField } from \"@mui/material\";\r\nimport * as React from \"react\";\r\nimport { AuthContext } from \"../../../Auth\";\r\nimport { UPDATE_STUDENT } from \"../../../graphql/mutations\";\r\nimport { GET_STUDENT_PROFILE } from \"../../../graphql/queries\";\r\nimport LoadingPage from \"../../LoadingPage\";\r\nimport Title from \"../Title\";\r\n\r\nexport default function Profile() {\r\n  const { currentUser } = React.useContext(AuthContext);\r\n  const [updateStudent, updateResult] = useMutation(UPDATE_STUDENT, {\r\n    variables: {\r\n      id: currentUser.uid,\r\n    },\r\n  });\r\n\r\n  // Fetch current user profile\r\n  const { loading, error, data } = useQuery(GET_STUDENT_PROFILE, {\r\n    variables: {\r\n      id: currentUser.uid,\r\n    },\r\n  });\r\n\r\n  if (loading) return <LoadingPage />;\r\n  if (error) return `${error}`;\r\n\r\n  // Extract relevant data\r\n  const student = data.student_by_pk;\r\n  const universities = data.university.map((uni) => {\r\n    return {\r\n      label: uni.name,\r\n      id: uni.university_id,\r\n    };\r\n  });\r\n\r\n  // Callback for form\r\n  const formSave = (event, university) => {\r\n    // Prevents automatic reload\r\n    event.preventDefault();\r\n\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    // Default values to null\r\n    // No refetch needed, cache updates automatically\r\n    updateStudent({\r\n      variables: {\r\n        name: data.get('name') || null,\r\n        university_id: university?.id ?? null,\r\n        major: data.get('major') || null,\r\n        year: data.get('year') || null,\r\n      },\r\n    });\r\n  };\r\n\r\n  // Separate component required due to the 'university' state\r\n  return <ProfileForm\r\n    student={student}\r\n    universities={universities}\r\n    onSave={formSave}\r\n    loading={updateResult.loading}\r\n  />;\r\n}\r\n\r\nconst ProfileForm = ({ student, universities, onSave, loading }) => {\r\n  // Student's current university, or null if not set\r\n  const [university, setUniversity] = React.useState(\r\n    student.user.university\r\n      ? {\r\n        label: student.user.university.name,\r\n        id: student.user.university.university_id,\r\n      }\r\n      : null\r\n  );\r\n\r\n  return <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n    <Grid container spacing={3} justifyContent={\"center\"}>\r\n      <Grid item xs={12} md={10}>\r\n        <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n          <Title>Your Profile</Title>\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            justifyContent={\"center\"}\r\n            alignItems=\"center\"\r\n            component=\"form\"\r\n            onSubmit={(event) => onSave(event, university)}\r\n            noValidate\r\n            sx={{ mt: 2 }}\r\n          >\r\n            <Grid item xs={10} md={10}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                defaultValue={student.user.name}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={10} md={10}>\r\n              <Autocomplete\r\n                disablePortal\r\n                id=\"university\"\r\n                options={universities}\r\n                value={university}\r\n                isOptionEqualToValue={(option, value) => option.id === value.id}\r\n                onChange={(_, newValue) => setUniversity(newValue)}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    id=\"university\"\r\n                    label=\"University\"\r\n                    {...params}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={10} md={5}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"major\"\r\n                label=\"Major\"\r\n                name=\"major\"\r\n                defaultValue={student.major}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={10} md={5}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"year\"\r\n                label=\"Year\"\r\n                name=\"year\"\r\n                type=\"number\"\r\n                defaultValue={student.year}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={10} sx={{ mt: 2, mb: 2 }}>\r\n              <LoadingButton loading={loading} type=\"submit\" variant=\"contained\">\r\n                Save\r\n              </LoadingButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  </Container>;\r\n};\r\n","import { AccountCircle, Event, School } from \"@mui/icons-material\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport MuiAppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport MuiDrawer from \"@mui/material/Drawer\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport * as React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../../../firebase\";\r\nimport Appointments from \"../appointments/Appointments\";\r\nimport Offerings from \"./Offerings\";\r\nimport Profile from \"./Profile\";\r\n\r\nexport default function StudentDashboard({ page }) {\r\n  const navigate = useNavigate();\r\n  const drawerWidth = 240;\r\n\r\n  const AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== \"open\",\r\n  })(({ theme, open }) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    }),\r\n  }));\r\n\r\n  const Drawer = styled(MuiDrawer, {\r\n    shouldForwardProp: (prop) => prop !== \"open\",\r\n  })(({ theme, open }) => ({\r\n    \"& .MuiDrawer-paper\": {\r\n      position: \"relative\",\r\n      whiteSpace: \"nowrap\",\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      boxSizing: \"border-box\",\r\n      ...(!open && {\r\n        overflowX: \"hidden\",\r\n        transition: theme.transitions.create(\"width\", {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          width: theme.spacing(9),\r\n        },\r\n      }),\r\n    },\r\n  }));\r\n\r\n  const theme = useTheme();\r\n  const fullDrawer = useMediaQuery(theme.breakpoints.up('sm'));\r\n\r\n  const [open, setOpen] = React.useState(true);\r\n  const [anchor, setAnchor] = React.useState(null);\r\n\r\n  const toggleDrawer = (event) => {\r\n    if (fullDrawer) {\r\n      setOpen(!open);\r\n    }\r\n    else {\r\n      setAnchor(anchor === null ? event.currentTarget : null);\r\n    }\r\n  };\r\n\r\n  const drawerItems = [\r\n    ['Appointments', <Event />],\r\n    ['Offerings', <School />],\r\n    ['Profile', <AccountCircle />],\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" open={fullDrawer && open}>\r\n        <Toolbar\r\n          sx={{\r\n            pr: \"24px\", // keep right padding when drawer closed\r\n          }}\r\n        >\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={toggleDrawer}\r\n            sx={{\r\n              marginRight: \"36px\",\r\n              ...(fullDrawer && open && { display: \"none\" }),\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            sx={{ flexGrow: 1 }}\r\n          >\r\n            {page}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        open={open}\r\n        sx={{\r\n          ...(!fullDrawer && { display: \"none\" }),\r\n        }}\r\n      >\r\n        <Toolbar\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n            px: [1],\r\n          }}\r\n        >\r\n          <IconButton onClick={toggleDrawer}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <Divider />\r\n        <List>\r\n          {drawerItems.map(([name, icon], i) => {\r\n            return <ListItem\r\n              key={i}\r\n              selected={page === name}\r\n              button\r\n              onClick={() => {\r\n                navigate(`/${name.toLowerCase()}`, { replace: true });\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                {icon}\r\n              </ListItemIcon>\r\n              <ListItemText primary={name} />\r\n            </ListItem>;\r\n          })}\r\n          <Divider />\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              auth.signOut();\r\n              localStorage.removeItem(\"li\");\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <LogoutIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Log Out\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <Menu\r\n        anchorEl={anchor}\r\n        open={!fullDrawer && anchor !== null}\r\n        onClose={() => setAnchor(null)}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n        {drawerItems.map(([name, icon], i) => {\r\n          return <MenuItem\r\n            key={i}\r\n            selected={page === name}\r\n            onClick={() => {\r\n              navigate(`/${name.toLowerCase()}`, { replace: true });\r\n              setAnchor(null);\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              {icon}\r\n            </ListItemIcon>\r\n            {name}\r\n          </MenuItem>;\r\n        })}\r\n        <Divider />\r\n        <MenuItem\r\n          onClick={() => {\r\n            auth.signOut();\r\n            localStorage.removeItem(\"li\");\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <LogoutIcon />\r\n          </ListItemIcon>\r\n          Log Out\r\n        </MenuItem>\r\n      </Menu>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          backgroundColor: (theme) =>\r\n            theme.palette.mode === \"light\"\r\n              ? theme.palette.grey[100]\r\n              : theme.palette.grey[900],\r\n          flexGrow: 1,\r\n          height: \"100vh\",\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        {page === \"Appointments\" ? (\r\n          <Appointments />\r\n        ) : page === \"Offerings\" ? (\r\n          <Offerings />\r\n        ) : (\r\n          <Profile />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import ArrowBackIosNewOutlinedIcon from \"@mui/icons-material/ArrowBackIosNewOutlined\";\r\nimport ArrowForwardIosOutlinedIcon from \"@mui/icons-material/ArrowForwardIosOutlined\";\r\nimport DateAdapter from \"@mui/lab/AdapterDayjs\";\r\nimport DatePicker from \"@mui/lab/DatePicker\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport {\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { GET_TUTOR_HOURS } from \"../../../graphql/queries\";\r\nimport { CREATE_HOUR, DELETE_HOUR } from \"../../../graphql/mutations\";\r\nimport { AuthContext } from \"../../../Auth\";\r\nimport LoadingPage from \"../../LoadingPage\";\r\nimport dayjs from \"dayjs\";\r\nvar utc = require(\"dayjs/plugin/utc\");\r\nvar dayOfYear = require(\"dayjs/plugin/dayOfYear\");\r\ndayjs.extend(utc);\r\ndayjs.extend(dayOfYear);\r\n\r\nexport default function Availability() {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [selectedDay, setSelectedDay] = useState(dayjs());\r\n  const [weekHours, setWeekHours] = useState({});\r\n  const sunday = selectedDay.startOf(\"week\");\r\n  const saturday = selectedDay.endOf(\"week\");\r\n  let currentWeek = [sunday];\r\n\r\n  for (let i = 1; i < 7; i++) {\r\n    const prevDay = currentWeek[i - 1];\r\n    currentWeek.push(prevDay.add(1, \"day\"));\r\n  }\r\n\r\n  const days = [\"SUN\", \"MON\", \"TUES\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\r\n  const slots = [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22];\r\n\r\n  const { loading, data } = useQuery(GET_TUTOR_HOURS, {\r\n    variables: {\r\n      where: {\r\n        tutor_id: { _eq: currentUser.uid },\r\n        start_time: { _gte: sunday, _lte: saturday },\r\n      },\r\n    },\r\n  });\r\n\r\n  const [deleteHour] = useMutation(DELETE_HOUR, {\r\n    refetchQueries: [GET_TUTOR_HOURS],\r\n  });\r\n\r\n  const [createHour] = useMutation(CREATE_HOUR, {\r\n    refetchQueries: [GET_TUTOR_HOURS],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data?.hours) {\r\n      let hours = {};\r\n      data.hours.forEach((hour) => {\r\n        const localHour = dayjs.utc(hour.start_time).local().format();\r\n        hours[localHour] = {\r\n          id: hour.hours_id,\r\n          appointmentId: hour.appointment_id,\r\n        };\r\n      });\r\n      setWeekHours(hours);\r\n    }\r\n  }, [data?.hours]);\r\n\r\n  const handleSlotSelect = (availability, dateTime) => {\r\n    const isAvailable = availability && true;\r\n    const isBooked = availability?.appointmentId;\r\n\r\n    if (isAvailable && !isBooked) {\r\n      deleteHour({\r\n        variables: {\r\n          hours_id: availability.id,\r\n        },\r\n      });\r\n    } else if (!isAvailable) {\r\n      createHour({\r\n        variables: {\r\n          tutor_id: currentUser.uid,\r\n          start_time: dateTime,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container mt={3} spacing={3} justifyContent=\"center\">\r\n      <Grid item xs={12} display=\"flex\" justifyContent=\"center\">\r\n        <Box mr={2} display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\"Previous week\">\r\n            <IconButton\r\n              onClick={() => {\r\n                setSelectedDay(selectedDay.subtract(7, \"day\"));\r\n              }}\r\n            >\r\n              <ArrowBackIosNewOutlinedIcon size={\"small\"} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n        <LocalizationProvider dateAdapter={DateAdapter}>\r\n          <DatePicker\r\n            clearable\r\n            value={selectedDay}\r\n            onChange={(day) => {\r\n              setSelectedDay(day);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} helperText={null} />\r\n            )}\r\n          />\r\n        </LocalizationProvider>\r\n        <Box ml={2} display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\"Next week\">\r\n            <IconButton\r\n              onClick={() => {\r\n                setSelectedDay(selectedDay.add(7, \"day\"));\r\n              }}\r\n            >\r\n              <ArrowForwardIosOutlinedIcon size={\"small\"} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12} md={8}>\r\n        {loading ? (\r\n          <LoadingPage />\r\n        ) : (\r\n          <Grid container justifyContent={\"center\"} columns={7}>\r\n            {currentWeek.map((day, i) => {\r\n              const isToday = day.dayOfYear() === dayjs().dayOfYear();\r\n              return (\r\n                <Grid\r\n                  key={i}\r\n                  container\r\n                  item\r\n                  xs={1}\r\n                  direction=\"column\"\r\n                  justifyContent={\"center\"}\r\n                  alignItems={\"center\"}\r\n                  rowSpacing={1}\r\n                >\r\n                  <Grid item>\r\n                    <Typography color={isToday && \"primary\"} variant={\"h6\"}>\r\n                      {days[day.day()]}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography color={isToday && \"primary\"} variant={\"h6\"}>\r\n                      {day.date()}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <List>\r\n                      {slots.map((slot, j) => {\r\n                        const dateTime = day.add(slot, \"hour\");\r\n                        const availability = weekHours[dateTime.format()];\r\n                        return (\r\n                          <Wrapper\r\n                            key={j}\r\n                            condition={availability?.appointmentId}\r\n                            wrapper={(children) => (\r\n                              <Tooltip\r\n                                placement=\"right\"\r\n                                title=\"Booked for appointment\"\r\n                              >\r\n                                <span>{children}</span>\r\n                              </Tooltip>\r\n                            )}\r\n                          >\r\n                            <ListItem\r\n                              key={j}\r\n                              sx={{\r\n                                marginBottom: \"10px\",\r\n                                pl: { xs: 0.2, md: 2 },\r\n                                pr: { xs: 0.2, md: 2 },\r\n                              }}\r\n                              disableGutters\r\n                              disabled={availability?.appointmentId && true}\r\n                              selected={availability && true}\r\n                              button\r\n                              onClick={() =>\r\n                                handleSlotSelect(availability, dateTime)\r\n                              }\r\n                            >\r\n                              <ListItemText primary={dateTime.format(\"ha\")} />\r\n                            </ListItem>\r\n                          </Wrapper>\r\n                        );\r\n                      })}\r\n                    </List>\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst Wrapper = ({ children, condition, wrapper }) =>\r\n  condition ? wrapper(children) : children;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Autocomplete, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Stack, TextField } from \"@mui/material\";\r\nimport * as React from \"react\";\r\nimport { GET_COURSES } from \"../../../graphql/queries\";\r\nimport NewCourseDialog from \"../NewCourseDialog\";\r\n\r\nexport default function EditOfferingDialog({ offering, handleClose, onSave, loading }) {\r\n  const [newCourse, setNewCourse] = React.useState(false);\r\n\r\n  // Fetch all courses\r\n  const courseResult = useQuery(GET_COURSES);\r\n\r\n  if (courseResult.loading) return null;\r\n  if (courseResult.error) return `${courseResult.error}`;\r\n  const courses = courseResult.data.course.map((course) => course.course_id);\r\n\r\n  // Don't display if offering is null\r\n  if (offering === null) return null;\r\n\r\n  const isEditing = Boolean(offering.offering_id);\r\n\r\n  return <>\r\n    <Dialog open onClose={handleClose}>\r\n      <DialogTitle>\r\n        {isEditing ? 'Edit Offering' : 'New Offering'}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <form id=\"editOfferingForm\" onSubmit={onSave}>\r\n          <Stack spacing={3} mt={1}>\r\n            <Stack direction=\"row\" spacing={3} alignItems=\"center\">\r\n              <Autocomplete\r\n                disablePortal\r\n                fullWidth\r\n                disabled={isEditing}\r\n                options={courses}\r\n                defaultValue={offering.course?.course_id}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    required\r\n                    name=\"course\"\r\n                    label=\"Course\"\r\n                    {...params}\r\n                  />\r\n                )}\r\n              />\r\n              {isEditing ? null :\r\n                <IconButton onClick={() => setNewCourse(true)}>\r\n                  <Add />\r\n                </IconButton>\r\n              }\r\n            </Stack>\r\n            <TextField\r\n              name=\"gradeReceived\"\r\n              label=\"Grade Received (optional)\"\r\n              defaultValue={offering.grade_received || ''}\r\n            />\r\n            <TextField\r\n              name=\"professorName\"\r\n              label=\"Professor Name (optional)\"\r\n              defaultValue={offering.professor_name || ''}\r\n            />\r\n            <TextField\r\n              name=\"yearTaken\"\r\n              label=\"Year Taken (optional)\"\r\n              defaultValue={offering.year_taken || ''}\r\n            />\r\n          </Stack>\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button disabled={loading} onClick={handleClose}>Cancel</Button>\r\n        <LoadingButton loading={loading} type=\"submit\" form=\"editOfferingForm\">\r\n          {isEditing ? 'Save' : 'Create'}\r\n        </LoadingButton>\r\n      </DialogActions>\r\n    </Dialog>\r\n    <NewCourseDialog\r\n      open={newCourse}\r\n      handleClose={() => setNewCourse(false)}\r\n      onCompleted={() => {\r\n        setNewCourse(false);\r\n        courseResult.refetch();\r\n      }}\r\n    />\r\n  </>;\r\n}","import { LoadingButton } from \"@mui/lab\";\r\nimport { Autocomplete, Button, Dialog, DialogActions, DialogContent, DialogTitle, Stack, TextField } from \"@mui/material\";\r\nimport * as React from \"react\";\r\n\r\nexport default function EditProfileDialog({ tutor, open, handleClose, onSave, universities, loading }) {\r\n  const [university, setUniversity] = React.useState(\r\n    tutor.user.university\r\n      ? {\r\n        label: tutor.user.university.name,\r\n        id: tutor.user.university.university_id,\r\n      }\r\n      : null\r\n  );\r\n\r\n  return <Dialog open={open} onClose={handleClose}>\r\n    <DialogTitle>Edit Profile</DialogTitle>\r\n    <DialogContent>\r\n      <form id=\"editProfileForm\" onSubmit={(event) => onSave(event, university)}>\r\n        <Stack spacing={3} mt={1}>\r\n          <TextField\r\n            required\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            type=\"name\"\r\n            defaultValue={tutor.user.name}\r\n          />\r\n          <TextField\r\n            name=\"hourlyRate\"\r\n            label=\"Hourly Rate\"\r\n            defaultValue={tutor.hourly_rate ?? ''}\r\n          />\r\n          <TextField\r\n            name=\"bio\"\r\n            label=\"Bio\"\r\n            defaultValue={tutor.bio ?? ''}\r\n          />\r\n          <Autocomplete\r\n            disablePortal\r\n            options={universities}\r\n            value={university}\r\n            isOptionEqualToValue={(option, value) => option.id === value.id}\r\n            onChange={(_, value) => setUniversity(value)}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"University\" />\r\n            )}\r\n          />\r\n        </Stack>\r\n      </form>\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button disabled={loading} onClick={handleClose}>Cancel</Button>\r\n      <LoadingButton loading={loading} type=\"submit\" form=\"editProfileForm\">\r\n        Save\r\n      </LoadingButton>\r\n    </DialogActions>\r\n  </Dialog>;\r\n}\r\n","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport { Add, ModeEdit, RemoveCircleOutline } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Box, Button, Container, Grid, Paper, Tooltip, Typography } from \"@mui/material\";\r\nimport * as React from \"react\";\r\nimport { AuthContext } from \"../../../Auth\";\r\nimport { CREATE_OFFERING, DELETE_OFFERING, UPDATE_OFFERING, UPDATE_TUTOR } from \"../../../graphql/mutations\";\r\nimport { GET_TUTOR_PROFILE } from \"../../../graphql/queries\";\r\nimport LoadingPage from \"../../LoadingPage\";\r\nimport OfferingTile from \"../OfferingTile\";\r\nimport Title from \"../Title\";\r\nimport EditOfferingDialog from \"./EditOfferingDialog\";\r\nimport EditProfileDialog from \"./EditProfileDialog\";\r\n\r\nexport default function Profile() {\r\n  const { currentUser } = React.useContext(AuthContext);\r\n  const [updateTutor, updateTutorResult] = useMutation(UPDATE_TUTOR, {\r\n    variables: {\r\n      id: currentUser.uid,\r\n    },\r\n  });\r\n  const [createOffering, createOfferingResult] = useMutation(CREATE_OFFERING);\r\n  const [updateOffering, updateOfferingResult] = useMutation(UPDATE_OFFERING);\r\n  const [deleteOffering] = useMutation(DELETE_OFFERING);\r\n\r\n  const [editProfile, setEditProfile] = React.useState(false);\r\n  const [editingOffering, setEditingOffering] = React.useState(null);\r\n  const [deletingOfferingId, setDeletingOfferingId] = React.useState(null);\r\n\r\n  // Fetch tutor profile\r\n  const { loading, error, data, refetch } = useQuery(GET_TUTOR_PROFILE, {\r\n    variables: {\r\n      id: currentUser.uid,\r\n    },\r\n  });\r\n\r\n  if (loading) return <LoadingPage />;\r\n  if (error) return `${error}`;\r\n\r\n  // Extract relevant data\r\n  const tutor = {\r\n    ...data.tutor_by_pk,\r\n  };\r\n  const baseOfferings = tutor.offerings;\r\n  delete tutor.offerings;\r\n\r\n  const offerings = baseOfferings.map((offering) => {\r\n    return {\r\n      tutor: tutor,\r\n      ...offering,\r\n    };\r\n  });\r\n\r\n  const universities = data.university.map((uni) => {\r\n    return {\r\n      label: uni.name,\r\n      id: uni.university_id,\r\n    };\r\n  });\r\n\r\n  const handleEditProfile = (event, university) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    // Default values to null\r\n    updateTutor({\r\n      variables: {\r\n        name: data.get('name') || null,\r\n        university_id: university?.id ?? null,\r\n        hourly_rate: data.get('hourlyRate') || null,\r\n        bio: data.get('bio') || null,\r\n      },\r\n      onCompleted: () => {\r\n        // Hide dialog when finished\r\n        // Don't need to refetch, as the cache updates immediately\r\n        setEditProfile(false);\r\n      },\r\n    });\r\n  };\r\n\r\n  // Includes handling new offering\r\n  const handleEditOffering = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    // A course is required to update or create an offering\r\n    if (!data.get('course') && !editingOffering) {\r\n      // TODO: show error\r\n      return;\r\n    }\r\n\r\n    // Extract data, defaulting to null\r\n    const variables = {\r\n      // When the TextField is disabled, the info inside can't be retrieved\r\n      course_id: data.get('course') || editingOffering.course?.course_id || null,\r\n      grade_received: data.get('gradeReceived') || null,\r\n      professor_name: data.get('professorName') || null,\r\n      year_taken: data.get('yearTaken') || null,\r\n    };\r\n\r\n    const onCompleted = () => {\r\n      // Hide dialog and refetch courses when finished\r\n      setEditingOffering(null);\r\n      refetch();\r\n    };\r\n\r\n    if (editingOffering.offering_id) {\r\n      // Update existing offering\r\n      updateOffering({\r\n        variables: {\r\n          offering_id: editingOffering.offering_id,\r\n          ...variables,\r\n        },\r\n        onCompleted: onCompleted,\r\n      });\r\n    }\r\n    else {\r\n      // Create new offering\r\n      createOffering({\r\n        variables: {\r\n          tutor_id: currentUser.uid,\r\n          ...variables,\r\n        },\r\n        onCompleted: onCompleted,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteOffering = (offering) => {\r\n    if (offering.appointments.length !== 0) {\r\n      // Can't delete an offering with appointments\r\n      return;\r\n    }\r\n\r\n    setDeletingOfferingId(offering.offering_id);\r\n    deleteOffering({\r\n      variables: {\r\n        offering_id: offering.offering_id,\r\n      },\r\n      onCompleted: () => {\r\n        refetch();\r\n        setDeletingOfferingId(null);\r\n      },\r\n    });\r\n  };\r\n\r\n  return <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n          <Title>Your Profile</Title>\r\n          <Grid container spacing={2} justifyContent=\"center\">\r\n            <Grid item xs={12} md={6} justifyContent=\"center\">\r\n              <Typography variant=\"h6\">Name</Typography>\r\n              <Typography variant=\"body1\">{tutor.user.name}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"h6\">Hourly Rate</Typography>\r\n              <Typography variant=\"body1\">{`$${tutor.hourly_rate}/hr`}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"h6\">Bio</Typography>\r\n              <Typography variant=\"body1\">{tutor.bio}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"h6\">University</Typography>\r\n              <Typography variant=\"body1\">{tutor.user.university?.name ?? 'None'}</Typography>\r\n            </Grid>\r\n            <Grid item mt={1} xs={12}>\r\n              <Box display=\"flex\" gap={2} sx={{\r\n                flexDirection: { xs: \"column\", md: \"row\" }\r\n              }}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  startIcon={<ModeEdit />}\r\n                  onClick={() => setEditProfile(true)}\r\n                >\r\n                  Edit Profile\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  startIcon={<Add />}\r\n                  onClick={() => setEditingOffering({})}\r\n                >\r\n                  Create New Offering\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      {offerings.map((offering, i) =>\r\n        <Grid key={i} item xs={12} md={6}>\r\n          <OfferingTile\r\n            offering={offering}\r\n            children={\r\n              <Box mt={2} display=\"flex\" gap={2} sx={{\r\n                flexDirection: { xs: \"column\", md: \"row\" },\r\n              }}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  startIcon={<ModeEdit />}\r\n                  disabled={offering.offering_id === deletingOfferingId}\r\n                  onClick={() => setEditingOffering(offering)}\r\n                >\r\n                  Edit Offering\r\n                </Button>\r\n                <Wrapper\r\n                  condition={offering.appointments.length !== 0}\r\n                  wrapper={(children) => (\r\n                    <Tooltip title=\"Offerings with appointments cannot be deleted.\">\r\n                      <span>{children}</span>\r\n                    </Tooltip>\r\n                  )}>\r\n                  <LoadingButton\r\n                    variant=\"outlined\"\r\n                    startIcon={<RemoveCircleOutline />}\r\n                    loading={offering.offering_id === deletingOfferingId}\r\n                    color=\"error\"\r\n                    onClick={() => handleDeleteOffering(offering)}\r\n                    disabled={offering.appointments.length !== 0}\r\n                  >\r\n                    Delete Offering\r\n                  </LoadingButton>\r\n                </Wrapper>\r\n              </Box>\r\n            }\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n    <EditProfileDialog\r\n      tutor={tutor}\r\n      open={editProfile}\r\n      handleClose={() => setEditProfile(false)}\r\n      onSave={handleEditProfile}\r\n      universities={universities}\r\n      loading={updateTutorResult.loading}\r\n    />\r\n    <EditOfferingDialog\r\n      offering={editingOffering}\r\n      handleClose={() => setEditingOffering(null)}\r\n      onSave={handleEditOffering}\r\n      loading={createOfferingResult.loading || updateOfferingResult.loading}\r\n    />\r\n  </Container>;\r\n}\r\n\r\nconst Wrapper = ({ children, condition, wrapper }) =>\r\n  condition ? wrapper(children) : children;\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport { Grid, Stack } from \"@mui/material\";\r\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 100,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ReviewsCards({ requests, children }) {\r\n  const classes = useStyles();\r\n  const date = requests.created_at;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Grid mb={1} container justifyContent=\"space-between\" alignItems=\"center\" direction = \"row\">\r\n          <Typography variant=\"h6\">{requests.student.user.name}</Typography>\r\n        </Grid>\r\n        <Stack justifyContent=\"space-between\" direction=\"row\">\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            {requests.course_id}\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"right\">\r\n            {requests.professor_name}\r\n          </Typography>\r\n        </Stack>\r\n        <Grid container>\r\n          <Grid item mr={1}>\r\n            <AccessTimeIcon fontSize=\"1\" color=\"primary\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" variant=\"body2\" >\r\n              { new Date(date).toLocaleDateString() }\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Typography mt={1}>Comments:</Typography>\r\n        <Typography variant=\"body1\" color=\"textSecondary\">\r\n          {requests.comment}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Grid container justify=\"space-between\">\r\n          <Typography align=\"left\"></Typography>\r\n        </Grid>\r\n        {children}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import { LoadingButton } from \"@mui/lab\";\r\nimport { Autocomplete, Button, Dialog, DialogActions, DialogContent, DialogTitle, Stack, TextField } from \"@mui/material\";\r\nimport * as React from \"react\";\r\n\r\nexport default function EditOfferingDialog({ offering, handleClose, onSave, loading}) {\r\n  \r\n  // Don't display if offering is null\r\n  if (offering === null) return null;\r\n\r\n  return <>\r\n    <Dialog open onClose={handleClose}>\r\n      <DialogTitle>\r\n        {'New Offering'}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <form id=\"editOfferingForm\" onSubmit={onSave}>\r\n          <Stack spacing={3} mt={1}>\r\n            <Stack direction=\"row\" spacing={3} alignItems=\"center\">\r\n              <Autocomplete\r\n                disablePortal\r\n                fullWidth\r\n                disabled={true}\r\n                options={''}\r\n                defaultValue={offering.request?.course_id}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    name=\"course\"\r\n                    label=\"Course\"\r\n                    {...params}\r\n                  />\r\n                )}\r\n              />\r\n            </Stack>\r\n            <TextField\r\n              name=\"gradeReceived\"\r\n              label=\"Grade Received (optional)\"\r\n              defaultValue={offering.grade_received || ''}\r\n            />\r\n            <TextField\r\n              name=\"professorName\"\r\n              label=\"Professor Name (optional)\"\r\n              defaultValue={offering.professor_name || ''}\r\n            />\r\n            <TextField\r\n              name=\"yearTaken\"\r\n              label=\"Year Taken (optional)\"\r\n              defaultValue={offering.year_taken || ''}\r\n            />\r\n          </Stack>\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button disabled={loading} onClick={handleClose}>Cancel</Button>\r\n        <LoadingButton loading={loading} type=\"submit\" form=\"editOfferingForm\">\r\n          {'Save'}\r\n        </LoadingButton>\r\n      </DialogActions>\r\n    </Dialog>\r\n  </>;\r\n}","import * as React from \"react\";\r\nimport { Grid, Button, Stack } from \"@mui/material\";\r\nimport RequestsCards from \"./RequestsCards\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { READ_REQUEST } from \"../../../graphql/queries\";\r\nimport { DELETE_REQUEST, CREATE_OFFERING } from \"../../../graphql/mutations\";\r\nimport { AuthContext } from \"../../../Auth\";\r\nimport LoadingPage from \"../../LoadingPage\";\r\nimport EditOfferingDialog from \"./RequestOfferingDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  gridContainer: {\r\n    paddingLeft: \"40px\",\r\n    paddingRight: \"40px\",\r\n    paddingTop: \"35px\",\r\n    paddingBottom: \"35px\",\r\n  },\r\n});\r\n\r\nexport default function Requests() {\r\n  const onCompleted = () => {\r\n    // Hide dialog and refetch courses when finished\r\n    setEditingOffering(null);\r\n  };\r\n  const classes = useStyles();\r\n  const { currentUser } = React.useContext(AuthContext);\r\n  const { loading, error, data , refetch} = useQuery(READ_REQUEST, {});\r\n  const [deleteRequest] = useMutation(DELETE_REQUEST);\r\n  const [createOffering, createOfferingResult] = useMutation(CREATE_OFFERING, {\r\n    onCompleted: () => onCompleted(),\r\n    refetchQueries: ['GetOfferings'],\r\n  });\r\n  \r\n  const [editingOffering, setEditingOffering] = React.useState(null);\r\n\r\n  if (loading) return <LoadingPage />;\r\n  if (error) return `${error}`;\r\n\r\n  const requests = data.request.map((request) =>{\r\n    return {...request};\r\n  });\r\n\r\n  // Includes handling new offering\r\n  const handleEditOffering = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    // A course is required to create an offering\r\n    if (!data.get('course') && !editingOffering) {\r\n      // TODO: show error\r\n      return;\r\n    }\r\n\r\n    // Extract data, defaulting to null\r\n    const variables = {\r\n      // When the TextField is disabled, the info inside can't be retrieved\r\n      course_id: editingOffering.request?.course_id || null,\r\n      grade_received: data.get('gradeReceived') || null,\r\n      professor_name: data.get('professorName') || null,\r\n      year_taken: data.get('yearTaken') || null,\r\n    };\r\n    \r\n    const onCompleted = () => {\r\n      //refetch courses when finished\r\n      refetch();\r\n    };\r\n\r\n    // Create new offering\r\n    createOffering({\r\n      variables: {\r\n        tutor_id: currentUser.uid,\r\n        ...variables,\r\n      },\r\n    });\r\n    \r\n    // delete request after creating new offering\r\n    deleteRequest({\r\n      variables: {\r\n        request_id: editingOffering.request.request_id,\r\n      },\r\n      onCompleted: onCompleted,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        className={classes.gridContainer}\r\n        justify=\"center\"\r\n      >\r\n        {requests.map((request, i) => (\r\n          <Grid key={i} item xs={12} sm={6} md={4}>\r\n            <RequestsCards requests={request} \r\n            children={<Stack>\r\n              <Button variant=\"contained\" size=\"medium\" color=\"primary\" onClick={() => setEditingOffering({request})}\r\n              >Accept</Button>\r\n            </Stack>}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <EditOfferingDialog\r\n      offering={editingOffering}\r\n      handleClose={() => setEditingOffering(null)}\r\n      onSave={handleEditOffering}\r\n      loading={createOfferingResult.loading}\r\n    />\r\n    </div>\r\n  );\r\n}\r\n","import { Rating, Grid } from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport * as React from \"react\";\r\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 100,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function ReviewsCards({ reviews }) {\r\n  const classes = useStyles();\r\n  const date = reviews.created_at;\r\n  \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Grid mb={1} container justifyContent=\"space-between\" alignItems=\"center\" direction = \"row\">\r\n        <Typography variant=\"h6\">{reviews.student.user.name}</Typography>\r\n        </Grid>\r\n          <Rating value={reviews.stars} readOnly={true} size=\"small\"  />\r\n          <Grid container>\r\n            <Grid item mr={1}>\r\n              <AccessTimeIcon fontSize=\"1\" color=\"primary\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography color=\"textSecondary\" variant=\"body2\">\r\n                { new Date(date).toLocaleDateString() }\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        <Grid mt={1} container justifyContent=\"space-between\" alignItems=\"center\" direction = \"row\">\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            {reviews.comment}\r\n          </Typography>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport ReviewsCards from \"./ReviewsCards\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { READ_REVEIWS } from \"../../../graphql/queries\";\r\nimport { AuthContext } from \"../../../Auth\";\r\nimport LoadingPage from \"../../LoadingPage\";\r\nconst useStyles = makeStyles({\r\n  gridContainer: {\r\n    paddingLeft: \"60px\",\r\n    paddingRight: \"60px\",\r\n    paddingTop: \"35px\",\r\n    paddingBottom: \"35px\",\r\n  },\r\n});\r\nexport default function Reviews() {\r\n  const classes = useStyles();\r\n  const { currentUser } = React.useContext(AuthContext);\r\n\r\n  const { loading, error, data } = useQuery(READ_REVEIWS, {\r\n    variables: { id: currentUser.uid },\r\n  });\r\n\r\n  if (loading) return <LoadingPage />;\r\n  if (error) return `${error}`;\r\n\r\n  const tutor = data.tutor_by_pk;\r\n  const reviewIds = tutor.reviews.map((review) => {\r\n    return { ...review };\r\n  });\r\n\r\n  return (\r\n    // <Grid container mt={6} px={6} pb={6}>\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      className={classes.gridContainer}\r\n      justify=\"center\"\r\n    >\r\n      {reviewIds.length === 0 ? (\r\n        <Typography>You have not received any reviews yet</Typography>\r\n      ) : (\r\n        reviewIds.map((userReviews, i) => (\r\n          <Grid key={i} item xs={12} sm={6} md={4}>\r\n            <ReviewsCards reviews={userReviews} />\r\n          </Grid>\r\n        ))\r\n      )}\r\n    </Grid>\r\n    // </Grid>\r\n  );\r\n}\r\n","import {\r\n  AccountCircle,\r\n  Event,\r\n  HourglassFull,\r\n  School,\r\n  Star,\r\n} from \"@mui/icons-material\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport MuiAppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport MuiDrawer from \"@mui/material/Drawer\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport * as React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../../../firebase\";\r\nimport Appointments from \"../appointments/Appointments\";\r\nimport Availability from \"./Availability\";\r\nimport Profile from \"./Profile\";\r\nimport Requests from \"./Requests\";\r\nimport Reviews from \"./Reviews\";\r\n\r\nexport default function TutorDashboard({ page }) {\r\n  const drawerWidth = 240;\r\n  const navigate = useNavigate();\r\n  const AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== \"open\",\r\n  })(({ theme, open }) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    }),\r\n  }));\r\n\r\n  const Drawer = styled(MuiDrawer, {\r\n    shouldForwardProp: (prop) => prop !== \"open\",\r\n  })(({ theme, open }) => ({\r\n    \"& .MuiDrawer-paper\": {\r\n      position: \"relative\",\r\n      whiteSpace: \"nowrap\",\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      boxSizing: \"border-box\",\r\n      ...(!open && {\r\n        overflowX: \"hidden\",\r\n        transition: theme.transitions.create(\"width\", {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          width: theme.spacing(9),\r\n        },\r\n      }),\r\n    },\r\n  }));\r\n\r\n  const theme = useTheme();\r\n  const fullDrawer = useMediaQuery(theme.breakpoints.up('sm'));\r\n\r\n  const [open, setOpen] = React.useState(true);\r\n  const [anchor, setAnchor] = React.useState(null);\r\n\r\n  const toggleDrawer = (event) => {\r\n    if (fullDrawer) {\r\n      setOpen(!open);\r\n    }\r\n    else {\r\n      setAnchor(anchor === null ? event.currentTarget : null);\r\n    }\r\n  };\r\n\r\n  const drawerItems = [\r\n    ['Appointments', <Event />],\r\n    ['Profile', <AccountCircle />],\r\n    ['Availability', <HourglassFull />],\r\n    ['Reviews', <Star />],\r\n    ['Requests', <School />],\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" open={fullDrawer && open}>\r\n        <Toolbar\r\n          sx={{\r\n            pr: \"24px\", // keep right padding when drawer closed\r\n          }}\r\n        >\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={toggleDrawer}\r\n            sx={{\r\n              marginRight: \"36px\",\r\n              ...(fullDrawer && open && { display: \"none\" }),\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            sx={{ flexGrow: 1 }}\r\n          >\r\n            {page}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        open={open}\r\n        sx={{\r\n          ...(!fullDrawer && { display: \"none\" }),\r\n        }}\r\n      >\r\n        <Toolbar\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n            px: [1],\r\n          }}\r\n        >\r\n          <IconButton onClick={toggleDrawer}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <Divider />\r\n        <List>\r\n          {drawerItems.map(([name, icon], i) => {\r\n            return <ListItem\r\n              key={i}\r\n              selected={page === name}\r\n              button\r\n              onClick={() => {\r\n                navigate(`/${name.toLowerCase()}`, { replace: true });\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                {icon}\r\n              </ListItemIcon>\r\n              <ListItemText primary={name} />\r\n            </ListItem>;\r\n          })}\r\n          <Divider />\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              auth.signOut();\r\n              localStorage.removeItem(\"li\");\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <LogoutIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Log Out\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <Menu\r\n        anchorEl={anchor}\r\n        open={!fullDrawer && anchor !== null}\r\n        onClose={() => setAnchor(null)}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n        {drawerItems.map(([name, icon], i) => {\r\n          return <MenuItem\r\n            key={i}\r\n            selected={page === name}\r\n            onClick={() => {\r\n              navigate(`/${name.toLowerCase()}`, { replace: true });\r\n              setAnchor(null);\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              {icon}\r\n            </ListItemIcon>\r\n            {name}\r\n          </MenuItem>;\r\n        })}\r\n        <Divider />\r\n        <MenuItem\r\n          onClick={() => {\r\n            auth.signOut();\r\n            localStorage.removeItem(\"li\");\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <LogoutIcon />\r\n          </ListItemIcon>\r\n          Log Out\r\n        </MenuItem>\r\n      </Menu>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          backgroundColor: (theme) =>\r\n            theme.palette.mode === \"light\"\r\n              ? theme.palette.grey[100]\r\n              : theme.palette.grey[900],\r\n          flexGrow: 1,\r\n          height: \"100vh\",\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        {page === \"Appointments\" ? (\r\n          <Appointments />\r\n        ) : page === \"Profile\" ? (\r\n          <Profile />\r\n        ) : page === \"Availability\" ? (\r\n          <Availability />\r\n        ) : page === \"Reviews\" ? (\r\n          <Reviews />\r\n        ) : (\r\n          <Requests />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { AuthContext } from \"../../Auth\";\r\nimport StudentDashboard from \"./student/StudentDashboard\";\r\nimport TutorDashboard from \"./tutor/TutorDashboard\";\r\n\r\nexport default function Dashboard({ page }) {\r\n  const { userType } = React.useContext(AuthContext);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{page}</title>\r\n      </Helmet>\r\n      {userType.current === \"student\" ? (\r\n        <StudentDashboard page={page} />\r\n      ) : (\r\n        <TutorDashboard page={page} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Typography,\r\n  Stack,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { INSERT_TUTOR, INSERT_STUDENT } from \"../graphql/mutations\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { AuthContext } from \"../Auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Onboarding() {\r\n  const navigate = useNavigate();\r\n  const { currentUser, userType } = React.useContext(AuthContext);\r\n  const [insertTutor] = useMutation(INSERT_TUTOR, {\r\n    variables: {\r\n      tutor_id: currentUser.uid,\r\n    },\r\n    onCompleted: () => {\r\n      userType.current = \"tutor\";\r\n      navigate(`/profile`);\r\n    },\r\n  });\r\n  const [insertStudent] = useMutation(INSERT_STUDENT, {\r\n    variables: {\r\n      student_id: currentUser.uid,\r\n    },\r\n    onCompleted: () => {\r\n      userType.current = \"student\";\r\n      navigate(`/offerings`);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      minHeight=\"80vh\"\r\n    >\r\n      <Stack spacing={4}>\r\n        <Typography>What do you plan on doing on this platform?</Typography>\r\n        <Grid container justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Card onClick={insertTutor}>\r\n              <CardActionArea>\r\n                <CardContent>\r\n                  <Typography>Teaching</Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card onClick={insertStudent}>\r\n              <CardActionArea>\r\n                <CardContent>\r\n                  <Typography>Learning</Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n","import LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport * as React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../firebase.js\";\r\n\r\nexport default function SignIn() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    const email = data.get(\"email\");\r\n    const password = data.get(\"password\");\r\n\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(() => {\r\n        const from = location.state?.from?.pathname || \"/\";\r\n        navigate(from, { replace: true });\r\n      })\r\n      .catch((error) => {\r\n        const errorMessage = error.message;\r\n        console.log(errorMessage);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <Helmet>\r\n        <title>Sign In</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <Box\r\n          component=\"form\"\r\n          onSubmit={handleSubmit}\r\n          noValidate\r\n          sx={{ mt: 1 }}\r\n        >\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link to=\"/signup\">\r\n                <Typography variant=\"body2\">\r\n                  Don't have an account? Sign Up\r\n                </Typography>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport * as React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../firebase.js\";\r\n\r\nexport default function SignUp() {\r\n  const navigate = useNavigate();\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    const email = data.get(\"email\");\r\n    const password = data.get(\"password\");\r\n\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then(() => {\r\n        navigate(\"/onboarding\");\r\n      })\r\n      .catch((error) => {\r\n        const errorMessage = error.message;\r\n        console.log(\"error \", errorMessage);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <Helmet>\r\n        <title>Sign Up</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          onSubmit={handleSubmit}\r\n          sx={{ mt: 3 }}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"new-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/signin\">\r\n                <Typography variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Typography>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { teal } from '@mui/material/colors';\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { AuthProvider } from \"./Auth\";\r\nimport RedirectRoute from \"./RedirectRoute\";\r\nimport RequireAuth from \"./RequireAuth\";\r\nimport RequireUserType from \"./RequireUserType\";\r\nimport Dashboard from \"./views/dashboard/Dashboard\";\r\nimport Onboarding from \"./views/Onboarding\";\r\nimport SignIn from \"./views/SignIn\";\r\nimport SignUp from \"./views/SignUp\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: teal[600],\r\n    },\r\n  },\r\n});\r\n\r\nexport default function App() {\r\n  return <ThemeProvider theme={theme}>\r\n    <AuthProvider>\r\n      <HashRouter>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\r\n        />\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <RequireAuth>\r\n                <RequireUserType>\r\n                  <Dashboard page={\"Appointments\"} />\r\n                </RequireUserType>\r\n              </RequireAuth>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/profile\"\r\n            element={\r\n              <RequireAuth>\r\n                <RequireUserType>\r\n                  <Dashboard page={\"Profile\"} />\r\n                </RequireUserType>\r\n              </RequireAuth>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/appointments\"\r\n            element={\r\n              <RequireAuth>\r\n                <RequireUserType>\r\n                  <Dashboard page={\"Appointments\"} />\r\n                </RequireUserType>\r\n              </RequireAuth>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/requests\"\r\n            element={\r\n              <RequireAuth>\r\n                <RequireUserType>\r\n                  <Dashboard page={\"Requests\"} />\r\n                </RequireUserType>\r\n              </RequireAuth>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/reviews\"\r\n            element={\r\n              <RequireAuth>\r\n                <RequireUserType>\r\n                  <Dashboard page={\"Reviews\"} />\r\n                </RequireUserType>\r\n              </RequireAuth>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/availability\"\r\n            element={\r\n              <RequireAuth>\r\n                <RequireUserType>\r\n                  <Dashboard page={\"Availability\"} />\r\n                </RequireUserType>\r\n              </RequireAuth>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/offerings\"\r\n            element={\r\n              <RequireAuth>\r\n                <RequireUserType>\r\n                  <Dashboard page={\"Offerings\"} />\r\n                </RequireUserType>\r\n              </RequireAuth>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"signup\"\r\n            element={\r\n              <RedirectRoute>\r\n                <SignUp />\r\n              </RedirectRoute>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"signin\"\r\n            element={\r\n              <RedirectRoute>\r\n                <SignIn />\r\n              </RedirectRoute>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/onboarding\"\r\n            element={\r\n              <RequireAuth>\r\n                <Onboarding />\r\n              </RequireAuth>\r\n            }\r\n          />\r\n          {/* Redirects */}\r\n          <Route path=\"*\" element={<div>404</div>} />\r\n        </Routes>\r\n      </HashRouter>\r\n    </AuthProvider>\r\n  </ThemeProvider>;\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}