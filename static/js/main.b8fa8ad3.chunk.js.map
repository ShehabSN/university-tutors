{"version":3,"sources":["firebase.js","Auth.js","views/LoadingPage.js","RedirectRoute.js","RequireAuth.js","RequireUserType.js","views/dashboard/appointments/AppointmentCard.js","graphql/mutations.js","views/dashboard/appointments/ReviewDialog.js","views/dashboard/appointments/Appointments.js","graphql/queries.js","views/dashboard/Title.js","views/dashboard/OfferingTile.js","views/dashboard/NewCourseDialog.js","views/dashboard/student/RequestCourseDialog.js","views/dashboard/student/Offerings.js","views/dashboard/student/Profile.js","views/dashboard/student/StudentDashboard.js","views/dashboard/tutor/Availability.js","views/dashboard/tutor/EditOfferingDialog.js","views/dashboard/tutor/EditProfileDialog.js","views/dashboard/tutor/Profile.js","views/dashboard/tutor/RequestsCards.js","views/dashboard/tutor/RequestOfferingDialog.js","views/dashboard/tutor/Requests.js","views/dashboard/tutor/ReviewsCards.js","views/dashboard/tutor/Reviews.js","views/dashboard/tutor/TutorDashboard.js","views/dashboard/Dashboard.js","views/Onboarding.js","views/SignIn.js","views/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","userType","useRef","getToken","useCallback","user","a","getIdTokenResult","result","claims","token","axios","get","uid","newTokenRes","status","getIdToken","newToken","observerCallback","firebaseUser","localStorage","setItem","authorization","url","method","headers","Authorization","data","query","variables","user_id","queryResult","errors","console","log","user_by_pk","tutor","tutor_id","type","student","student_id","current","useEffect","onAuthStateChanged","httpLink","createHttpLink","uri","authLink","setContext","_","typePolicies","name","keyFields","client","ApolloClient","connectToDevTools","link","concat","cache","InMemoryCache","Provider","value","ApolloProvider","LoadingPage","Box","display","justifyContent","alignItems","width","height","CircularProgress","RedirectRoute","useContext","location","useLocation","getItem","to","state","from","RequireAuth","pathname","RequireUserType","AppointmentCard","appointment","Card","sx","minHeight","CardContent","Typography","mb","variant","studentName","course","Grid","container","item","mr","AccessTimeOutlined","fontSize","color","time","LocationOnOutlined","CardActions","disableSpacing","hasNote","Button","size","INSERT_TUTOR","gql","INSERT_STUDENT","UPDATE_STUDENT","UPDATE_TUTOR","CREATE_OFFERING","UPDATE_OFFERING","DELETE_OFFERING","CREATE_COURSE","CREATE_REVIEW","CREATE_REQUEST","DELETE_REQUEST","ReviewDialog","open","close","useMutation","createReview","loading","comment","setComment","stars","setStars","setTutor","onClose","Dialog","DialogTitle","DialogContent","id","onSubmit","event","preventDefault","onCompleted","Stack","spacing","mt","TextField","label","onChange","target","Rating","newValue","multiline","rows","maxRows","DialogActions","disabled","onClick","LoadingButton","form","refetch","Appointments","reviewTutor","setReviewTutor","columns","xs","rowSpacing","date","appointments","map","day","i","columnSpacing","j","GET_UNIVERSITIES","GET_OFFERINGS","GET_STUDENT_PROFILE","GET_TUTOR_PROFILE","GET_COURSES","READ_REVEIWS","READ_REQUEST","Title","props","component","gutterBottom","OfferingTile","offering","Paper","p","flexDirection","course_id","direction","divider","Divider","orientation","flexItem","md","AccountCircle","Paid","hourly_rate","bio","grade_received","minWidth","School","noWrap","year_taken","professor_name","NewCourseDialog","handleClose","useQuery","error","createCourse","createResult","universities","university","names","uni","FormData","currentTarget","uniName","find","u","department","university_id","required","Autocomplete","disablePortal","options","renderInput","params","RequestCourseDialog","newCourse","setNewCourse","setCourse","professor","setProfessor","createRequest","courseResult","courses","fullWidth","IconButton","Add","Offerings","startTime","setStartTime","endTime","setEndTime","requestingCourse","setRequestingCourse","Container","maxWidth","FilterAlt","startIcon","ContactSupport","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","clearable","helperText","onSelect","JSON","stringify","OfferingResults","pResult","universityId","student_by_pk","oResult","skip","course_exp","_eq","tutor_exp","hours","start_time","_gte","toISOString","_lte","undefined","offerings","length","Bookmark","Profile","updateStudent","updateResult","onSave","major","year","ProfileForm","setUniversity","noValidate","autoComplete","defaultValue","isOptionEqualToValue","option","StudentDashboard","page","navigate","useNavigate","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","Drawer","MuiDrawer","position","whiteSpace","boxSizing","overflowX","breakpoints","up","useTheme","fullDrawer","useMediaQuery","setOpen","anchor","setAnchor","toggleDrawer","drawerItems","Event","CssBaseline","Toolbar","pr","edge","aria-label","marginRight","flexGrow","px","List","icon","ListItem","selected","button","toLowerCase","replace","ListItemIcon","ListItemText","primary","signOut","removeItem","anchorEl","MenuListProps","MenuItem","backgroundColor","palette","mode","grey","overflow","Availability","Date","setValue","weekdaySlots","availabile","weekendSlots","days","number","slots","DatePicker","views","minDate","maxDate","slot","marginBottom","EditOfferingDialog","isEditing","Boolean","offering_id","EditProfileDialog","updateTutor","updateTutorResult","createOffering","createOfferingResult","updateOffering","updateOfferingResult","deleteOffering","editProfile","setEditProfile","editingOffering","setEditingOffering","deletingOfferingId","setDeletingOfferingId","tutor_by_pk","baseOfferings","gap","ModeEdit","RemoveCircleOutline","handleDeleteOffering","useStyles","makeStyles","root","bullet","margin","transform","title","pos","ReviewsCards","requests","classes","created_at","className","align","toLocaleDateString","justify","request","gridContainer","paddingLeft","paddingRight","paddingTop","Requests","deleteRequest","sm","request_id","reviews","readOnly","Reviews","reviewIds","review","userReviews","TutorDashboard","HourglassFull","Star","Dashboard","Onboarding","insertTutor","insertStudent","CardActionArea","SignIn","marginTop","Avatar","m","bgcolor","email","password","signInWithEmailAndPassword","then","catch","errorMessage","message","autoFocus","SignUp","createUserWithEmailAndPassword","createTheme","main","teal","App","ThemeProvider","rel","href","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8fa8ad3.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\n","import {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { onAuthStateChanged } from \"@firebase/auth\";\nimport axios from \"axios\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { auth } from \"./firebase\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState();\n  const userType = useRef();\n\n  const getToken = useCallback(async (user) => {\n    if (user) {\n      let result = await user.getIdTokenResult();\n      if (result.claims[\"https://hasura.io/jwt/claims\"]) {\n        return result.token;\n      } else {\n        let newTokenRes = await axios.get(\n          `${process.env.REACT_APP_REFRESH_FUNCTION_URL}?uid=${auth.currentUser.uid}`\n        );\n        if (newTokenRes?.status === 200) {\n          let newToken = await auth.currentUser.getIdToken(true);\n          return newToken;\n        } else {\n          return null;\n        }\n      }\n    }\n  }, []);\n\n  const observerCallback = useCallback(\n    async (firebaseUser) => {\n      if (firebaseUser?.uid) {\n        localStorage.setItem(\"li\", \"true\");\n        setPending(true);\n\n        let token = await getToken(firebaseUser);\n        let authorization = `Bearer ${token}`;\n        const queryResult = await axios({\n          url: process.env.REACT_APP_HASURA_ENDPOINT,\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: authorization,\n          },\n          data: {\n            query: `\n              query GetUserType($user_id: String!) {\n                user_by_pk(user_id: $user_id) {\n                  tutor {\n                    tutor_id\n                  }\n                  student {\n                    student_id\n                  }\n                }\n              }\n            `,\n            variables: {\n              user_id: firebaseUser.uid,\n            },\n          },\n        });\n        if (queryResult.data.errors) {\n          console.log(\"handle error, \", queryResult.data.errors);\n        } else {\n          let type;\n          if (queryResult.data.data.user_by_pk?.tutor?.tutor_id) {\n            type = \"tutor\";\n          } else if (queryResult.data.data.user_by_pk?.student?.student_id) {\n            type = \"student\";\n          }\n          userType.current = type;\n        }\n\n        setPending(false);\n        setCurrentUser(firebaseUser);\n      } else {\n        setCurrentUser(null);\n        userType.current = null;\n      }\n    },\n    [getToken]\n  );\n\n  useEffect(() => {\n    onAuthStateChanged(auth, observerCallback);\n  }, [observerCallback]);\n\n  const httpLink = createHttpLink({\n    uri: process.env.REACT_APP_HASURA_ENDPOINT,\n  });\n\n  const authLink = setContext(async (_, { headers }) => {\n    let token = await getToken(currentUser);\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    };\n  });\n\n  // The key for each type A is \"A_id\"\n  const typePolicies = {};\n  const types = ['appointment', 'course', 'hours', 'offering', 'request', 'review', 'student', 'tutor', 'university', 'user'];\n  for (const name of types) {\n    typePolicies[name] = {\n      keyFields: [`${name}_id`],\n    };\n  }\n\n  const createApolloClient = () => {\n    return new ApolloClient({\n      connectToDevTools: true,\n      link: authLink.concat(httpLink),\n      cache: new InMemoryCache({\n        typePolicies: typePolicies,\n      }),\n    });\n  };\n\n  const client = createApolloClient();\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        userType,\n        pending,\n      }}\n    >\n      <ApolloProvider client={client}>{children}</ApolloProvider>\n    </AuthContext.Provider>\n  );\n};\n","import { Box, CircularProgress } from \"@mui/material\";\nimport * as React from \"react\";\n\nexport default function LoadingPage() {\n  return <Box\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    width=\"100%\"\n    height=\"100vh\"\n  >\n    <CircularProgress />\n  </Box>;\n}","import React, { useContext } from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\nimport LoadingPage from \"./views/LoadingPage\";\n\nexport default function RedirectRoute({ children }) {\n  const { currentUser } = useContext(AuthContext);\n  const location = useLocation();\n\n  if (localStorage.getItem(\"li\") && !currentUser) {\n    return <LoadingPage />;\n  } else if (currentUser && currentUser.uid) {\n    return <Navigate to={location.state?.from ?? \"/\"} />;\n  } else {\n    return children;\n  }\n}\n","import React, { useContext } from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\nimport LoadingPage from \"./views/LoadingPage\";\n\nexport default function RequireAuth({ children }) {\n  let { currentUser, userType } = useContext(AuthContext);\n  let location = useLocation();\n\n  if (localStorage.getItem(\"li\") && !currentUser) {\n    return <LoadingPage />;\n  } else if (!currentUser) {\n    return <Navigate to=\"/signin\" state={{ from: location }} />;\n  } else if (userType.current && location.pathname === \"/onboarding\") {\n    return <Navigate to=\"/\" />;\n  } else {\n    return children;\n  }\n}\n","import React, { useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\nimport LoadingPage from \"./views/LoadingPage\";\n\nexport default function RequireUserType({ children }) {\n  let { userType, pending } = useContext(AuthContext);\n\n  if (pending) {\n    return <LoadingPage />;\n  } else if (!userType.current) {\n    return <Navigate to=\"/onboarding\" />;\n  } else {\n    return children;\n  }\n}\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport { CardContent } from \"@mui/material\";\nimport { LocationOnOutlined, AccessTimeOutlined } from \"@mui/icons-material\";\nimport Grid from \"@mui/material/Grid\";\n\nexport default function AppointmentCard({ appointment }) {\n  return (\n    <div>\n      <Card\n        sx={{\n          minHeight: 200,\n        }}\n      >\n        <CardContent>\n          <Typography mb={1} variant=\"h6\">\n            {appointment.studentName}\n          </Typography>\n          <Typography mb={1} variant=\"body1\">\n            {appointment.course}\n          </Typography>\n          <Grid container>\n            <Grid item mr={1}>\n              <AccessTimeOutlined fontSize={\"10\"} />\n            </Grid>\n            <Grid item>\n              <Typography color=\"textSecondary\" variant=\"body1\">\n                {appointment.time}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item mr={1}>\n              <LocationOnOutlined fontSize={\"10\"} color=\"textSecondary\" />\n            </Grid>\n            <Grid item>\n              <Typography color=\"textSecondary\" variant=\"body1\">\n                {appointment.location}\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions disableSpacing={true}>\n          {appointment.hasNote && <Button size=\"small\">See Notes</Button>}\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const INSERT_TUTOR = gql`\n  mutation InsertTutor($tutor_id: String!) {\n    insert_tutor_one(object: { tutor_id: $tutor_id }) {\n      tutor_id\n    }\n  }\n`;\n\nexport const INSERT_STUDENT = gql`\n  mutation InsertStudent($student_id: String!) {\n    insert_student_one(object: { student_id: $student_id }) {\n      student_id\n    }\n  }\n`;\n\nexport const UPDATE_STUDENT = gql`\n  mutation UpdateStudent(\n    $id: String!, $name: String!, $university_id: Int, $major: String, $year: Int\n  ) {\n    update_student_by_pk(\n      pk_columns: {student_id: $id},\n      _set: {major: $major, year: $year},\n    ) {\n      student_id\n      major\n      year\n    }\n    update_user_by_pk(\n      pk_columns: {user_id: $id},\n      _set: {name: $name, university_id: $university_id}\n    ) {\n      user_id\n      name\n      university_id\n      university {\n        university_id\n        name\n      }\n    }\n  }\n`;\n\nexport const UPDATE_TUTOR = gql`\n  mutation UpdateTutor(\n    $id: String!, $name: String!, $university_id: Int!, $hourly_rate: numeric, $bio: String\n  ) {\n    update_tutor_by_pk(\n      pk_columns: {tutor_id: $id},\n      _set: {hourly_rate: $hourly_rate, bio: $bio}\n    ) {\n      tutor_id\n      hourly_rate\n      bio\n    }\n    update_user_by_pk(\n      pk_columns: {user_id: $id},\n      _set: {name: $name, university_id: $university_id}\n    ) {\n      user_id\n      name\n      university_id\n      university {\n        university_id\n        name\n      }\n    }\n  }\n`;\n\nexport const CREATE_OFFERING = gql`\n  mutation CreateOffering(\n    $tutor_id: String!, $course_id: String!, $grade_received: String, $professor_name: String, $year_taken: String\n  ) {\n    insert_offering_one(object: {\n      tutor_id: $tutor_id, course_id: $course_id, grade_received: $grade_received, professor_name: $professor_name, year_taken: $year_taken\n    }) {\n      offering_id\n    }\n  }\n`;\n\nexport const UPDATE_OFFERING = gql`\n  mutation UpdateOffering(\n    $offering_id: Int!, $course_id: String!, $grade_received: String, $professor_name: String, $year_taken: String\n  ) {\n    update_offering_by_pk(\n      pk_columns: {offering_id: $offering_id},\n      _set: {course_id: $course_id, grade_received: $grade_received, professor_name: $professor_name, year_taken: $year_taken}\n    ) {\n      offering_id\n      grade_received\n      professor_name\n      year_taken\n    }\n  }\n`;\n\nexport const DELETE_OFFERING = gql`\n  mutation DeleteOffering($offering_id: Int!) {\n    delete_offering_by_pk(offering_id: $offering_id) {\n      offering_id\n    }\n  }\n`;\n\nexport const CREATE_COURSE = gql`\n  mutation CreateCourse(\n    $course_id: String!, $name: String!, $department: String!, $university_id: Int!\n  ) {\n    insert_course_one(object: {\n      course_id: $course_id, name: $name, department: $department, university_id: $university_id\n    }) {\n      course_id\n    }\n  }\n`;\n\nexport const CREATE_REVIEW = gql`\n  mutation CreateReview($stars: numeric!, $comment: String!, $student_id: String!, $tutor_id: String!) {\n    insert_review_one(object: {comment: $comment, stars: $stars, student_id: $student_id, tutor_id: $tutor_id}) {\n      stars\n      review_id\n      created_at\n      comment\n      student_id\n      tutor_id\n    }\n  }\n\n`;\n\nexport const UPDATE_REVIEW = gql`\n  mutation UpdateReview(\n    $review_id: Int!, $comment: String!, $stars: numeric!\n  ) {\n      update_review_by_pk(\n        pk_columns: {review_id: $review_id},\n        _set: {comment: $comment, stars: $stars}\n    ) {\n      review_id\n    }\n  }\n`;\n\nexport const DELETE_REVIEW = gql`\n  mutation DeleteReview(\n    $review_id: Int!\n  ) {\n    delete_review_by_pk(review_id: $review_id) {\n      review_id\n    }\n  }\n`;\n\nexport const CREATE_REQUEST = gql`\n  mutation GetOfferings(\n    $student_id: String!, $course_id: String!, $professor_name: String, $comment: String\n  ) {\n    insert_request_one(object: {\n      student_id: $student_id,\n      course_id: $course_id,\n      professor_name: $professor_name,\n      comment: $comment,\n    }) {\n      request_id\n      student_id\n      course_id\n      professor_name\n      comment\n      created_at\n    }\n  }\n`;\n\nexport const UPDATE_REQUEST = gql`\n  mutation UpdateRequest($request_id: Int!,$professor_name: String!,$comment: String\n  ) {\n    update_request_by_pk(\n      pk_columns: {request_id: $request_id},\n      _set: {professor_name: $professor_name, comment: $comment}\n    ) {\n      request_id\n      professor_name\n      comment\n    }\n  }\n`;\n\nexport const DELETE_REQUEST = gql`\nmutation DeleteRequest($request_id: Int!) {\n  delete_request_by_pk(request_id: $request_id) {\n    request_id\n  }\n}\n`;\n","import * as React from \"react\";\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle, Stack, Box, Rating, Typography } from '@mui/material';\nimport { LoadingButton } from \"@mui/lab\";\nimport { AuthContext } from \"../../../Auth\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_REVIEW } from \"../../../graphql/mutations\";\n\nexport default function ReviewDialog({ open, close}) {\n  const { currentUser } = React.useContext(AuthContext);\n  const [ createReview, {loading} ] = useMutation(CREATE_REVIEW);\n  const [comment, setComment] = React.useState(null);\n  const [stars, setStars] = React.useState(0);\n    \n  // temp tutor - enter tutor via textfield\n  const [tutor, setTutor] = React.useState(null);\n\n  const handleReview = (event) => {\n    event.preventDefault();\n\n    createReview({\n      variables: {\n        student_id: currentUser.uid,\n        tutor_id: tutor,\n        comment: comment,\n        stars: stars,\n      },\n      onCompleted: onClose,\n    });\n  };\n\n  const onClose = () => {\n    close();\n    setComment(null);\n    setStars(null);\n    setTutor(null);\n  };\n\nreturn <>\n  <Dialog open={open} onClose={onClose}>\n    <DialogTitle>Review</DialogTitle>\n      <DialogContent>\n        <form id=\"reviewForm\" onSubmit={handleReview}>\n          <Stack spacing={3} mt={1}>\n            <TextField\n              name = \"tutorName\"\n              label = \"tutor_id (temporary)\"\n              value = {tutor}\n              onChange = {(event) => setTutor(event.target.value)}\n            />\n            <Rating\n              name=\"simple-controlled\"\n              size=\"large\"\n              value={stars}\n              onChange={(event, newValue) => {\n                setStars(newValue);\n              }}\n            />\n            <TextField\n              name = \"commentName\"\n              label = \"Comment (optional)\"\n              value = {comment}\n              multiline\n              rows={5}\n              maxRows={10}\n              onChange = {(event) => setComment(event.target.value)}\n            />\n          </Stack>\n        </form> \n      </DialogContent>\n      <DialogActions>\n        <Button disabled={loading} onClick={onClose}>Cancel</Button>\n        <LoadingButton\n          loading={loading}\n          type=\"submit\"\n          form=\"reviewForm\"\n        >\n          Create\n        </LoadingButton>\n      </DialogActions>\n  </Dialog>\n  onCompleted={() => {createReview.refetch();}}\n  </>;\n}","import * as React from \"react\";\nimport { Typography, Button } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { Fragment } from \"react\";\nimport AppointmentCard from \"./AppointmentCard\";\nimport ReviewDialog from \"./ReviewDialog\";\n\nexport default function Appointments() {\n\n  const[reviewTutor, setReviewTutor] = React.useState(false);\n\n  const days = [\n    {\n      date: \"Today\",\n      appointments: [\n        {\n          studentName: \"Adrian Chen\",\n          course: \"CPSC 471\",\n          time: \"2:00pm to 4:00pm\",\n          location: \"Mathematical Sciences 235\",\n          hasNote: true,\n        },\n        {\n          studentName: \"Jaydin Lee\",\n          course: \"CPSC 351\",\n          time: \"12:00am to 1:00pm\",\n          location: \"Scurfield Hall\",\n          hasNote: true,\n        },\n        {\n          studentName: \"Shahab Salem\",\n          course: \"MATH 271\",\n          time: \"10:00am to 11:00am\",\n          location: \"Mathematical Sciences 162\",\n        },\n        {\n          studentName: \"Jacob Samuels\",\n          course: \"HTST 301\",\n          time: \"5:00pm to 6:00pm\",\n          location: \"Science Theatres 205\",\n          hasNote: true,\n        },\n        {\n          studentName: \"Rebecca Lemont\",\n          course: \"ENGL 406 \",\n          time: \"8:00am to 10:00am\",\n          location: \"ENG A 185\",\n        },\n      ],\n    },\n    {\n      date: \"Tomorrow\",\n      appointments: [\n        {\n          studentName: \"Adrian Chen\",\n          course: \"CPSC 471\",\n          time: \"2:00pm to 4:00pm\",\n          location: \"Mathematical Sciences 235\",\n          hasNote: true,\n        },\n        {\n          studentName: \"Jaydin Lee\",\n          course: \"CPSC 351\",\n          time: \"12:00pm to 1:00pm\",\n          location: \"Scurfield Hall\",\n          hasNote: true,\n        },\n        {\n          studentName: \"Shahab Salem\",\n          course: \"MATH 271\",\n          time: \"10:00am to 11:00am\",\n          location: \"Mathematical Sciences 162\",\n        },\n        {\n          studentName: \"Jacob Samuels\",\n          course: \"HTST 301\",\n          time: \"5:00pm to 6:00pm\",\n          location: \"Science Theatres 205\",\n          hasNote: true,\n        },\n        {\n          studentName: \"Rebecca Lemont\",\n          course: \"ENGL 406 \",\n          time: \"8:00am to 10:00am\",\n          location: \"ENG A 185\",\n        },\n      ],\n    },\n  ];\n  return (\n    <Grid container mt={6} columns={10}>\n      <Grid item xs={2.25} />\n      <Grid\n        container\n        item\n        xs={5.5}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        rowSpacing={5}\n        >\n        \n        <Button onClick={() => setReviewTutor(true)} variant=\"contained\"> Make a Review </Button>\n\n        {days.map((day, i) => {\n          return (\n            <Fragment key={i}>\n              <Grid item xs={12}>\n                <Typography variant=\"h5\">{day.date}</Typography>\n              </Grid>\n              <Grid\n                item\n                container\n                columns={15}\n                columnSpacing={2}\n                rowSpacing={2}\n              >\n                {day.appointments.map((appointment, j) => {\n                  return (\n                    <Grid item xs={5} key={j}>\n                      <AppointmentCard appointment={appointment} />\n                    </Grid>\n                  );\n                })}\n              </Grid>\n            </Fragment>\n          );\n        })}\n      </Grid>\n      <Grid item xs={2.25} />\n      <ReviewDialog\n        open={reviewTutor}\n        close={() => setReviewTutor(false)}\n      />\n    </Grid>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const GET_USER_TYPE = gql`\n  query GetUserType($user_id: String!) {\n    user_by_pk(user_id: $user_id) {\n      tutor {\n        tutor_id\n      }\n      student {\n        student_id\n      }\n    }\n  }\n`;\n\nexport const GET_UNIVERSITIES = gql`\n  query GetUniversities {\n    university(order_by: {name: asc}) {\n      university_id\n      name\n    }\n  }\n`;\n\nexport const GET_OFFERINGS = gql`\n  query GetOfferings(\n    $course_exp: course_bool_exp!,\n    $tutor_exp: tutor_bool_exp!,\n  ) {\n    offering(\n      where: {\n        course: $course_exp,\n        tutor: $tutor_exp\n      },\n      order_by: {course_id: asc},\n    ) {\n      offering_id\n      grade_received\n      professor_name\n      year_taken\n      course {\n        course_id\n        name\n        department\n      }\n      tutor {\n        tutor_id\n        hourly_rate\n        bio\n        user {\n          user_id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_STUDENT_PROFILE = gql`\n  query GetStudentProfile($id: String!) {\n    student_by_pk(student_id: $id) {\n      student_id\n      major\n      year\n      user {\n        user_id\n        name\n        university {\n          university_id\n          name\n        }\n      }\n    }\n    university(order_by: {name: asc}) {\n      university_id\n      name\n    }\n  }\n`;\n\nexport const GET_TUTOR_PROFILE = gql`\n  query GetTutorProfile($id: String!) {\n    tutor_by_pk(tutor_id: $id) {\n      tutor_id\n      bio\n      hourly_rate\n      user {\n        user_id\n        name\n        university {\n          university_id\n          name\n        }\n      }\n      offerings(order_by: {course_id: asc}) {\n        offering_id\n        grade_received\n        professor_name\n        year_taken\n        course {\n          course_id\n          name\n          department\n        }\n      }\n    }\n    university(order_by: {name: asc}) {\n      university_id\n      name\n    }\n  }\n`;\n\nexport const GET_COURSES = gql`\n  query GetCourses {\n    course(order_by: {course_id: asc}) {\n      course_id\n      name\n      department\n    }\n  }\n`;\n\nexport const READ_REVEIWS = gql`\n  query ReadReview($id: String!) {\n    tutor_by_pk(tutor_id: $id) {\n      tutor_id\n      reviews(order_by: {created_at: desc}) {\n        review_id\n        created_at\n        stars\n        comment\n        student {\n          user {\n            user_id \n            name\n          }\n          student_id\n        }\n        student_id\n      }\n    }\n  }\n`;\n\nexport const READ_REQUEST = gql`\nquery ReadRequest{\n  request(order_by: {created_at: desc}) {\n    request_id\n    course_id\n    comment\n    professor_name\n    created_at\n    student {\n      user {\n        name\n        user_id\n        university_id\n      }\n      student_id\n    }\n    student_id\n    course {\n      name\n      course_id\n      department\n      university {\n        name\n        university_id\n      }\n      university_id\n    }\n  }\n}\n`;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@mui/material/Typography\";\n\nfunction Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;\n","import { AccountCircle, Paid, School } from \"@mui/icons-material\";\nimport { Divider, Grid, Paper, Stack, Typography } from \"@mui/material\";\nimport * as React from \"react\";\nimport Title from \"./Title\";\n\nexport default function OfferingTile({ offering, children }) {\n  return <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\n    <Title>\n      {`${offering.course.course_id} ${offering.course.name}`}\n    </Title>\n    <Stack\n      direction=\"row\"\n      spacing={2}\n      divider={<Divider orientation=\"vertical\" flexItem />}\n    >\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n            <AccountCircle fontSize=\"small\" />\n            <Typography variant=\"h6\">\n              {offering.tutor.user.name}\n            </Typography>\n          </Stack>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n            <Paid fontSize=\"small\" />\n            <Typography variant=\"h6\">\n              {`$${offering.tutor.hourly_rate}/hr`}\n            </Typography>\n          </Stack>\n        </Grid>\n        <Grid item xs={12}>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n            <Typography variant=\"body1\">\n              {offering.tutor.bio}\n            </Typography>\n          </Stack>\n        </Grid>\n      </Grid>\n      {offering.grade_received\n        ? <Stack alignItems=\"center\" justifyContent=\"center\" minWidth={60}>\n          <School/>\n          <Typography variant=\"h5\">\n            {offering.grade_received}\n          </Typography>\n          <Typography variant=\"caption\" noWrap>\n            {offering.year_taken}\n          </Typography>\n          <Typography variant=\"caption\" noWrap>\n            {offering.professor_name}\n          </Typography>\n        </Stack>\n        : null}\n    </Stack>\n    {children}\n  </Paper>;\n}","import { useMutation, useQuery } from \"@apollo/client\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Autocomplete, Button, Dialog, DialogActions, DialogContent, DialogTitle, Stack, TextField } from \"@mui/material\";\nimport * as React from \"react\";\nimport { CREATE_COURSE } from \"../../graphql/mutations\";\nimport { GET_UNIVERSITIES } from \"../../graphql/queries\";\n\nexport default function NewCourseDialog({ open, handleClose, onCompleted }) {\n  // Fetch universities\n  const { loading, error, data } = useQuery(GET_UNIVERSITIES);\n  const [createCourse, createResult] = useMutation(CREATE_COURSE);\n\n  if (loading) return null;\n  if (error) return `${error}`;\n  const universities = data.university;\n  const names = universities.map((uni) => uni.name);\n\n  const handleCreateCourse = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    // Search for university_id based on name\n    const uniName = data.get('university');\n    const university = universities.find((u) => u.name === uniName);\n    if (!university) return;\n\n    // Create course, then call provided onCompleted\n    createCourse({\n      variables: {\n        course_id: data.get('course') || null,\n        name: data.get('name') || null,\n        department: data.get('department') || null,\n        university_id: university.university_id,\n      },\n      onCompleted: onCompleted,\n    });\n  };\n\n  return <Dialog open={open} onClose={handleClose}>\n    <DialogTitle>Add Course</DialogTitle>\n    <DialogContent>\n      <form id=\"newCourseForm\" onSubmit={handleCreateCourse}>\n        <Stack spacing={3} mt={1}>\n          <TextField\n            required\n            name=\"course\"\n            label=\"Course ID\"\n          />\n          <TextField\n            required\n            name=\"name\"\n            label=\"Course Name\"\n          />\n          <TextField\n            required\n            name=\"department\"\n            label=\"Department\"\n          />\n          <Autocomplete\n            disablePortal\n            options={names}\n            renderInput={(params) => (\n              <TextField\n                required\n                name=\"university\"\n                label=\"University\"\n                {...params}\n              />\n            )}\n          />\n        </Stack>\n      </form>\n    </DialogContent>\n    <DialogActions>\n      <Button disabled={createResult.loading} onClick={handleClose}>Cancel</Button>\n      <LoadingButton loading={createResult.loading} type=\"submit\" form=\"newCourseForm\">\n        Create\n      </LoadingButton>\n    </DialogActions>\n  </Dialog>;\n}","import { useMutation, useQuery } from \"@apollo/client\";\nimport { Add } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Autocomplete, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Stack, TextField } from \"@mui/material\";\nimport * as React from \"react\";\nimport { AuthContext } from \"../../../Auth\";\nimport { CREATE_REQUEST } from \"../../../graphql/mutations\";\nimport { GET_COURSES } from \"../../../graphql/queries\";\nimport NewCourseDialog from \"../NewCourseDialog\";\n\nexport default function RequestCourseDialog({ open, handleClose }) {\n  const { currentUser } = React.useContext(AuthContext);\n\n  const [newCourse, setNewCourse] = React.useState(false);\n  const [course, setCourse] = React.useState(null);\n  const [professor, setProfessor] = React.useState(null);\n  const [comment, setComment] = React.useState(null);\n\n  const [createRequest, { loading }] = useMutation(CREATE_REQUEST);\n\n  // Fetch all courses\n  const courseResult = useQuery(GET_COURSES);\n\n  if (courseResult.loading) return null;\n  if (courseResult.error) return `${courseResult.error}`;\n  const courses = courseResult.data.course.map((course) => course.course_id);\n\n  const handleRequestCourse = (event) => {\n    event.preventDefault();\n\n    // Course if required\n    if (!course) return;\n\n    createRequest({\n      variables: {\n        student_id: currentUser.uid,\n        course_id: course,\n        professor_name: professor,\n        comment: comment,\n      },\n      onCompleted: onClose,\n    });\n  };\n\n  const onClose = () => {\n    // Close dialog and set variables to null\n    handleClose();\n    setCourse(null);\n    setProfessor(null);\n    setComment(null);\n  };\n\n  return <>\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Request a Course</DialogTitle>\n      <DialogContent>\n        <form id=\"requestCourseForm\" onSubmit={handleRequestCourse}>\n          <Stack spacing={3} mt={1}>\n            <Stack direction=\"row\" spacing={3} alignItems=\"center\">\n              <Autocomplete\n                disablePortal\n                fullWidth\n                options={courses}\n                value={course}\n                onChange={(_, value) => setCourse(value)}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    name=\"course\"\n                    label=\"Course\"\n                  />\n                )}\n              />\n              <IconButton onClick={() => setNewCourse(true)}>\n                <Add />\n              </IconButton>\n            </Stack>\n            <TextField\n              name=\"professorName\"\n              label=\"Professor Name (optional)\"\n              value={professor}\n              onChange={(event) => setProfessor(event.target.value)}\n            />\n            <TextField\n              name=\"comment\"\n              label=\"Comment (optional)\"\n              value={comment}\n              onChange={(event) => setComment(event.target.value)}\n            />\n          </Stack>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button disabled={loading} onClick={onClose}>Cancel</Button>\n        <LoadingButton\n          disabled={!course}\n          loading={loading}\n          type=\"submit\"\n          form=\"requestCourseForm\"\n        >\n          Create\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n    <NewCourseDialog\n      open={newCourse}\n      handleClose={() => setNewCourse(false)}\n      onCompleted={() => {\n        setNewCourse(false);\n        courseResult.refetch();\n      }}\n    />\n  </>;\n}\n","import { useQuery } from \"@apollo/client\";\nimport { Bookmark, ContactSupport, FilterAlt } from \"@mui/icons-material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport { Autocomplete, Box, Button, Container, Grid, Paper, Stack, TextField, Typography } from \"@mui/material\";\nimport * as React from \"react\";\nimport { AuthContext } from \"../../../Auth\";\nimport { GET_COURSES, GET_OFFERINGS, GET_STUDENT_PROFILE } from \"../../../graphql/queries\";\nimport LoadingPage from \"../../LoadingPage\";\nimport OfferingTile from \"../OfferingTile\";\nimport RequestCourseDialog from \"./RequestCourseDialog\";\n\nexport default function Offerings() {\n  const [course, setCourse] = React.useState(null);\n  const [startTime, setStartTime] = React.useState(null);\n  const [endTime, setEndTime] = React.useState(null);\n  const [requestingCourse, setRequestingCourse] = React.useState(false);\n\n  const { loading, error, data } = useQuery(GET_COURSES);\n\n  if (loading) return <LoadingPage />\n  if (error) return `${error}`;\n\n  const courses = data.course.map((course) => course.course_id);\n\n  const tutorSelect = (offering) => {\n    console.log(JSON.stringify(offering, null, 2));\n  };\n\n  return <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }} display=\"flex\" justifyContent=\"center\">\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6} display=\"flex\" alignItems=\"center\">\n              <FilterAlt sx={{ mr: 1 }} />\n              <Typography variant=\"h6\">\n                Filter results\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} display=\"flex\" sx={{\n              justifyContent: { xs: \"flex-start\", md: \"flex-end\" },\n            }}>\n              <Button\n                onClick={() => setRequestingCourse(true)}\n                startIcon={<ContactSupport />}\n                variant=\"outlined\"\n              >\n                Request a course\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4} display=\"flex\" justifyContent=\"flex-end\">\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateTimePicker\n                  clearable\n                  label=\"After Time\"\n                  value={startTime}\n                  onChange={setStartTime}\n                  renderInput={(params) => (\n                    <TextField {...params} fullWidth helperText={null} />\n                  )}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12} md={4} display=\"flex\" justifyContent=\"flex-end\">\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateTimePicker\n                  clearable\n                  label=\"Before Time\"\n                  value={endTime}\n                  onChange={setEndTime}\n                  renderInput={(params) => (\n                    <TextField {...params} fullWidth helperText={null} />\n                  )}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12} md={4} display=\"flex\" justifyContent=\"flex-end\">\n              <Autocomplete\n                disablePortal\n                options={courses}\n                value={course}\n                onChange={(_, value) => setCourse(value)}\n                sx={{ width: \"100%\" }}\n                renderInput={(params) => (\n                  <TextField {...params} fullWidth label=\"Course\" />\n                )}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <OfferingResults\n        onSelect={tutorSelect}\n        course={course}\n        startTime={startTime}\n        endTime={endTime}\n      />\n    </Grid>\n    <RequestCourseDialog\n      open={requestingCourse}\n      handleClose={() => setRequestingCourse(false)}\n    />\n  </Container>;\n}\n\nconst OfferingResults = ({ course, startTime, endTime, onSelect }) => {\n  const { currentUser } = React.useContext(AuthContext);\n\n  const pResult = useQuery(GET_STUDENT_PROFILE, {\n    variables: {\n      id: currentUser.uid,\n    },\n  });\n\n  const universityId = pResult.data?.student_by_pk.user.university.university_id;\n\n  const oResult = useQuery(GET_OFFERINGS, {\n    skip: !universityId,\n    variables: {\n      course_exp: {\n        ...(course && { course_id: { _eq: course } }),\n      },\n      tutor_exp: {\n        user: {\n          university_id: {\n            _eq: universityId,\n          },\n        },\n        // Add hours check if provided\n        ...((startTime || endTime) && {\n          hours: {\n            start_time: {\n              ...(startTime && { _gte: startTime.toISOString() }),\n              ...(endTime && { _lte: endTime.toISOString() }),\n            },\n          },\n        }),\n      },\n    },\n  });\n\n  if (pResult.error || oResult.error) return `${pResult.error}${oResult.error}`;\n  if (oResult.data === undefined) return <LoadingPage />;\n\n  const offerings = oResult.data.offering;\n\n  if (offerings.length === 0) {\n    return <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width=\"100%\"\n      height=\"100vh\"\n    >\n      No results.\n    </Box>;\n  }\n\n  return offerings.map((offering, i) => (\n    <Grid item xs={12} md={6} key={i}>\n      <OfferingTile\n        offering={offering}\n        children={\n          <Stack mt={2} direction=\"row\">\n            <Button\n              variant=\"contained\"\n              startIcon={<Bookmark />}\n              onClick={() => onSelect(offering)}\n            >\n              Book This Tutor\n            </Button>\n          </Stack>\n        }\n      />\n    </Grid>\n  ));\n};\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Autocomplete, Container, Grid, Paper, TextField } from \"@mui/material\";\nimport * as React from \"react\";\nimport { AuthContext } from \"../../../Auth\";\nimport { UPDATE_STUDENT } from \"../../../graphql/mutations\";\nimport { GET_STUDENT_PROFILE } from \"../../../graphql/queries\";\nimport LoadingPage from \"../../LoadingPage\";\nimport Title from \"../Title\";\n\nexport default function Profile() {\n  const { currentUser } = React.useContext(AuthContext);\n  const [updateStudent, updateResult] = useMutation(UPDATE_STUDENT, {\n    variables: {\n      id: currentUser.uid,\n    },\n  });\n\n  // Fetch current user profile\n  const { loading, error, data } = useQuery(GET_STUDENT_PROFILE, {\n    variables: {\n      id: currentUser.uid,\n    },\n  });\n\n  if (loading) return <LoadingPage />;\n  if (error) return `${error}`;\n\n  // Extract relevant data\n  const student = data.student_by_pk;\n  const universities = data.university.map((uni) => {\n    return {\n      label: uni.name,\n      id: uni.university_id,\n    };\n  });\n\n  // Callback for form\n  const formSave = (event, university) => {\n    // Prevents automatic reload\n    event.preventDefault();\n\n    const data = new FormData(event.currentTarget);\n\n    // Default values to null\n    // No refetch needed, cache updates automatically\n    updateStudent({\n      variables: {\n        name: data.get('name') || null,\n        university_id: university?.id ?? null,\n        major: data.get('major') || null,\n        year: data.get('year') || null,\n      },\n    });\n  };\n\n  // Separate component required due to the 'university' state\n  return <ProfileForm\n    student={student}\n    universities={universities}\n    onSave={formSave}\n    loading={updateResult.loading}\n  />;\n}\n\nconst ProfileForm = ({ student, universities, onSave, loading }) => {\n  // Student's current university, or null if not set\n  const [university, setUniversity] = React.useState(\n    student.user.university\n      ? {\n        label: student.user.university.name,\n        id: student.user.university.university_id,\n      }\n      : null\n  );\n\n  return <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n    <Grid container spacing={3} justifyContent={\"center\"}>\n      <Grid item xs={12} md={10}>\n        <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\n          <Title>Your Profile</Title>\n          <Grid\n            container\n            spacing={2}\n            justifyContent={\"center\"}\n            alignItems=\"center\"\n            component=\"form\"\n            onSubmit={(event) => onSave(event, university)}\n            noValidate\n            sx={{ mt: 2 }}\n          >\n            <Grid item xs={10} md={10}>\n              <TextField\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n                autoComplete=\"name\"\n                defaultValue={student.user.name}\n              />\n            </Grid>\n            <Grid item xs={10} md={10}>\n              <Autocomplete\n                disablePortal\n                id=\"university\"\n                options={universities}\n                value={university}\n                isOptionEqualToValue={(option, value) => option.id === value.id}\n                onChange={(_, newValue) => setUniversity(newValue)}\n                renderInput={(params) => (\n                  <TextField\n                    id=\"university\"\n                    label=\"University\"\n                    {...params}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={10} md={5}>\n              <TextField\n                fullWidth\n                id=\"major\"\n                label=\"Major\"\n                name=\"major\"\n                defaultValue={student.major}\n              />\n            </Grid>\n            <Grid item xs={10} md={5}>\n              <TextField\n                fullWidth\n                id=\"year\"\n                label=\"Year\"\n                name=\"year\"\n                type=\"number\"\n                defaultValue={student.year}\n              />\n            </Grid>\n            <Grid item xs={10} sx={{ mt: 2, mb: 2 }}>\n              <LoadingButton loading={loading} type=\"submit\" variant=\"contained\">\n                Save\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  </Container>;\n};\n","import { AccountCircle, Event, School } from \"@mui/icons-material\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Divider from \"@mui/material/Divider\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../../../firebase\";\nimport Appointments from \"../appointments/Appointments\";\nimport Offerings from \"./Offerings\";\nimport Profile from \"./Profile\";\n\nexport default function StudentDashboard({ page }) {\n  const navigate = useNavigate();\n  const drawerWidth = 240;\n\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== \"open\",\n  })(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\n  const Drawer = styled(MuiDrawer, {\n    shouldForwardProp: (prop) => prop !== \"open\",\n  })(({ theme, open }) => ({\n    \"& .MuiDrawer-paper\": {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: \"border-box\",\n      ...(!open && {\n        overflowX: \"hidden\",\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing(9),\n        },\n      }),\n    },\n  }));\n\n  const theme = useTheme();\n  const fullDrawer = useMediaQuery(theme.breakpoints.up('sm'));\n\n  const [open, setOpen] = React.useState(true);\n  const [anchor, setAnchor] = React.useState(null);\n\n  const toggleDrawer = (event) => {\n    if (fullDrawer) {\n      setOpen(!open);\n    }\n    else {\n      setAnchor(anchor === null ? event.currentTarget : null);\n    }\n  };\n\n  const drawerItems = [\n    ['Appointments', <Event />],\n    ['Offerings', <School />],\n    ['Profile', <AccountCircle />],\n  ];\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" open={fullDrawer && open}>\n        <Toolbar\n          sx={{\n            pr: \"24px\", // keep right padding when drawer closed\n          }}\n        >\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer}\n            sx={{\n              marginRight: \"36px\",\n              ...(fullDrawer && open && { display: \"none\" }),\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            sx={{ flexGrow: 1 }}\n          >\n            {page}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        open={open}\n        sx={{\n          ...(!fullDrawer && { display: \"none\" }),\n        }}\n      >\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            px: [1],\n          }}\n        >\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n        <Divider />\n        <List>\n          {drawerItems.map(([name, icon], i) => {\n            return <ListItem\n              key={i}\n              selected={page === name}\n              button\n              onClick={() => {\n                navigate(`/${name.toLowerCase()}`, { replace: true });\n              }}\n            >\n              <ListItemIcon>\n                {icon}\n              </ListItemIcon>\n              <ListItemText primary={name} />\n            </ListItem>;\n          })}\n          <Divider />\n          <ListItem\n            button\n            onClick={() => {\n              auth.signOut();\n              localStorage.removeItem(\"li\");\n            }}\n          >\n            <ListItemIcon>\n              <LogoutIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Log Out\" />\n          </ListItem>\n        </List>\n      </Drawer>\n      <Menu\n        anchorEl={anchor}\n        open={!fullDrawer && anchor !== null}\n        onClose={() => setAnchor(null)}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        {drawerItems.map(([name, icon], i) => {\n          return <MenuItem\n            key={i}\n            selected={page === name}\n            onClick={() => {\n              navigate(`/${name.toLowerCase()}`, { replace: true });\n              setAnchor(null);\n            }}\n          >\n            <ListItemIcon>\n              {icon}\n            </ListItemIcon>\n            {name}\n          </MenuItem>;\n        })}\n        <Divider />\n        <MenuItem\n          onClick={() => {\n            auth.signOut();\n            localStorage.removeItem(\"li\");\n          }}\n        >\n          <ListItemIcon>\n            <LogoutIcon />\n          </ListItemIcon>\n          Log Out\n        </MenuItem>\n      </Menu>\n      <Box\n        component=\"main\"\n        sx={{\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"light\"\n              ? theme.palette.grey[100]\n              : theme.palette.grey[900],\n          flexGrow: 1,\n          height: \"100vh\",\n          overflow: \"auto\",\n        }}\n      >\n        <Toolbar />\n        {page === \"Appointments\" ? (\n          <Appointments />\n        ) : page === \"Offerings\" ? (\n          <Offerings />\n        ) : (\n          <Profile />\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import ArrowBackIosNewOutlinedIcon from \"@mui/icons-material/ArrowBackIosNewOutlined\";\nimport ArrowForwardIosOutlinedIcon from \"@mui/icons-material/ArrowForwardIosOutlined\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { useState } from \"react\";\n\nexport default function Availability() {\n  const [value, setValue] = useState(new Date());\n\n  const weekdaySlots = [\n    { time: \"7am\", availabile: false },\n    { time: \"8am\", availabile: false },\n    { time: \"9am\", availabile: false },\n    { time: \"10am\", availabile: false },\n    { time: \"11am\", availabile: false },\n    { time: \"12pm\", availabile: true },\n    { time: \"1pm\", availabile: true },\n    { time: \"2pm\", availabile: true },\n    { time: \"3pm\", availabile: true },\n    { time: \"4pm\", availabile: true },\n    { time: \"5pm\", availabile: true },\n    { time: \"6pm\", availabile: false },\n    { time: \"7pm\", availabile: false },\n    { time: \"8pm\", availabile: false },\n    { time: \"9pm\", availabile: false },\n    { time: \"10pm\", availabile: false },\n  ];\n  const weekendSlots = [\n    { time: \"7am\", availabile: false },\n    { time: \"8am\", availabile: false },\n    { time: \"9am\", availabile: true },\n    { time: \"10am\", availabile: true },\n    { time: \"11am\", availabile: true },\n    { time: \"12pm\", availabile: true },\n    { time: \"1pm\", availabile: false },\n    { time: \"2pm\", availabile: false },\n    { time: \"3pm\", availabile: false },\n    { time: \"4pm\", availabile: false },\n    { time: \"5pm\", availabile: true },\n    { time: \"6pm\", availabile: true },\n    { time: \"7pm\", availabile: true },\n    { time: \"8pm\", availabile: true },\n    { time: \"9pm\", availabile: false },\n    { time: \"10pm\", availabile: false },\n  ];\n\n  const days = [\n    { name: \"MON\", number: 22, slots: weekdaySlots },\n    { name: \"TUES\", number: 23, slots: weekdaySlots },\n    { name: \"WED\", number: 24, slots: weekdaySlots },\n    { name: \"THU\", number: 25, slots: weekdaySlots },\n    { name: \"FRI\", number: 26, slots: weekdaySlots },\n    { name: \"SAT\", number: 27, slots: weekendSlots },\n    { name: \"SUN\", number: 28, slots: weekendSlots },\n  ];\n\n  return (\n    <Grid container mt={3} spacing={3} justifyContent=\"center\">\n      <Grid item xs={12} display=\"flex\" justifyContent=\"center\">\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DatePicker\n            views={[\"year\", \"month\"]}\n            label=\"Year and Month\"\n            minDate={new Date(\"2021-01-25\")}\n            maxDate={new Date(\"2032-06-01\")}\n            value={value}\n            onChange={(newValue) => {\n              setValue(newValue);\n            }}\n            renderInput={(params) => (\n              <TextField {...params} helperText={null} />\n            )}\n          />\n        </LocalizationProvider>\n      </Grid>\n      <Grid item xs={12} md={8} >\n        <Grid container justifyContent={\"center\"} columns={9} >\n          <Grid item container justifyContent=\"center\" xs={1} mt={3}>\n            <ArrowBackIosNewOutlinedIcon size={\"small\"} />\n          </Grid>\n          {days.map((day, i) => {\n            return (\n              <Grid\n                key={i}\n                container\n                item\n                xs={1}\n                direction=\"column\"\n                justifyContent={\"center\"}\n                alignItems={\"center\"}\n                rowSpacing={1}\n              >\n                <Grid item>\n                  <Typography\n                    color={day.name === \"THU\" && \"primary\"}\n                    variant={\"h6\"}\n                  >\n                    {day.name}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography\n                    color={day.name === \"THU\" && \"primary\"}\n                    variant={\"h6\"}\n                  >\n                    {day.number}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <List>\n                    {day.slots.map((slot, j) => {\n                      return (\n                        <ListItem\n                          key={j}\n                          sx={{\n                            marginBottom: \"10px\",\n                          }}\n                          selected={slot.availabile}\n                          button\n                          onClick={() => { }}\n                        >\n                          <ListItemText primary={slot.time} />\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                </Grid>\n              </Grid>\n            );\n          })}\n          <Grid item container justifyContent=\"center\" xs={1} mt={3}>\n            <ArrowForwardIosOutlinedIcon size={\"small\"} />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useQuery } from \"@apollo/client\";\nimport { Add } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Autocomplete, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Stack, TextField } from \"@mui/material\";\nimport * as React from \"react\";\nimport { GET_COURSES } from \"../../../graphql/queries\";\nimport NewCourseDialog from \"../NewCourseDialog\";\n\nexport default function EditOfferingDialog({ offering, handleClose, onSave, loading }) {\n  const [newCourse, setNewCourse] = React.useState(false);\n\n  // Fetch all courses\n  const courseResult = useQuery(GET_COURSES);\n\n  if (courseResult.loading) return null;\n  if (courseResult.error) return `${courseResult.error}`;\n  const courses = courseResult.data.course.map((course) => course.course_id);\n\n  // Don't display if offering is null\n  if (offering === null) return null;\n\n  const isEditing = Boolean(offering.offering_id);\n\n  return <>\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        {isEditing ? 'Edit Offering' : 'New Offering'}\n      </DialogTitle>\n      <DialogContent>\n        <form id=\"editOfferingForm\" onSubmit={onSave}>\n          <Stack spacing={3} mt={1}>\n            <Stack direction=\"row\" spacing={3} alignItems=\"center\">\n              <Autocomplete\n                disablePortal\n                fullWidth\n                disabled={isEditing}\n                options={courses}\n                defaultValue={offering.course?.course_id}\n                renderInput={(params) => (\n                  <TextField\n                    required\n                    name=\"course\"\n                    label=\"Course\"\n                    {...params}\n                  />\n                )}\n              />\n              {isEditing ? null :\n                <IconButton onClick={() => setNewCourse(true)}>\n                  <Add />\n                </IconButton>\n              }\n            </Stack>\n            <TextField\n              name=\"gradeReceived\"\n              label=\"Grade Received (optional)\"\n              defaultValue={offering.grade_received || ''}\n            />\n            <TextField\n              name=\"professorName\"\n              label=\"Professor Name (optional)\"\n              defaultValue={offering.professor_name || ''}\n            />\n            <TextField\n              name=\"yearTaken\"\n              label=\"Year Taken (optional)\"\n              defaultValue={offering.year_taken || ''}\n            />\n          </Stack>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button disabled={loading} onClick={handleClose}>Cancel</Button>\n        <LoadingButton loading={loading} type=\"submit\" form=\"editOfferingForm\">\n          {isEditing ? 'Save' : 'Create'}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n    <NewCourseDialog\n      open={newCourse}\n      handleClose={() => setNewCourse(false)}\n      onCompleted={() => {\n        setNewCourse(false);\n        courseResult.refetch();\n      }}\n    />\n  </>;\n}","import { LoadingButton } from \"@mui/lab\";\nimport { Autocomplete, Button, Dialog, DialogActions, DialogContent, DialogTitle, Stack, TextField } from \"@mui/material\";\nimport * as React from \"react\";\n\nexport default function EditProfileDialog({ tutor, open, handleClose, onSave, universities, loading }) {\n  const [university, setUniversity] = React.useState(\n    tutor.user.university\n      ? {\n        label: tutor.user.university.name,\n        id: tutor.user.university.university_id,\n      }\n      : null\n  );\n\n  return <Dialog open={open} onClose={handleClose}>\n    <DialogTitle>Edit Profile</DialogTitle>\n    <DialogContent>\n      <form id=\"editProfileForm\" onSubmit={(event) => onSave(event, university)}>\n        <Stack spacing={3} mt={1}>\n          <TextField\n            required\n            name=\"name\"\n            label=\"Name\"\n            type=\"name\"\n            defaultValue={tutor.user.name}\n          />\n          <TextField\n            name=\"hourlyRate\"\n            label=\"Hourly Rate\"\n            defaultValue={tutor.hourly_rate ?? ''}\n          />\n          <TextField\n            name=\"bio\"\n            label=\"Bio\"\n            defaultValue={tutor.bio ?? ''}\n          />\n          <Autocomplete\n            disablePortal\n            options={universities}\n            value={university}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            onChange={(_, value) => setUniversity(value)}\n            renderInput={(params) => (\n              <TextField {...params} label=\"University\" />\n            )}\n          />\n        </Stack>\n      </form>\n    </DialogContent>\n    <DialogActions>\n      <Button disabled={loading} onClick={handleClose}>Cancel</Button>\n      <LoadingButton loading={loading} type=\"submit\" form=\"editProfileForm\">\n        Save\n      </LoadingButton>\n    </DialogActions>\n  </Dialog>;\n}\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport { Add, ModeEdit, RemoveCircleOutline } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Box, Button, Container, Grid, Paper, Typography } from \"@mui/material\";\nimport * as React from \"react\";\nimport { AuthContext } from \"../../../Auth\";\nimport { CREATE_OFFERING, DELETE_OFFERING, UPDATE_OFFERING, UPDATE_TUTOR } from \"../../../graphql/mutations\";\nimport { GET_TUTOR_PROFILE } from \"../../../graphql/queries\";\nimport LoadingPage from \"../../LoadingPage\";\nimport OfferingTile from \"../OfferingTile\";\nimport Title from \"../Title\";\nimport EditOfferingDialog from \"./EditOfferingDialog\";\nimport EditProfileDialog from \"./EditProfileDialog\";\n\nexport default function Profile() {\n  const { currentUser } = React.useContext(AuthContext);\n  const [updateTutor, updateTutorResult] = useMutation(UPDATE_TUTOR, {\n    variables: {\n      id: currentUser.uid,\n    },\n  });\n  const [createOffering, createOfferingResult] = useMutation(CREATE_OFFERING);\n  const [updateOffering, updateOfferingResult] = useMutation(UPDATE_OFFERING);\n  const [deleteOffering] = useMutation(DELETE_OFFERING);\n\n  const [editProfile, setEditProfile] = React.useState(false);\n  const [editingOffering, setEditingOffering] = React.useState(null);\n  const [deletingOfferingId, setDeletingOfferingId] = React.useState(null);\n\n  // Fetch tutor profile\n  const { loading, error, data, refetch } = useQuery(GET_TUTOR_PROFILE, {\n    variables: {\n      id: currentUser.uid,\n    },\n  });\n\n  if (loading) return <LoadingPage />;\n  if (error) return `${error}`;\n\n  // Extract relevant data\n  const tutor = {\n    ...data.tutor_by_pk,\n  };\n  const baseOfferings = tutor.offerings;\n  delete tutor.offerings;\n\n  const offerings = baseOfferings.map((offering) => {\n    return {\n      tutor: tutor,\n      ...offering,\n    };\n  });\n\n  const universities = data.university.map((uni) => {\n    return {\n      label: uni.name,\n      id: uni.university_id,\n    };\n  });\n\n  const handleEditProfile = (event, university) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    // Default values to null\n    updateTutor({\n      variables: {\n        name: data.get('name') || null,\n        university_id: university?.id ?? null,\n        hourly_rate: data.get('hourlyRate') || null,\n        bio: data.get('bio') || null,\n      },\n      onCompleted: () => {\n        // Hide dialog when finished\n        // Don't need to refetch, as the cache updates immediately\n        setEditProfile(false);\n      },\n    });\n  };\n\n  // Includes handling new offering\n  const handleEditOffering = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    // A course is required to update or create an offering\n    if (!data.get('course') && !editingOffering) {\n      // TODO: show error\n      return;\n    }\n\n    // Extract data, defaulting to null\n    const variables = {\n      // When the TextField is disabled, the info inside can't be retrieved\n      course_id: data.get('course') || editingOffering.course?.course_id || null,\n      grade_received: data.get('gradeReceived') || null,\n      professor_name: data.get('professorName') || null,\n      year_taken: data.get('yearTaken') || null,\n    };\n\n    const onCompleted = () => {\n      // Hide dialog and refetch courses when finished\n      setEditingOffering(null);\n      refetch();\n    };\n\n    if (editingOffering.offering_id) {\n      // Update existing offering\n      updateOffering({\n        variables: {\n          offering_id: editingOffering.offering_id,\n          ...variables,\n        },\n        onCompleted: onCompleted,\n      });\n    }\n    else {\n      // Create new offering\n      createOffering({\n        variables: {\n          tutor_id: currentUser.uid,\n          ...variables,\n        },\n        onCompleted: onCompleted,\n      });\n    }\n  };\n\n  const handleDeleteOffering = (offering) => {\n    setDeletingOfferingId(offering.offering_id);\n    deleteOffering({\n      variables: {\n        offering_id: offering.offering_id,\n      },\n      onCompleted: () => {\n        refetch();\n        setDeletingOfferingId(null);\n      },\n    });\n  };\n\n  return <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\n          <Title>Your Profile</Title>\n          <Grid container spacing={2} justifyContent=\"center\">\n            <Grid item xs={12} md={6} justifyContent=\"center\">\n              <Typography variant=\"h6\">Name</Typography>\n              <Typography variant=\"body1\">{tutor.user.name}</Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Typography variant=\"h6\">Hourly Rate</Typography>\n              <Typography variant=\"body1\">{`$${tutor.hourly_rate}/hr`}</Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Typography variant=\"h6\">Bio</Typography>\n              <Typography variant=\"body1\">{tutor.bio}</Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Typography variant=\"h6\">University</Typography>\n              <Typography variant=\"body1\">{tutor.user.university?.name ?? 'None'}</Typography>\n            </Grid>\n            <Grid item mt={1} xs={12}>\n              <Box display=\"flex\" gap={2} sx={{\n                flexDirection: { xs: \"column\", md: \"row\" }\n              }}>\n                <Button\n                  variant=\"outlined\"\n                  startIcon={<ModeEdit />}\n                  onClick={() => setEditProfile(true)}\n                >\n                  Edit Profile\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  startIcon={<Add />}\n                  onClick={() => setEditingOffering({})}\n                >\n                  Create New Offering\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      {offerings.map((offering, i) =>\n        <Grid key={i} item xs={12} md={6}>\n          <OfferingTile\n            offering={offering}\n            children={\n              <Box mt={2} display=\"flex\" gap={2} sx={{\n                flexDirection: { xs: \"column\", md: \"row\" },\n              }}>\n                <Button\n                  variant=\"outlined\"\n                  startIcon={<ModeEdit />}\n                  disabled={offering.offering_id === deletingOfferingId}\n                  onClick={() => setEditingOffering(offering)}\n                >\n                  Edit Offering\n                </Button>\n                <LoadingButton\n                  variant=\"outlined\"\n                  startIcon={<RemoveCircleOutline />}\n                  loading={offering.offering_id === deletingOfferingId}\n                  color=\"error\"\n                  onClick={() => handleDeleteOffering(offering)}\n                >\n                  Delete Offering\n                </LoadingButton>\n              </Box>\n            }\n          />\n        </Grid>\n      )}\n    </Grid>\n    <EditProfileDialog\n      tutor={tutor}\n      open={editProfile}\n      handleClose={() => setEditProfile(false)}\n      onSave={handleEditProfile}\n      universities={universities}\n      loading={updateTutorResult.loading}\n    />\n    <EditOfferingDialog\n      offering={editingOffering}\n      handleClose={() => setEditingOffering(null)}\n      onSave={handleEditOffering}\n      loading={createOfferingResult.loading || updateOfferingResult.loading}\n    />\n  </Container>;\n}\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport { makeStyles } from \"@mui/styles\";\nimport CardActions from \"@mui/material/CardActions\";\nimport { Grid, Stack } from \"@mui/material\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 100,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function ReviewsCards({ requests, children }) {\n  const classes = useStyles();\n  const date = requests.created_at;\n  const options = {year: 'numeric', month: 'long', day: 'numeric' };\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\">{requests.student.user.name}</Typography>\n        <Stack justifyContent=\"space-between\" direction=\"row\">\n          <Typography variant=\"body1\" align=\"left\">\n            {requests.course_id}\n          </Typography>\n          <Typography variant=\"body1\" align=\"right\">\n            {requests.professor_name}\n          </Typography>\n        </Stack>\n        <Grid container>\n          <Grid item mr={1} mt={1}>\n            <AccessTimeIcon fontSize=\"1\" color=\"primary\" />\n          </Grid>\n          <Grid item>\n            <Typography mt={1} color=\"textSecondary\" variant=\"body1\">\n              { new Date(date).toLocaleDateString() }\n            </Typography>\n          </Grid>\n        </Grid>\n        <Typography mt={1}>Comments:</Typography>\n        <Typography mr={1} variant=\"body2\" color=\"secondaryColour\">\n          {requests.comment}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Grid container justify=\"space-between\">\n          <Typography align=\"left\"></Typography>\n        </Grid>\n        {children}\n      </CardActions>\n    </Card>\n  );\n}\n","import { LoadingButton } from \"@mui/lab\";\nimport { Autocomplete, Button, Dialog, DialogActions, DialogContent, DialogTitle, Stack, TextField } from \"@mui/material\";\nimport * as React from \"react\";\n\nexport default function EditOfferingDialog({ offering, handleClose, onSave, loading}) {\n  \n  // Don't display if offering is null\n  if (offering === null) return null;\n\n  return <>\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        {'New Offering'}\n      </DialogTitle>\n      <DialogContent>\n        <form id=\"editOfferingForm\" onSubmit={onSave}>\n          <Stack spacing={3} mt={1}>\n            <Stack direction=\"row\" spacing={3} alignItems=\"center\">\n              <Autocomplete\n                disablePortal\n                fullWidth\n                disabled={true}\n                options={''}\n                defaultValue={offering.request?.course_id}\n                renderInput={(params) => (\n                  <TextField\n                    name=\"course\"\n                    label=\"Course\"\n                    {...params}\n                  />\n                )}\n              />\n            </Stack>\n            <TextField\n              name=\"gradeReceived\"\n              label=\"Grade Received (optional)\"\n              defaultValue={offering.grade_received || ''}\n            />\n            <TextField\n              name=\"professorName\"\n              label=\"Professor Name (optional)\"\n              defaultValue={offering.professor_name || ''}\n            />\n            <TextField\n              name=\"yearTaken\"\n              label=\"Year Taken (optional)\"\n              defaultValue={offering.year_taken || ''}\n            />\n          </Stack>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button disabled={loading} onClick={handleClose}>Cancel</Button>\n        <LoadingButton loading={loading} type=\"submit\" form=\"editOfferingForm\">\n          {'Save'}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  </>;\n}","import * as React from \"react\";\nimport { Grid, Button, Stack } from \"@mui/material\";\nimport RequestsCards from \"./RequestsCards\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { READ_REQUEST } from \"../../../graphql/queries\";\nimport { DELETE_REQUEST, CREATE_OFFERING } from \"../../../graphql/mutations\";\nimport { AuthContext } from \"../../../Auth\";\nimport LoadingPage from \"../../LoadingPage\";\nimport EditOfferingDialog from \"./RequestOfferingDialog\";\n\nconst useStyles = makeStyles({\n  gridContainer: {\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n    paddingTop: \"35px\",\n  },\n});\n\nexport default function Requests() {\n  const classes = useStyles();\n  const { currentUser } = React.useContext(AuthContext);\n  const { loading, error, data , refetch} = useQuery(READ_REQUEST, {});\n  const [deleteRequest] = useMutation(DELETE_REQUEST);\n  const [createOffering, createOfferingResult] = useMutation(CREATE_OFFERING);\n  const [editingOffering, setEditingOffering] = React.useState(null);\n\n  if (loading) return <LoadingPage />;\n  if (error) return `${error}`;\n\n  const requests = data.request.map((request) =>{\n    return {...request};\n  });\n\n  // Includes handling new offering\n  const handleEditOffering = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    // A course is required to create an offering\n    if (!data.get('course') && !editingOffering) {\n      // TODO: show error\n      return;\n    }\n\n    // Extract data, defaulting to null\n    const variables = {\n      // When the TextField is disabled, the info inside can't be retrieved\n      course_id: editingOffering.request?.course_id || null,\n      grade_received: data.get('gradeReceived') || null,\n      professor_name: data.get('professorName') || null,\n      year_taken: data.get('yearTaken') || null,\n    };\n\n    const onCompleted = () => {\n      // Hide dialog and refetch courses when finished\n      setEditingOffering(null);\n      refetch();\n    };\n\n    // Create new offering\n    createOffering({\n      variables: {\n        tutor_id: currentUser.uid,\n        ...variables,\n      },\n      onCompleted: onCompleted,\n    });\n    \n    // delete request after creating new offering\n    deleteRequest({\n      variables: {\n        request_id: editingOffering.request.request_id,\n      },\n      onCompleted: onCompleted,\n    });\n  };\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={2}\n        className={classes.gridContainer}\n        justify=\"center\"\n      >\n        {requests.map((request, i) => (\n          <Grid key={i} item xs={12} sm={6} md={4}>\n            <RequestsCards requests={request} \n            children={<Stack>\n              <Button variant=\"contained\" size=\"medium\" color=\"primary\" onClick={() => setEditingOffering({request})}\n              >Accept</Button>\n            </Stack>}\n            />\n          </Grid>\n        ))}\n      </Grid>\n      <EditOfferingDialog\n      offering={editingOffering}\n      handleClose={() => setEditingOffering(null)}\n      onSave={handleEditOffering}\n      loading={createOfferingResult.loading}\n    />\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport { Rating } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 100,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function ReviewsCards({ reviews }) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\">{reviews.student.user.name}</Typography>\n        <Typography>\n          <Box sx={{ \"& > legend\": { mt: 2 } }}>\n            <Rating value={reviews.stars} readOnly={true} />\n          </Box>\n        </Typography>\n        <Typography mt={0.5} variant=\"body1\" color=\"textSecondary\">\n          {reviews.comment}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport ReviewsCards from \"./ReviewsCards\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useQuery } from \"@apollo/client\";\nimport { READ_REVEIWS } from \"../../../graphql/queries\";\nimport { AuthContext } from \"../../../Auth\";\nimport LoadingPage from \"../../LoadingPage\";\nconst useStyles = makeStyles({\n  gridContainer: {\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n    paddingTop: \"35px\",\n  },\n});\nexport default function Reviews() {\nconst classes = useStyles();\nconst { currentUser } = React.useContext(AuthContext);\n\nconst { loading, error, data } = useQuery(READ_REVEIWS, {\n  variables: {id: currentUser.uid},\n});\n\nif (loading) return <LoadingPage />;\nif (error) return `${error}`;\n\nconst tutor = data.tutor_by_pk;\nconst reviewIds = tutor.reviews.map((review) =>{\n  return {...review};\n});\n\nreturn (\n  <div>\n    <Grid\n      container\n      spacing={2}\n      className={classes.gridContainer}\n      justify=\"center\"\n    >\n      {reviewIds.map((userReviews, i) => (\n        <Grid key={i} item xs={12} sm={6} md={4}>\n          <ReviewsCards reviews={userReviews} />\n        </Grid>\n      ))}\n    </Grid>\n  </div>\n  );\n};\n","import {\n  AccountCircle,\n  Event,\n  HourglassFull,\n  School,\n  Star,\n} from \"@mui/icons-material\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Divider from \"@mui/material/Divider\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../../../firebase\";\nimport Appointments from \"../appointments/Appointments\";\nimport Availability from \"./Availability\";\nimport Profile from \"./Profile\";\nimport Requests from \"./Requests\";\nimport Reviews from \"./Reviews\";\n\nexport default function TutorDashboard({ page }) {\n  const drawerWidth = 240;\n  const navigate = useNavigate();\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== \"open\",\n  })(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\n  const Drawer = styled(MuiDrawer, {\n    shouldForwardProp: (prop) => prop !== \"open\",\n  })(({ theme, open }) => ({\n    \"& .MuiDrawer-paper\": {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: \"border-box\",\n      ...(!open && {\n        overflowX: \"hidden\",\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing(9),\n        },\n      }),\n    },\n  }));\n\n  const theme = useTheme();\n  const fullDrawer = useMediaQuery(theme.breakpoints.up('sm'));\n\n  const [open, setOpen] = React.useState(true);\n  const [anchor, setAnchor] = React.useState(null);\n\n  const toggleDrawer = (event) => {\n    if (fullDrawer) {\n      setOpen(!open);\n    }\n    else {\n      setAnchor(anchor === null ? event.currentTarget : null);\n    }\n  };\n\n  const drawerItems = [\n    ['Appointments', <Event />],\n    ['Profile', <AccountCircle />],\n    ['Availability', <HourglassFull />],\n    ['Reviews', <Star />],\n    ['Requests', <School />],\n  ];\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" open={fullDrawer && open}>\n        <Toolbar\n          sx={{\n            pr: \"24px\", // keep right padding when drawer closed\n          }}\n        >\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer}\n            sx={{\n              marginRight: \"36px\",\n              ...(fullDrawer && open && { display: \"none\" }),\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            sx={{ flexGrow: 1 }}\n          >\n            {page}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        open={open}\n        sx={{\n          ...(!fullDrawer && { display: \"none\" }),\n        }}\n      >\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            px: [1],\n          }}\n        >\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n        <Divider />\n        <List>\n          {drawerItems.map(([name, icon], i) => {\n            return <ListItem\n              key={i}\n              selected={page === name}\n              button\n              onClick={() => {\n                navigate(`/${name.toLowerCase()}`, { replace: true });\n              }}\n            >\n              <ListItemIcon>\n                {icon}\n              </ListItemIcon>\n              <ListItemText primary={name} />\n            </ListItem>;\n          })}\n          <Divider />\n          <ListItem\n            button\n            onClick={() => {\n              auth.signOut();\n              localStorage.removeItem(\"li\");\n            }}\n          >\n            <ListItemIcon>\n              <LogoutIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Log Out\" />\n          </ListItem>\n        </List>\n      </Drawer>\n      <Menu\n        anchorEl={anchor}\n        open={!fullDrawer && anchor !== null}\n        onClose={() => setAnchor(null)}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        {drawerItems.map(([name, icon], i) => {\n          return <MenuItem\n            key={i}\n            selected={page === name}\n            onClick={() => {\n              navigate(`/${name.toLowerCase()}`, { replace: true });\n              setAnchor(null);\n            }}\n          >\n            <ListItemIcon>\n              {icon}\n            </ListItemIcon>\n            {name}\n          </MenuItem>;\n        })}\n        <Divider />\n        <MenuItem\n          onClick={() => {\n            auth.signOut();\n            localStorage.removeItem(\"li\");\n          }}\n        >\n          <ListItemIcon>\n            <LogoutIcon />\n          </ListItemIcon>\n          Log Out\n        </MenuItem>\n      </Menu>\n      <Box\n        component=\"main\"\n        sx={{\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"light\"\n              ? theme.palette.grey[100]\n              : theme.palette.grey[900],\n          flexGrow: 1,\n          height: \"100vh\",\n          overflow: \"auto\",\n        }}\n      >\n        <Toolbar />\n        {page === \"Appointments\" ? (\n          <Appointments />\n        ) : page === \"Profile\" ? (\n          <Profile />\n        ) : page === \"Availability\" ? (\n          <Availability />\n        ) : page === \"Reviews\" ? (\n          <Reviews />\n        ) : (\n          <Requests />\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport StudentDashboard from \"./student/StudentDashboard\";\nimport TutorDashboard from \"./tutor/TutorDashboard\";\nimport { AuthContext } from \"../../Auth\";\n\nexport default function Dashboard({ page }) {\n  const { userType } = React.useContext(AuthContext);\n  return userType.current === \"student\" ? (\n    <StudentDashboard page={page} />\n  ) : (\n    <TutorDashboard page={page} />\n  );\n}\n","import * as React from \"react\";\nimport {\n  Grid,\n  Card,\n  CardActionArea,\n  CardContent,\n  Typography,\n  Stack,\n  Box,\n} from \"@mui/material\";\nimport { INSERT_TUTOR, INSERT_STUDENT } from \"../graphql/mutations\";\nimport { useMutation } from \"@apollo/client\";\nimport { AuthContext } from \"../Auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Onboarding() {\n  const navigate = useNavigate();\n  const { currentUser, userType } = React.useContext(AuthContext);\n  const [insertTutor] = useMutation(INSERT_TUTOR, {\n    variables: {\n      tutor_id: currentUser.uid,\n    },\n    onCompleted: () => {\n      userType.current = \"tutor\";\n      navigate(`/profile`);\n    },\n  });\n  const [insertStudent] = useMutation(INSERT_STUDENT, {\n    variables: {\n      student_id: currentUser.uid,\n    },\n    onCompleted: () => {\n      userType.current = \"student\";\n      navigate(`/offerings`);\n    },\n  });\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      minHeight=\"80vh\"\n    >\n      <Stack spacing={4}>\n        <Typography>What do you plan on doing on this platform?</Typography>\n        <Grid container justifyContent=\"space-between\">\n          <Grid item>\n            <Card onClick={insertTutor}>\n              <CardActionArea>\n                <CardContent>\n                  <Typography>Teaching</Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n          <Grid item>\n            <Card onClick={insertStudent}>\n              <CardActionArea>\n                <CardContent>\n                  <Typography>Learning</Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        </Grid>\n      </Stack>\n    </Box>\n  );\n}\n","import LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport * as React from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { auth } from \"../firebase.js\";\n\nexport default function SignIn() {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const email = data.get(\"email\");\n    const password = data.get(\"password\");\n\n    signInWithEmailAndPassword(auth, email, password)\n      .then(() => {\n        const from = location.state?.from?.pathname || \"/\";\n        navigate(from, { replace: true });\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        console.log(errorMessage);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to=\"/signup\">\n                <Typography variant=\"body2\">\n                  Don't have an account? Sign Up\n                </Typography>\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport * as React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { auth } from \"../firebase.js\";\n\nexport default function SignUp() {\n  const navigate = useNavigate();\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const email = data.get(\"email\");\n    const password = data.get(\"password\");\n\n    createUserWithEmailAndPassword(auth, email, password)\n      .then(() => {\n        navigate(\"/onboarding\");\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        console.log(\"error \", errorMessage);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box\n          component=\"form\"\n          noValidate\n          onSubmit={handleSubmit}\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/signin\">\n                <Typography variant=\"body2\">\n                  Already have an account? Sign in\n                </Typography>\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import { teal } from '@mui/material/colors';\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport { AuthProvider } from \"./Auth\";\nimport RedirectRoute from \"./RedirectRoute\";\nimport RequireAuth from \"./RequireAuth\";\nimport RequireUserType from \"./RequireUserType\";\nimport Dashboard from \"./views/dashboard/Dashboard\";\nimport Onboarding from \"./views/Onboarding\";\nimport SignIn from \"./views/SignIn\";\nimport SignUp from \"./views/SignUp\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: teal[600],\n    },\n  },\n});\n\nexport default function App() {\n  return <ThemeProvider theme={theme}>\n    <AuthProvider>\n      <HashRouter>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n        />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Appointments\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/profile\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Profile\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/appointments\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Appointments\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/requests\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Requests\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/reviews\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Reviews\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/availability\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Availability\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/offerings\"\n            element={\n              <RequireAuth>\n                <RequireUserType>\n                  <Dashboard page={\"Offerings\"} />\n                </RequireUserType>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"signup\"\n            element={\n              <RedirectRoute>\n                <SignUp />\n              </RedirectRoute>\n            }\n          />\n          <Route\n            path=\"signin\"\n            element={\n              <RedirectRoute>\n                <SignIn />\n              </RedirectRoute>\n            }\n          />\n          <Route\n            path=\"/onboarding\"\n            element={\n              <RequireAuth>\n                <Onboarding />\n              </RequireAuth>\n            }\n          />\n          {/* Redirects */}\n          <Route path=\"*\" element={<div>404</div>} />\n        </Routes>\n      </HashRouter>\n    </AuthProvider>\n  </ThemeProvider>;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}